{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal'; // ============================== Shared ==============================\n\nconst genSharedDividerStyle = token => {\n  const {\n    componentCls,\n    sizePaddingEdgeHorizontal,\n    colorSplit,\n    lineWidth,\n    textPaddingInline,\n    orientationMargin,\n    verticalMarginInline\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${unit(lineWidth)} solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        marginInline: verticalMarginInline,\n        marginBlock: 0,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${unit(lineWidth)} solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        // Fix https://github.com/ant-design/ant-design/issues/10914\n        margin: `${unit(token.dividerHorizontalGutterMargin)} 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${unit(token.dividerHorizontalWithTextGutterMargin)} 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${unit(lineWidth)} solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-left`]: {\n        '&::before': {\n          width: `calc(${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right`]: {\n        '&::before': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(${orientationMargin} * 100%)`\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        paddingBlock: 0,\n        paddingInline: textPaddingInline\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${unit(lineWidth)} 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n};\n\nexport const prepareComponentToken = token => ({\n  textPaddingInline: '1em',\n  orientationMargin: 0.05,\n  verticalMarginInline: token.marginXS\n}); // ============================== Export ==============================\n\nexport default genStyleHooks('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG,\n    sizePaddingEdgeHorizontal: 0\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, prepareComponentToken, {\n  unitless: {\n    orientationMargin: true\n  }\n});","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/divider/style/index.js"],"names":["unit","resetComponent","genStyleHooks","mergeToken","genSharedDividerStyle","token","componentCls","sizePaddingEdgeHorizontal","colorSplit","lineWidth","textPaddingInline","orientationMargin","verticalMarginInline","Object","assign","borderBlockStart","position","top","display","height","marginInline","marginBlock","verticalAlign","borderTop","borderInlineStart","clear","width","minWidth","margin","dividerHorizontalGutterMargin","alignItems","dividerHorizontalWithTextGutterMargin","color","colorTextHeading","fontWeight","fontSize","fontSizeLG","whiteSpace","textAlign","borderBlockStartColor","borderBlockEnd","transform","content","paddingBlock","paddingInline","background","borderColor","borderStyle","borderWidth","borderInlineStartWidth","borderInlineEnd","colorText","paddingInlineStart","paddingInlineEnd","prepareComponentToken","marginXS","dividerToken","marginLG","unitless"],"mappings":"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","sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Shared ==============================\nconst genSharedDividerStyle = token => {\n  const {\n    componentCls,\n    sizePaddingEdgeHorizontal,\n    colorSplit,\n    lineWidth,\n    textPaddingInline,\n    orientationMargin,\n    verticalMarginInline\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${unit(lineWidth)} solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        marginInline: verticalMarginInline,\n        marginBlock: 0,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${unit(lineWidth)} solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        // Fix https://github.com/ant-design/ant-design/issues/10914\n        margin: `${unit(token.dividerHorizontalGutterMargin)} 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${unit(token.dividerHorizontalWithTextGutterMargin)} 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${unit(lineWidth)} solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-left`]: {\n        '&::before': {\n          width: `calc(${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right`]: {\n        '&::before': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(${orientationMargin} * 100%)`\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        paddingBlock: 0,\n        paddingInline: textPaddingInline\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${unit(lineWidth)} 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n};\nexport const prepareComponentToken = token => ({\n  textPaddingInline: '1em',\n  orientationMargin: 0.05,\n  verticalMarginInline: token.marginXS\n});\n// ============================== Export ==============================\nexport default genStyleHooks('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG,\n    sizePaddingEdgeHorizontal: 0\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, prepareComponentToken, {\n  unitless: {\n    orientationMargin: true\n  }\n});"]},"metadata":{},"sourceType":"module"}