{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { generate as generateColor } from '@ant-design/colors';\nimport { updateCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport { getShadowRoot } from \"rc-util/es/Dom/shadow\";\nimport warn from \"rc-util/es/warning\";\nimport React, { useContext, useEffect } from 'react';\nimport IconContext from \"./components/Context\";\n\nfunction camelCase(input) {\n  return input.replace(/-(.)/g, function (match, g) {\n    return g.toUpperCase();\n  });\n}\n\nexport function warning(valid, message) {\n  warn(valid, \"[@ant-design/icons] \".concat(message));\n}\nexport function isIconDefinition(target) {\n  return _typeof(target) === 'object' && typeof target.name === 'string' && typeof target.theme === 'string' && (_typeof(target.icon) === 'object' || typeof target.icon === 'function');\n}\nexport function normalizeAttrs() {\n  var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.keys(attrs).reduce(function (acc, key) {\n    var val = attrs[key];\n\n    switch (key) {\n      case 'class':\n        acc.className = val;\n        delete acc.class;\n        break;\n\n      default:\n        delete acc[key];\n        acc[camelCase(key)] = val;\n    }\n\n    return acc;\n  }, {});\n}\nexport function generate(node, key, rootProps) {\n  if (!rootProps) {\n    return /*#__PURE__*/React.createElement(node.tag, _objectSpread({\n      key: key\n    }, normalizeAttrs(node.attrs)), (node.children || []).map(function (child, index) {\n      return generate(child, \"\".concat(key, \"-\").concat(node.tag, \"-\").concat(index));\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(node.tag, _objectSpread(_objectSpread({\n    key: key\n  }, normalizeAttrs(node.attrs)), rootProps), (node.children || []).map(function (child, index) {\n    return generate(child, \"\".concat(key, \"-\").concat(node.tag, \"-\").concat(index));\n  }));\n}\nexport function getSecondaryColor(primaryColor) {\n  // choose the second color\n  return generateColor(primaryColor)[0];\n}\nexport function normalizeTwoToneColors(twoToneColor) {\n  if (!twoToneColor) {\n    return [];\n  }\n\n  return Array.isArray(twoToneColor) ? twoToneColor : [twoToneColor];\n} // These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n\nexport var svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor',\n  'aria-hidden': 'true',\n  focusable: 'false'\n};\nexport var iconStyles = \"\\n.anticon {\\n  display: inline-flex;\\n  alignItems: center;\\n  color: inherit;\\n  font-style: normal;\\n  line-height: 0;\\n  text-align: center;\\n  text-transform: none;\\n  vertical-align: -0.125em;\\n  text-rendering: optimizeLegibility;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n.anticon > * {\\n  line-height: 1;\\n}\\n\\n.anticon svg {\\n  display: inline-block;\\n}\\n\\n.anticon::before {\\n  display: none;\\n}\\n\\n.anticon .anticon-icon {\\n  display: block;\\n}\\n\\n.anticon[tabindex] {\\n  cursor: pointer;\\n}\\n\\n.anticon-spin::before,\\n.anticon-spin {\\n  display: inline-block;\\n  -webkit-animation: loadingCircle 1s infinite linear;\\n  animation: loadingCircle 1s infinite linear;\\n}\\n\\n@-webkit-keyframes loadingCircle {\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes loadingCircle {\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\";\nexport var useInsertStyles = function useInsertStyles(eleRef) {\n  var _useContext = useContext(IconContext),\n      csp = _useContext.csp,\n      prefixCls = _useContext.prefixCls;\n\n  var mergedStyleStr = iconStyles;\n\n  if (prefixCls) {\n    mergedStyleStr = mergedStyleStr.replace(/anticon/g, prefixCls);\n  }\n\n  useEffect(function () {\n    var ele = eleRef.current;\n    var shadowRoot = getShadowRoot(ele);\n    updateCSS(mergedStyleStr, '@ant-design-icons', {\n      prepend: true,\n      csp: csp,\n      attachTo: shadowRoot\n    });\n  }, []);\n};","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/@ant-design/icons/es/utils.js"],"names":["_objectSpread","_typeof","generate","generateColor","updateCSS","getShadowRoot","warn","React","useContext","useEffect","IconContext","camelCase","input","replace","match","g","toUpperCase","warning","valid","message","concat","isIconDefinition","target","name","theme","icon","normalizeAttrs","attrs","arguments","length","undefined","Object","keys","reduce","acc","key","val","className","class","node","rootProps","createElement","tag","children","map","child","index","getSecondaryColor","primaryColor","normalizeTwoToneColors","twoToneColor","Array","isArray","svgBaseProps","width","height","fill","focusable","iconStyles","useInsertStyles","eleRef","_useContext","csp","prefixCls","mergedStyleStr","ele","current","shadowRoot","prepend","attachTo"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { generate as generateColor } from '@ant-design/colors';\nimport { updateCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport { getShadowRoot } from \"rc-util/es/Dom/shadow\";\nimport warn from \"rc-util/es/warning\";\nimport React, { useContext, useEffect } from 'react';\nimport IconContext from \"./components/Context\";\nfunction camelCase(input) {\n  return input.replace(/-(.)/g, function (match, g) {\n    return g.toUpperCase();\n  });\n}\nexport function warning(valid, message) {\n  warn(valid, \"[@ant-design/icons] \".concat(message));\n}\nexport function isIconDefinition(target) {\n  return _typeof(target) === 'object' && typeof target.name === 'string' && typeof target.theme === 'string' && (_typeof(target.icon) === 'object' || typeof target.icon === 'function');\n}\nexport function normalizeAttrs() {\n  var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.keys(attrs).reduce(function (acc, key) {\n    var val = attrs[key];\n    switch (key) {\n      case 'class':\n        acc.className = val;\n        delete acc.class;\n        break;\n      default:\n        delete acc[key];\n        acc[camelCase(key)] = val;\n    }\n    return acc;\n  }, {});\n}\nexport function generate(node, key, rootProps) {\n  if (!rootProps) {\n    return /*#__PURE__*/React.createElement(node.tag, _objectSpread({\n      key: key\n    }, normalizeAttrs(node.attrs)), (node.children || []).map(function (child, index) {\n      return generate(child, \"\".concat(key, \"-\").concat(node.tag, \"-\").concat(index));\n    }));\n  }\n  return /*#__PURE__*/React.createElement(node.tag, _objectSpread(_objectSpread({\n    key: key\n  }, normalizeAttrs(node.attrs)), rootProps), (node.children || []).map(function (child, index) {\n    return generate(child, \"\".concat(key, \"-\").concat(node.tag, \"-\").concat(index));\n  }));\n}\nexport function getSecondaryColor(primaryColor) {\n  // choose the second color\n  return generateColor(primaryColor)[0];\n}\nexport function normalizeTwoToneColors(twoToneColor) {\n  if (!twoToneColor) {\n    return [];\n  }\n  return Array.isArray(twoToneColor) ? twoToneColor : [twoToneColor];\n}\n\n// These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\nexport var svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor',\n  'aria-hidden': 'true',\n  focusable: 'false'\n};\nexport var iconStyles = \"\\n.anticon {\\n  display: inline-flex;\\n  alignItems: center;\\n  color: inherit;\\n  font-style: normal;\\n  line-height: 0;\\n  text-align: center;\\n  text-transform: none;\\n  vertical-align: -0.125em;\\n  text-rendering: optimizeLegibility;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n.anticon > * {\\n  line-height: 1;\\n}\\n\\n.anticon svg {\\n  display: inline-block;\\n}\\n\\n.anticon::before {\\n  display: none;\\n}\\n\\n.anticon .anticon-icon {\\n  display: block;\\n}\\n\\n.anticon[tabindex] {\\n  cursor: pointer;\\n}\\n\\n.anticon-spin::before,\\n.anticon-spin {\\n  display: inline-block;\\n  -webkit-animation: loadingCircle 1s infinite linear;\\n  animation: loadingCircle 1s infinite linear;\\n}\\n\\n@-webkit-keyframes loadingCircle {\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes loadingCircle {\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\";\nexport var useInsertStyles = function useInsertStyles(eleRef) {\n  var _useContext = useContext(IconContext),\n    csp = _useContext.csp,\n    prefixCls = _useContext.prefixCls;\n  var mergedStyleStr = iconStyles;\n  if (prefixCls) {\n    mergedStyleStr = mergedStyleStr.replace(/anticon/g, prefixCls);\n  }\n  useEffect(function () {\n    var ele = eleRef.current;\n    var shadowRoot = getShadowRoot(ele);\n    updateCSS(mergedStyleStr, '@ant-design-icons', {\n      prepend: true,\n      csp: csp,\n      attachTo: shadowRoot\n    });\n  }, []);\n};"]},"metadata":{},"sourceType":"module"}