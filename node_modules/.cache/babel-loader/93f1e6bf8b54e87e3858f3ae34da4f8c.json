{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"renderTabBar\"],\n    _excluded2 = [\"label\", \"key\"]; // zombieJ: To compatible with `renderTabBar` usage.\n\nimport * as React from 'react';\nimport TabNavList from '.';\nimport TabContext from \"../TabContext\";\nimport TabPane from \"../TabPanelList/TabPane\"; // We have to create a TabNavList components.\n\nvar TabNavListWrapper = function TabNavListWrapper(_ref) {\n  var renderTabBar = _ref.renderTabBar,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useContext = React.useContext(TabContext),\n      tabs = _React$useContext.tabs;\n\n  if (renderTabBar) {\n    var tabNavBarProps = _objectSpread(_objectSpread({}, restProps), {}, {\n      // Legacy support. We do not use this actually\n      panes: tabs.map(function (_ref2) {\n        var label = _ref2.label,\n            key = _ref2.key,\n            restTabProps = _objectWithoutProperties(_ref2, _excluded2);\n\n        return /*#__PURE__*/React.createElement(TabPane, _extends({\n          tab: label,\n          key: key,\n          tabKey: key\n        }, restTabProps));\n      })\n    });\n\n    return renderTabBar(tabNavBarProps, TabNavList);\n  }\n\n  return /*#__PURE__*/React.createElement(TabNavList, restProps);\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  TabNavListWrapper.displayName = 'TabNavListWrapper';\n}\n\nexport default TabNavListWrapper;","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-tabs/es/TabNavList/Wrapper.js"],"names":["_extends","_objectSpread","_objectWithoutProperties","_excluded","_excluded2","React","TabNavList","TabContext","TabPane","TabNavListWrapper","_ref","renderTabBar","restProps","_React$useContext","useContext","tabs","tabNavBarProps","panes","map","_ref2","label","key","restTabProps","createElement","tab","tabKey","process","env","NODE_ENV","displayName"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,IAAIC,SAAS,GAAG,CAAC,cAAD,CAAhB;AAAA,IACEC,UAAU,GAAG,CAAC,OAAD,EAAU,KAAV,CADf,C,CAEA;;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,GAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,yBAApB,C,CACA;;AACA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AACvD,MAAIC,YAAY,GAAGD,IAAI,CAACC,YAAxB;AAAA,MACEC,SAAS,GAAGV,wBAAwB,CAACQ,IAAD,EAAOP,SAAP,CADtC;;AAEA,MAAIU,iBAAiB,GAAGR,KAAK,CAACS,UAAN,CAAiBP,UAAjB,CAAxB;AAAA,MACEQ,IAAI,GAAGF,iBAAiB,CAACE,IAD3B;;AAEA,MAAIJ,YAAJ,EAAkB;AAChB,QAAIK,cAAc,GAAGf,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKW,SAAL,CAAd,EAA+B,EAA/B,EAAmC;AACnE;AACAK,MAAAA,KAAK,EAAEF,IAAI,CAACG,GAAL,CAAS,UAAUC,KAAV,EAAiB;AAC/B,YAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AAAA,YACEC,GAAG,GAAGF,KAAK,CAACE,GADd;AAAA,YAEEC,YAAY,GAAGpB,wBAAwB,CAACiB,KAAD,EAAQf,UAAR,CAFzC;;AAGA,eAAO,aAAaC,KAAK,CAACkB,aAAN,CAAoBf,OAApB,EAA6BR,QAAQ,CAAC;AACxDwB,UAAAA,GAAG,EAAEJ,KADmD;AAExDC,UAAAA,GAAG,EAAEA,GAFmD;AAGxDI,UAAAA,MAAM,EAAEJ;AAHgD,SAAD,EAItDC,YAJsD,CAArC,CAApB;AAKD,OATM;AAF4D,KAAnC,CAAlC;;AAaA,WAAOX,YAAY,CAACK,cAAD,EAAiBV,UAAjB,CAAnB;AACD;;AACD,SAAO,aAAaD,KAAK,CAACkB,aAAN,CAAoBjB,UAApB,EAAgCM,SAAhC,CAApB;AACD,CAtBD;;AAuBA,IAAIc,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCnB,EAAAA,iBAAiB,CAACoB,WAAlB,GAAgC,mBAAhC;AACD;;AACD,eAAepB,iBAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"renderTabBar\"],\n  _excluded2 = [\"label\", \"key\"];\n// zombieJ: To compatible with `renderTabBar` usage.\n\nimport * as React from 'react';\nimport TabNavList from '.';\nimport TabContext from \"../TabContext\";\nimport TabPane from \"../TabPanelList/TabPane\";\n// We have to create a TabNavList components.\nvar TabNavListWrapper = function TabNavListWrapper(_ref) {\n  var renderTabBar = _ref.renderTabBar,\n    restProps = _objectWithoutProperties(_ref, _excluded);\n  var _React$useContext = React.useContext(TabContext),\n    tabs = _React$useContext.tabs;\n  if (renderTabBar) {\n    var tabNavBarProps = _objectSpread(_objectSpread({}, restProps), {}, {\n      // Legacy support. We do not use this actually\n      panes: tabs.map(function (_ref2) {\n        var label = _ref2.label,\n          key = _ref2.key,\n          restTabProps = _objectWithoutProperties(_ref2, _excluded2);\n        return /*#__PURE__*/React.createElement(TabPane, _extends({\n          tab: label,\n          key: key,\n          tabKey: key\n        }, restTabProps));\n      })\n    });\n    return renderTabBar(tabNavBarProps, TabNavList);\n  }\n  return /*#__PURE__*/React.createElement(TabNavList, restProps);\n};\nif (process.env.NODE_ENV !== 'production') {\n  TabNavListWrapper.displayName = 'TabNavListWrapper';\n}\nexport default TabNavListWrapper;"]},"metadata":{},"sourceType":"module"}