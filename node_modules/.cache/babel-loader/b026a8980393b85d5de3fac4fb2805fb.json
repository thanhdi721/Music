{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport React from 'react';\nexport function fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, showMeridiem) {\n  var timeFormat = ''; // Base HH:mm:ss\n\n  var cells = [];\n\n  if (showHour) {\n    cells.push(showMeridiem ? 'hh' : 'HH');\n  }\n\n  if (showMinute) {\n    cells.push('mm');\n  }\n\n  if (showSecond) {\n    cells.push('ss');\n  }\n\n  timeFormat = cells.join(':'); // Millisecond\n\n  if (showMillisecond) {\n    timeFormat += '.SSS';\n  } // Meridiem\n\n\n  if (showMeridiem) {\n    timeFormat += ' A';\n  }\n\n  return timeFormat;\n}\n/**\n * Used for `useFilledProps` since it already in the React.useMemo\n */\n\nfunction fillLocale(locale, showHour, showMinute, showSecond, showMillisecond, use12Hours) {\n  // Not fill `monthFormat` since `locale.shortMonths` handle this\n  // Not fill `cellMeridiemFormat` since AM & PM by default\n  var fieldDateTimeFormat = locale.fieldDateTimeFormat,\n      fieldDateFormat = locale.fieldDateFormat,\n      fieldTimeFormat = locale.fieldTimeFormat,\n      fieldMonthFormat = locale.fieldMonthFormat,\n      fieldYearFormat = locale.fieldYearFormat,\n      fieldWeekFormat = locale.fieldWeekFormat,\n      fieldQuarterFormat = locale.fieldQuarterFormat,\n      yearFormat = locale.yearFormat,\n      cellYearFormat = locale.cellYearFormat,\n      cellQuarterFormat = locale.cellQuarterFormat,\n      dayFormat = locale.dayFormat,\n      cellDateFormat = locale.cellDateFormat;\n  var timeFormat = fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, use12Hours);\n  return _objectSpread(_objectSpread({}, locale), {}, {\n    fieldDateTimeFormat: fieldDateTimeFormat || \"YYYY-MM-DD \".concat(timeFormat),\n    fieldDateFormat: fieldDateFormat || 'YYYY-MM-DD',\n    fieldTimeFormat: fieldTimeFormat || timeFormat,\n    fieldMonthFormat: fieldMonthFormat || 'YYYY-MM',\n    fieldYearFormat: fieldYearFormat || 'YYYY',\n    fieldWeekFormat: fieldWeekFormat || 'gggg-wo',\n    fieldQuarterFormat: fieldQuarterFormat || 'YYYY-[Q]Q',\n    yearFormat: yearFormat || 'YYYY',\n    cellYearFormat: cellYearFormat || 'YYYY',\n    cellQuarterFormat: cellQuarterFormat || '[Q]Q',\n    cellDateFormat: cellDateFormat || dayFormat || 'D'\n  });\n}\n/**\n * Fill locale format as start up\n */\n\n\nexport default function useLocale(locale, showProps) {\n  var showHour = showProps.showHour,\n      showMinute = showProps.showMinute,\n      showSecond = showProps.showSecond,\n      showMillisecond = showProps.showMillisecond,\n      use12Hours = showProps.use12Hours;\n  return React.useMemo(function () {\n    return fillLocale(locale, showHour, showMinute, showSecond, showMillisecond, use12Hours);\n  }, [locale, showHour, showMinute, showSecond, showMillisecond, use12Hours]);\n}","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-picker/es/hooks/useLocale.js"],"names":["_objectSpread","React","fillTimeFormat","showHour","showMinute","showSecond","showMillisecond","showMeridiem","timeFormat","cells","push","join","fillLocale","locale","use12Hours","fieldDateTimeFormat","fieldDateFormat","fieldTimeFormat","fieldMonthFormat","fieldYearFormat","fieldWeekFormat","fieldQuarterFormat","yearFormat","cellYearFormat","cellQuarterFormat","dayFormat","cellDateFormat","concat","useLocale","showProps","useMemo"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport React from 'react';\nexport function fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, showMeridiem) {\n  var timeFormat = '';\n\n  // Base HH:mm:ss\n  var cells = [];\n  if (showHour) {\n    cells.push(showMeridiem ? 'hh' : 'HH');\n  }\n  if (showMinute) {\n    cells.push('mm');\n  }\n  if (showSecond) {\n    cells.push('ss');\n  }\n  timeFormat = cells.join(':');\n\n  // Millisecond\n  if (showMillisecond) {\n    timeFormat += '.SSS';\n  }\n\n  // Meridiem\n  if (showMeridiem) {\n    timeFormat += ' A';\n  }\n  return timeFormat;\n}\n\n/**\n * Used for `useFilledProps` since it already in the React.useMemo\n */\nfunction fillLocale(locale, showHour, showMinute, showSecond, showMillisecond, use12Hours) {\n  // Not fill `monthFormat` since `locale.shortMonths` handle this\n  // Not fill `cellMeridiemFormat` since AM & PM by default\n  var fieldDateTimeFormat = locale.fieldDateTimeFormat,\n    fieldDateFormat = locale.fieldDateFormat,\n    fieldTimeFormat = locale.fieldTimeFormat,\n    fieldMonthFormat = locale.fieldMonthFormat,\n    fieldYearFormat = locale.fieldYearFormat,\n    fieldWeekFormat = locale.fieldWeekFormat,\n    fieldQuarterFormat = locale.fieldQuarterFormat,\n    yearFormat = locale.yearFormat,\n    cellYearFormat = locale.cellYearFormat,\n    cellQuarterFormat = locale.cellQuarterFormat,\n    dayFormat = locale.dayFormat,\n    cellDateFormat = locale.cellDateFormat;\n  var timeFormat = fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, use12Hours);\n  return _objectSpread(_objectSpread({}, locale), {}, {\n    fieldDateTimeFormat: fieldDateTimeFormat || \"YYYY-MM-DD \".concat(timeFormat),\n    fieldDateFormat: fieldDateFormat || 'YYYY-MM-DD',\n    fieldTimeFormat: fieldTimeFormat || timeFormat,\n    fieldMonthFormat: fieldMonthFormat || 'YYYY-MM',\n    fieldYearFormat: fieldYearFormat || 'YYYY',\n    fieldWeekFormat: fieldWeekFormat || 'gggg-wo',\n    fieldQuarterFormat: fieldQuarterFormat || 'YYYY-[Q]Q',\n    yearFormat: yearFormat || 'YYYY',\n    cellYearFormat: cellYearFormat || 'YYYY',\n    cellQuarterFormat: cellQuarterFormat || '[Q]Q',\n    cellDateFormat: cellDateFormat || dayFormat || 'D'\n  });\n}\n\n/**\n * Fill locale format as start up\n */\nexport default function useLocale(locale, showProps) {\n  var showHour = showProps.showHour,\n    showMinute = showProps.showMinute,\n    showSecond = showProps.showSecond,\n    showMillisecond = showProps.showMillisecond,\n    use12Hours = showProps.use12Hours;\n  return React.useMemo(function () {\n    return fillLocale(locale, showHour, showMinute, showSecond, showMillisecond, use12Hours);\n  }, [locale, showHour, showMinute, showSecond, showMillisecond, use12Hours]);\n}"]},"metadata":{},"sourceType":"module"}