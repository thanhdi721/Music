{"ast":null,"code":"import { resetComponent } from '../../style';\nimport { genCollapseMotion } from '../../style/motion';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport genDraggerStyle from './dragger';\nimport genListStyle from './list';\nimport genMotionStyle from './motion';\nimport { genPictureCardStyle, genPictureStyle } from './picture';\nimport genRtlStyle from './rtl';\n\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    colorTextDisabled\n  } = token;\n  return {\n    [`${componentCls}-wrapper`]: Object.assign(Object.assign({}, resetComponent(token)), {\n      [componentCls]: {\n        outline: 0,\n        \"input[type='file']\": {\n          cursor: 'pointer'\n        }\n      },\n      [`${componentCls}-select`]: {\n        display: 'inline-block'\n      },\n      [`${componentCls}-disabled`]: {\n        color: colorTextDisabled,\n        cursor: 'not-allowed'\n      }\n    })\n  };\n};\n\nexport const prepareComponentToken = token => ({\n  actionsColor: token.colorTextDescription\n}); // ============================== Export ==============================\n\nexport default genStyleHooks('Upload', token => {\n  const {\n    fontSizeHeading3,\n    fontHeight,\n    lineWidth,\n    controlHeightLG,\n    calc\n  } = token;\n  const uploadToken = mergeToken(token, {\n    uploadThumbnailSize: calc(fontSizeHeading3).mul(2).equal(),\n    uploadProgressOffset: calc(calc(fontHeight).div(2)).add(lineWidth).equal(),\n    uploadPicCardSize: calc(controlHeightLG).mul(2.55).equal()\n  });\n  return [genBaseStyle(uploadToken), genDraggerStyle(uploadToken), genPictureStyle(uploadToken), genPictureCardStyle(uploadToken), genListStyle(uploadToken), genMotionStyle(uploadToken), genRtlStyle(uploadToken), genCollapseMotion(uploadToken)];\n}, prepareComponentToken);","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/upload/style/index.js"],"names":["resetComponent","genCollapseMotion","genStyleHooks","mergeToken","genDraggerStyle","genListStyle","genMotionStyle","genPictureCardStyle","genPictureStyle","genRtlStyle","genBaseStyle","token","componentCls","colorTextDisabled","Object","assign","outline","cursor","display","color","prepareComponentToken","actionsColor","colorTextDescription","fontSizeHeading3","fontHeight","lineWidth","controlHeightLG","calc","uploadToken","uploadThumbnailSize","mul","equal","uploadProgressOffset","div","add","uploadPicCardSize"],"mappings":"AAAA,SAASA,cAAT,QAA+B,aAA/B;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,sBAA1C;AACA,OAAOC,eAAP,MAA4B,WAA5B;AACA,OAAOC,YAAP,MAAyB,QAAzB;AACA,OAAOC,cAAP,MAA2B,UAA3B;AACA,SAASC,mBAAT,EAA8BC,eAA9B,QAAqD,WAArD;AACA,OAAOC,WAAP,MAAwB,OAAxB;;AACA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA;AAFI,MAGFF,KAHJ;AAIA,SAAO;AACL,KAAE,GAAEC,YAAa,UAAjB,GAA6BE,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBf,cAAc,CAACW,KAAD,CAAhC,CAAd,EAAwD;AACnF,OAACC,YAAD,GAAgB;AACdI,QAAAA,OAAO,EAAE,CADK;AAEd,8BAAsB;AACpBC,UAAAA,MAAM,EAAE;AADY;AAFR,OADmE;AAOnF,OAAE,GAAEL,YAAa,SAAjB,GAA4B;AAC1BM,QAAAA,OAAO,EAAE;AADiB,OAPuD;AAUnF,OAAE,GAAEN,YAAa,WAAjB,GAA8B;AAC5BO,QAAAA,KAAK,EAAEN,iBADqB;AAE5BI,QAAAA,MAAM,EAAE;AAFoB;AAVqD,KAAxD;AADxB,GAAP;AAiBD,CAtBD;;AAuBA,OAAO,MAAMG,qBAAqB,GAAGT,KAAK,KAAK;AAC7CU,EAAAA,YAAY,EAAEV,KAAK,CAACW;AADyB,CAAL,CAAnC,C,CAGP;;AACA,eAAepB,aAAa,CAAC,QAAD,EAAWS,KAAK,IAAI;AAC9C,QAAM;AACJY,IAAAA,gBADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA;AALI,MAMFhB,KANJ;AAOA,QAAMiB,WAAW,GAAGzB,UAAU,CAACQ,KAAD,EAAQ;AACpCkB,IAAAA,mBAAmB,EAAEF,IAAI,CAACJ,gBAAD,CAAJ,CAAuBO,GAAvB,CAA2B,CAA3B,EAA8BC,KAA9B,EADe;AAEpCC,IAAAA,oBAAoB,EAAEL,IAAI,CAACA,IAAI,CAACH,UAAD,CAAJ,CAAiBS,GAAjB,CAAqB,CAArB,CAAD,CAAJ,CAA8BC,GAA9B,CAAkCT,SAAlC,EAA6CM,KAA7C,EAFc;AAGpCI,IAAAA,iBAAiB,EAAER,IAAI,CAACD,eAAD,CAAJ,CAAsBI,GAAtB,CAA0B,IAA1B,EAAgCC,KAAhC;AAHiB,GAAR,CAA9B;AAKA,SAAO,CAACrB,YAAY,CAACkB,WAAD,CAAb,EAA4BxB,eAAe,CAACwB,WAAD,CAA3C,EAA0DpB,eAAe,CAACoB,WAAD,CAAzE,EAAwFrB,mBAAmB,CAACqB,WAAD,CAA3G,EAA0HvB,YAAY,CAACuB,WAAD,CAAtI,EAAqJtB,cAAc,CAACsB,WAAD,CAAnK,EAAkLnB,WAAW,CAACmB,WAAD,CAA7L,EAA4M3B,iBAAiB,CAAC2B,WAAD,CAA7N,CAAP;AACD,CAd2B,EAczBR,qBAdyB,CAA5B","sourcesContent":["import { resetComponent } from '../../style';\nimport { genCollapseMotion } from '../../style/motion';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport genDraggerStyle from './dragger';\nimport genListStyle from './list';\nimport genMotionStyle from './motion';\nimport { genPictureCardStyle, genPictureStyle } from './picture';\nimport genRtlStyle from './rtl';\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    colorTextDisabled\n  } = token;\n  return {\n    [`${componentCls}-wrapper`]: Object.assign(Object.assign({}, resetComponent(token)), {\n      [componentCls]: {\n        outline: 0,\n        \"input[type='file']\": {\n          cursor: 'pointer'\n        }\n      },\n      [`${componentCls}-select`]: {\n        display: 'inline-block'\n      },\n      [`${componentCls}-disabled`]: {\n        color: colorTextDisabled,\n        cursor: 'not-allowed'\n      }\n    })\n  };\n};\nexport const prepareComponentToken = token => ({\n  actionsColor: token.colorTextDescription\n});\n// ============================== Export ==============================\nexport default genStyleHooks('Upload', token => {\n  const {\n    fontSizeHeading3,\n    fontHeight,\n    lineWidth,\n    controlHeightLG,\n    calc\n  } = token;\n  const uploadToken = mergeToken(token, {\n    uploadThumbnailSize: calc(fontSizeHeading3).mul(2).equal(),\n    uploadProgressOffset: calc(calc(fontHeight).div(2)).add(lineWidth).equal(),\n    uploadPicCardSize: calc(controlHeightLG).mul(2.55).equal()\n  });\n  return [genBaseStyle(uploadToken), genDraggerStyle(uploadToken), genPictureStyle(uploadToken), genPictureCardStyle(uploadToken), genListStyle(uploadToken), genMotionStyle(uploadToken), genRtlStyle(uploadToken), genCollapseMotion(uploadToken)];\n}, prepareComponentToken);"]},"metadata":{},"sourceType":"module"}