{"ast":null,"code":"import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genPresetColor, genStyleHooks, mergeToken } from '../../theme/internal';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\n\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeShadowSize,\n    motionDurationSlow,\n    textFontSize,\n    textFontSizeSM,\n    statusSize,\n    dotSize,\n    textFontWeight,\n    indicatorHeight,\n    indicatorHeightSM,\n    marginXS,\n    calc\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const colorPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${componentCls} ${componentCls}-color-${colorKey}`]: {\n        background: darkColor,\n        [`&:not(${componentCls}-count)`]: {\n          color: darkColor\n        },\n        'a:hover &': {\n          background: darkColor\n        }\n      }\n    };\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        zIndex: token.indicatorZIndex,\n        minWidth: indicatorHeight,\n        height: indicatorHeight,\n        color: token.badgeTextColor,\n        fontWeight: textFontWeight,\n        fontSize: textFontSize,\n        lineHeight: unit(indicatorHeight),\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: calc(indicatorHeight).div(2).equal(),\n        boxShadow: `0 0 0 ${unit(badgeShadowSize)} ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: indicatorHeightSM,\n        height: indicatorHeightSM,\n        fontSize: textFontSizeSM,\n        lineHeight: unit(indicatorHeightSM),\n        borderRadius: calc(indicatorHeightSM).div(2).equal()\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${unit(token.paddingXS)}`,\n        bdi: {\n          unicodeBidi: 'plaintext'\n        }\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.indicatorZIndex,\n        width: dotSize,\n        minWidth: dotSize,\n        height: dotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${unit(badgeShadowSize)} ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: '1s',\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: {\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          // Magic number, but seems better experience\n          display: 'inline-block',\n          width: statusSize,\n          height: statusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          overflow: 'visible',\n          color: token.colorInfo,\n          backgroundColor: token.colorInfo,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        },\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }\n    }), colorPreset), {\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: indicatorHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: indicatorHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          transform: 'translate(-50%, -50%)'\n        }\n      }\n    })\n  };\n}; // ============================== Export ==============================\n\n\nexport const prepareToken = token => {\n  const {\n    fontHeight,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = fontHeight;\n  const badgeShadowSize = lineWidth;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeTextColor,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return badgeToken;\n};\nexport const prepareComponentToken = token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth\n  } = token;\n  return {\n    indicatorZIndex: 'auto',\n    indicatorHeight: Math.round(fontSize * lineHeight) - 2 * lineWidth,\n    indicatorHeightSM: fontSize,\n    dotSize: fontSizeSM / 2,\n    textFontSize: fontSizeSM,\n    textFontSizeSM: fontSizeSM,\n    textFontWeight: 'normal',\n    statusSize: fontSizeSM / 2\n  };\n};\nexport default genStyleHooks('Badge', token => {\n  const badgeToken = prepareToken(token);\n  return genSharedBadgeStyle(badgeToken);\n}, prepareComponentToken);","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/badge/style/index.js"],"names":["Keyframes","unit","resetComponent","genPresetColor","genStyleHooks","mergeToken","antStatusProcessing","transform","opacity","antZoomBadgeIn","antZoomBadgeOut","antNoWrapperZoomBadgeIn","antNoWrapperZoomBadgeOut","antBadgeLoadingCircle","transformOrigin","genSharedBadgeStyle","token","componentCls","iconCls","antCls","badgeShadowSize","motionDurationSlow","textFontSize","textFontSizeSM","statusSize","dotSize","textFontWeight","indicatorHeight","indicatorHeightSM","marginXS","calc","numberPrefixCls","colorPreset","colorKey","_ref","darkColor","background","color","Object","assign","position","display","width","lineHeight","zIndex","indicatorZIndex","minWidth","height","badgeTextColor","fontWeight","fontSize","whiteSpace","textAlign","badgeColor","borderRadius","div","equal","boxShadow","badgeShadowColor","transition","motionDurationMid","a","badgeColorHover","padding","paddingXS","bdi","unicodeBidi","top","insetInlineEnd","animationName","animationDuration","animationIterationCount","animationTimingFunction","verticalAlign","backgroundColor","colorSuccess","overflow","colorInfo","insetInlineStart","borderWidth","borderStyle","borderColor","badgeProcessingDuration","content","colorTextPlaceholder","colorError","colorWarning","marginInlineStart","colorText","motionEaseOutBack","animationFillMode","WebkitTransformStyle","WebkitBackfaceVisibility","margin","direction","prepareToken","fontHeight","lineWidth","colorBorderBg","badgeFontHeight","colorBgContainer","colorErrorHover","badgeToken","badgeRibbonOffset","badgeRibbonCornerTransform","badgeRibbonCornerFilter","prepareComponentToken","fontSizeSM","Math","round"],"mappings":"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","sourcesContent":["import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genPresetColor, genStyleHooks, mergeToken } from '../../theme/internal';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeShadowSize,\n    motionDurationSlow,\n    textFontSize,\n    textFontSizeSM,\n    statusSize,\n    dotSize,\n    textFontWeight,\n    indicatorHeight,\n    indicatorHeightSM,\n    marginXS,\n    calc\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const colorPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${componentCls} ${componentCls}-color-${colorKey}`]: {\n        background: darkColor,\n        [`&:not(${componentCls}-count)`]: {\n          color: darkColor\n        },\n        'a:hover &': {\n          background: darkColor\n        }\n      }\n    };\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        zIndex: token.indicatorZIndex,\n        minWidth: indicatorHeight,\n        height: indicatorHeight,\n        color: token.badgeTextColor,\n        fontWeight: textFontWeight,\n        fontSize: textFontSize,\n        lineHeight: unit(indicatorHeight),\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: calc(indicatorHeight).div(2).equal(),\n        boxShadow: `0 0 0 ${unit(badgeShadowSize)} ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: indicatorHeightSM,\n        height: indicatorHeightSM,\n        fontSize: textFontSizeSM,\n        lineHeight: unit(indicatorHeightSM),\n        borderRadius: calc(indicatorHeightSM).div(2).equal()\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${unit(token.paddingXS)}`,\n        bdi: {\n          unicodeBidi: 'plaintext'\n        }\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.indicatorZIndex,\n        width: dotSize,\n        minWidth: dotSize,\n        height: dotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${unit(badgeShadowSize)} ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: '1s',\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: {\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          // Magic number, but seems better experience\n          display: 'inline-block',\n          width: statusSize,\n          height: statusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          overflow: 'visible',\n          color: token.colorInfo,\n          backgroundColor: token.colorInfo,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        },\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }\n    }), colorPreset), {\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: indicatorHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: indicatorHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          transform: 'translate(-50%, -50%)'\n        }\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport const prepareToken = token => {\n  const {\n    fontHeight,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = fontHeight;\n  const badgeShadowSize = lineWidth;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeTextColor,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return badgeToken;\n};\nexport const prepareComponentToken = token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth\n  } = token;\n  return {\n    indicatorZIndex: 'auto',\n    indicatorHeight: Math.round(fontSize * lineHeight) - 2 * lineWidth,\n    indicatorHeightSM: fontSize,\n    dotSize: fontSizeSM / 2,\n    textFontSize: fontSizeSM,\n    textFontSizeSM: fontSizeSM,\n    textFontWeight: 'normal',\n    statusSize: fontSizeSM / 2\n  };\n};\nexport default genStyleHooks('Badge', token => {\n  const badgeToken = prepareToken(token);\n  return genSharedBadgeStyle(badgeToken);\n}, prepareComponentToken);"]},"metadata":{},"sourceType":"module"}