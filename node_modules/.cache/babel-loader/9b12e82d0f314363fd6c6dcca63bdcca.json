{"ast":null,"code":"\"use client\";\n\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport React, { forwardRef } from 'react';\nimport IconWrapper from './IconWrapper';\nconst InnerLoadingIcon = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    prefixCls,\n    className,\n    style,\n    iconClassName\n  } = _ref;\n  const mergedIconCls = classNames(`${prefixCls}-loading-icon`, className);\n  return /*#__PURE__*/React.createElement(IconWrapper, {\n    prefixCls: prefixCls,\n    className: mergedIconCls,\n    style: style,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: iconClassName\n  }));\n});\n\nconst getCollapsedWidth = () => ({\n  width: 0,\n  opacity: 0,\n  transform: 'scale(0)'\n});\n\nconst getRealWidth = node => ({\n  width: node.scrollWidth,\n  opacity: 1,\n  transform: 'scale(1)'\n});\n\nconst LoadingIcon = props => {\n  const {\n    prefixCls,\n    loading,\n    existIcon,\n    className,\n    style\n  } = props;\n  const visible = !!loading;\n\n  if (existIcon) {\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: className,\n      style: style\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    // We do not really use this motionName\n    motionName: `${prefixCls}-loading-icon-motion`,\n    motionLeave: visible,\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, (_ref2, ref) => {\n    let {\n      className: motionCls,\n      style: motionStyle\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: className,\n      style: Object.assign(Object.assign({}, style), motionStyle),\n      ref: ref,\n      iconClassName: motionCls\n    });\n  });\n};\n\nexport default LoadingIcon;","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/button/LoadingIcon.js"],"names":["LoadingOutlined","classNames","CSSMotion","React","forwardRef","IconWrapper","InnerLoadingIcon","_ref","ref","prefixCls","className","style","iconClassName","mergedIconCls","createElement","getCollapsedWidth","width","opacity","transform","getRealWidth","node","scrollWidth","LoadingIcon","props","loading","existIcon","visible","motionName","motionLeave","removeOnLeave","onAppearStart","onAppearActive","onEnterStart","onEnterActive","onLeaveStart","onLeaveActive","_ref2","motionCls","motionStyle","Object","assign"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport React, { forwardRef } from 'react';\nimport IconWrapper from './IconWrapper';\nconst InnerLoadingIcon = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    prefixCls,\n    className,\n    style,\n    iconClassName\n  } = _ref;\n  const mergedIconCls = classNames(`${prefixCls}-loading-icon`, className);\n  return /*#__PURE__*/React.createElement(IconWrapper, {\n    prefixCls: prefixCls,\n    className: mergedIconCls,\n    style: style,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: iconClassName\n  }));\n});\nconst getCollapsedWidth = () => ({\n  width: 0,\n  opacity: 0,\n  transform: 'scale(0)'\n});\nconst getRealWidth = node => ({\n  width: node.scrollWidth,\n  opacity: 1,\n  transform: 'scale(1)'\n});\nconst LoadingIcon = props => {\n  const {\n    prefixCls,\n    loading,\n    existIcon,\n    className,\n    style\n  } = props;\n  const visible = !!loading;\n  if (existIcon) {\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: className,\n      style: style\n    });\n  }\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    // We do not really use this motionName\n    motionName: `${prefixCls}-loading-icon-motion`,\n    motionLeave: visible,\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, (_ref2, ref) => {\n    let {\n      className: motionCls,\n      style: motionStyle\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: className,\n      style: Object.assign(Object.assign({}, style), motionStyle),\n      ref: ref,\n      iconClassName: motionCls\n    });\n  });\n};\nexport default LoadingIcon;"]},"metadata":{},"sourceType":"module"}