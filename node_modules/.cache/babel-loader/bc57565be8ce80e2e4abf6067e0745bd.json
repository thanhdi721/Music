{"ast":null,"code":"import * as React from 'react';\nimport { getStyleStr } from './utils';\n/**\n * Base size of the canvas, 1 for parallel layout and 2 for alternate layout\n * Only alternate layout is currently supported\n */\n\nexport const BaseSize = 2;\nexport const FontGap = 3; // Prevent external hidden elements from adding accent styles\n\nconst emphasizedStyle = {\n  visibility: 'visible !important'\n};\nexport default function useWatermark(markStyle) {\n  const [watermarkMap] = React.useState(() => new Map());\n\n  const appendWatermark = (base64Url, markWidth, container) => {\n    if (container) {\n      if (!watermarkMap.get(container)) {\n        const newWatermarkEle = document.createElement('div');\n        watermarkMap.set(container, newWatermarkEle);\n      }\n\n      const watermarkEle = watermarkMap.get(container);\n      watermarkEle.setAttribute('style', getStyleStr(Object.assign(Object.assign(Object.assign({}, markStyle), {\n        backgroundImage: `url('${base64Url}')`,\n        backgroundSize: `${Math.floor(markWidth)}px`\n      }), emphasizedStyle))); // Prevents using the browser `Hide Element` to hide watermarks\n\n      watermarkEle.removeAttribute('class');\n\n      if (watermarkEle.parentElement !== container) {\n        container.append(watermarkEle);\n      }\n    }\n\n    return watermarkMap.get(container);\n  };\n\n  const removeWatermark = container => {\n    const watermarkEle = watermarkMap.get(container);\n\n    if (watermarkEle && container) {\n      container.removeChild(watermarkEle);\n    }\n\n    watermarkMap.delete(container);\n  };\n\n  const isWatermarkEle = ele => Array.from(watermarkMap.values()).includes(ele);\n\n  return [appendWatermark, removeWatermark, isWatermarkEle];\n}","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/watermark/useWatermark.js"],"names":["React","getStyleStr","BaseSize","FontGap","emphasizedStyle","visibility","useWatermark","markStyle","watermarkMap","useState","Map","appendWatermark","base64Url","markWidth","container","get","newWatermarkEle","document","createElement","set","watermarkEle","setAttribute","Object","assign","backgroundImage","backgroundSize","Math","floor","removeAttribute","parentElement","append","removeWatermark","removeChild","delete","isWatermarkEle","ele","Array","from","values","includes"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAjB;AACP,OAAO,MAAMC,OAAO,GAAG,CAAhB,C,CACP;;AACA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,UAAU,EAAE;AADU,CAAxB;AAGA,eAAe,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;AAC9C,QAAM,CAACC,YAAD,IAAiBR,KAAK,CAACS,QAAN,CAAe,MAAM,IAAIC,GAAJ,EAArB,CAAvB;;AACA,QAAMC,eAAe,GAAG,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,SAAvB,KAAqC;AAC3D,QAAIA,SAAJ,EAAe;AACb,UAAI,CAACN,YAAY,CAACO,GAAb,CAAiBD,SAAjB,CAAL,EAAkC;AAChC,cAAME,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAxB;AACAV,QAAAA,YAAY,CAACW,GAAb,CAAiBL,SAAjB,EAA4BE,eAA5B;AACD;;AACD,YAAMI,YAAY,GAAGZ,YAAY,CAACO,GAAb,CAAiBD,SAAjB,CAArB;AACAM,MAAAA,YAAY,CAACC,YAAb,CAA0B,OAA1B,EAAmCpB,WAAW,CAACqB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,SAAlB,CAAd,EAA4C;AACvGiB,QAAAA,eAAe,EAAG,QAAOZ,SAAU,IADoE;AAEvGa,QAAAA,cAAc,EAAG,GAAEC,IAAI,CAACC,KAAL,CAAWd,SAAX,CAAsB;AAF8D,OAA5C,CAAd,EAG3CT,eAH2C,CAAD,CAA9C,EANa,CAUb;;AACAgB,MAAAA,YAAY,CAACQ,eAAb,CAA6B,OAA7B;;AACA,UAAIR,YAAY,CAACS,aAAb,KAA+Bf,SAAnC,EAA8C;AAC5CA,QAAAA,SAAS,CAACgB,MAAV,CAAiBV,YAAjB;AACD;AACF;;AACD,WAAOZ,YAAY,CAACO,GAAb,CAAiBD,SAAjB,CAAP;AACD,GAlBD;;AAmBA,QAAMiB,eAAe,GAAGjB,SAAS,IAAI;AACnC,UAAMM,YAAY,GAAGZ,YAAY,CAACO,GAAb,CAAiBD,SAAjB,CAArB;;AACA,QAAIM,YAAY,IAAIN,SAApB,EAA+B;AAC7BA,MAAAA,SAAS,CAACkB,WAAV,CAAsBZ,YAAtB;AACD;;AACDZ,IAAAA,YAAY,CAACyB,MAAb,CAAoBnB,SAApB;AACD,GAND;;AAOA,QAAMoB,cAAc,GAAGC,GAAG,IAAIC,KAAK,CAACC,IAAN,CAAW7B,YAAY,CAAC8B,MAAb,EAAX,EAAkCC,QAAlC,CAA2CJ,GAA3C,CAA9B;;AACA,SAAO,CAACxB,eAAD,EAAkBoB,eAAlB,EAAmCG,cAAnC,CAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { getStyleStr } from './utils';\n/**\n * Base size of the canvas, 1 for parallel layout and 2 for alternate layout\n * Only alternate layout is currently supported\n */\nexport const BaseSize = 2;\nexport const FontGap = 3;\n// Prevent external hidden elements from adding accent styles\nconst emphasizedStyle = {\n  visibility: 'visible !important'\n};\nexport default function useWatermark(markStyle) {\n  const [watermarkMap] = React.useState(() => new Map());\n  const appendWatermark = (base64Url, markWidth, container) => {\n    if (container) {\n      if (!watermarkMap.get(container)) {\n        const newWatermarkEle = document.createElement('div');\n        watermarkMap.set(container, newWatermarkEle);\n      }\n      const watermarkEle = watermarkMap.get(container);\n      watermarkEle.setAttribute('style', getStyleStr(Object.assign(Object.assign(Object.assign({}, markStyle), {\n        backgroundImage: `url('${base64Url}')`,\n        backgroundSize: `${Math.floor(markWidth)}px`\n      }), emphasizedStyle)));\n      // Prevents using the browser `Hide Element` to hide watermarks\n      watermarkEle.removeAttribute('class');\n      if (watermarkEle.parentElement !== container) {\n        container.append(watermarkEle);\n      }\n    }\n    return watermarkMap.get(container);\n  };\n  const removeWatermark = container => {\n    const watermarkEle = watermarkMap.get(container);\n    if (watermarkEle && container) {\n      container.removeChild(watermarkEle);\n    }\n    watermarkMap.delete(container);\n  };\n  const isWatermarkEle = ele => Array.from(watermarkMap.values()).includes(ele);\n  return [appendWatermark, removeWatermark, isWatermarkEle];\n}"]},"metadata":{},"sourceType":"module"}