{"ast":null,"code":"/* eslint-disable no-console */\nvar warned = {};\nvar preWarningFns = [];\n/**\n * Pre warning enable you to parse content before console.error.\n * Modify to null will prevent warning.\n */\n\nexport var preMessage = function preMessage(fn) {\n  preWarningFns.push(fn);\n};\n/**\n * Warning if condition not match.\n * @param valid Condition\n * @param message Warning message\n * @example\n * ```js\n * warning(false, 'some error'); // print some error\n * warning(true, 'some error'); // print nothing\n * warning(1 === 2, 'some error'); // print some error\n * ```\n */\n\nexport function warning(valid, message) {\n  if (process.env.NODE_ENV !== 'production' && !valid && console !== undefined) {\n    var finalMessage = preWarningFns.reduce(function (msg, preMessageFn) {\n      return preMessageFn(msg !== null && msg !== void 0 ? msg : '', 'warning');\n    }, message);\n\n    if (finalMessage) {\n      console.error(\"Warning: \".concat(finalMessage));\n    }\n  }\n}\n/** @see Similar to {@link warning} */\n\nexport function note(valid, message) {\n  if (process.env.NODE_ENV !== 'production' && !valid && console !== undefined) {\n    var finalMessage = preWarningFns.reduce(function (msg, preMessageFn) {\n      return preMessageFn(msg !== null && msg !== void 0 ? msg : '', 'note');\n    }, message);\n\n    if (finalMessage) {\n      console.warn(\"Note: \".concat(finalMessage));\n    }\n  }\n}\nexport function resetWarned() {\n  warned = {};\n}\nexport function call(method, valid, message) {\n  if (!valid && !warned[message]) {\n    method(false, message);\n    warned[message] = true;\n  }\n}\n/** @see Same as {@link warning}, but only warn once for the same message */\n\nexport function warningOnce(valid, message) {\n  call(warning, valid, message);\n}\n/** @see Same as {@link warning}, but only warn once for the same message */\n\nexport function noteOnce(valid, message) {\n  call(note, valid, message);\n}\nwarningOnce.preMessage = preMessage;\nwarningOnce.resetWarned = resetWarned;\nwarningOnce.noteOnce = noteOnce;\nexport default warningOnce;","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-util/es/warning.js"],"names":["warned","preWarningFns","preMessage","fn","push","warning","valid","message","process","env","NODE_ENV","console","undefined","finalMessage","reduce","msg","preMessageFn","error","concat","note","warn","resetWarned","call","method","warningOnce","noteOnce"],"mappings":"AAAA;AACA,IAAIA,MAAM,GAAG,EAAb;AACA,IAAIC,aAAa,GAAG,EAApB;AAEA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,EAApB,EAAwB;AAC9CF,EAAAA,aAAa,CAACG,IAAd,CAAmBD,EAAnB;AACD,CAFM;AAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,OAAxB,EAAiC;AACtC,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACJ,KAA1C,IAAmDK,OAAO,KAAKC,SAAnE,EAA8E;AAC5E,QAAIC,YAAY,GAAGZ,aAAa,CAACa,MAAd,CAAqB,UAAUC,GAAV,EAAeC,YAAf,EAA6B;AACnE,aAAOA,YAAY,CAACD,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,KAAK,CAA7B,GAAiCA,GAAjC,GAAuC,EAAxC,EAA4C,SAA5C,CAAnB;AACD,KAFkB,EAEhBR,OAFgB,CAAnB;;AAGA,QAAIM,YAAJ,EAAkB;AAChBF,MAAAA,OAAO,CAACM,KAAR,CAAc,YAAYC,MAAZ,CAAmBL,YAAnB,CAAd;AACD;AACF;AACF;AAED;;AACA,OAAO,SAASM,IAAT,CAAcb,KAAd,EAAqBC,OAArB,EAA8B;AACnC,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACJ,KAA1C,IAAmDK,OAAO,KAAKC,SAAnE,EAA8E;AAC5E,QAAIC,YAAY,GAAGZ,aAAa,CAACa,MAAd,CAAqB,UAAUC,GAAV,EAAeC,YAAf,EAA6B;AACnE,aAAOA,YAAY,CAACD,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,KAAK,CAA7B,GAAiCA,GAAjC,GAAuC,EAAxC,EAA4C,MAA5C,CAAnB;AACD,KAFkB,EAEhBR,OAFgB,CAAnB;;AAGA,QAAIM,YAAJ,EAAkB;AAChBF,MAAAA,OAAO,CAACS,IAAR,CAAa,SAASF,MAAT,CAAgBL,YAAhB,CAAb;AACD;AACF;AACF;AACD,OAAO,SAASQ,WAAT,GAAuB;AAC5BrB,EAAAA,MAAM,GAAG,EAAT;AACD;AACD,OAAO,SAASsB,IAAT,CAAcC,MAAd,EAAsBjB,KAAtB,EAA6BC,OAA7B,EAAsC;AAC3C,MAAI,CAACD,KAAD,IAAU,CAACN,MAAM,CAACO,OAAD,CAArB,EAAgC;AAC9BgB,IAAAA,MAAM,CAAC,KAAD,EAAQhB,OAAR,CAAN;AACAP,IAAAA,MAAM,CAACO,OAAD,CAAN,GAAkB,IAAlB;AACD;AACF;AAED;;AACA,OAAO,SAASiB,WAAT,CAAqBlB,KAArB,EAA4BC,OAA5B,EAAqC;AAC1Ce,EAAAA,IAAI,CAACjB,OAAD,EAAUC,KAAV,EAAiBC,OAAjB,CAAJ;AACD;AAED;;AACA,OAAO,SAASkB,QAAT,CAAkBnB,KAAlB,EAAyBC,OAAzB,EAAkC;AACvCe,EAAAA,IAAI,CAACH,IAAD,EAAOb,KAAP,EAAcC,OAAd,CAAJ;AACD;AACDiB,WAAW,CAACtB,UAAZ,GAAyBA,UAAzB;AACAsB,WAAW,CAACH,WAAZ,GAA0BA,WAA1B;AACAG,WAAW,CAACC,QAAZ,GAAuBA,QAAvB;AACA,eAAeD,WAAf","sourcesContent":["/* eslint-disable no-console */\nvar warned = {};\nvar preWarningFns = [];\n\n/**\n * Pre warning enable you to parse content before console.error.\n * Modify to null will prevent warning.\n */\nexport var preMessage = function preMessage(fn) {\n  preWarningFns.push(fn);\n};\n\n/**\n * Warning if condition not match.\n * @param valid Condition\n * @param message Warning message\n * @example\n * ```js\n * warning(false, 'some error'); // print some error\n * warning(true, 'some error'); // print nothing\n * warning(1 === 2, 'some error'); // print some error\n * ```\n */\nexport function warning(valid, message) {\n  if (process.env.NODE_ENV !== 'production' && !valid && console !== undefined) {\n    var finalMessage = preWarningFns.reduce(function (msg, preMessageFn) {\n      return preMessageFn(msg !== null && msg !== void 0 ? msg : '', 'warning');\n    }, message);\n    if (finalMessage) {\n      console.error(\"Warning: \".concat(finalMessage));\n    }\n  }\n}\n\n/** @see Similar to {@link warning} */\nexport function note(valid, message) {\n  if (process.env.NODE_ENV !== 'production' && !valid && console !== undefined) {\n    var finalMessage = preWarningFns.reduce(function (msg, preMessageFn) {\n      return preMessageFn(msg !== null && msg !== void 0 ? msg : '', 'note');\n    }, message);\n    if (finalMessage) {\n      console.warn(\"Note: \".concat(finalMessage));\n    }\n  }\n}\nexport function resetWarned() {\n  warned = {};\n}\nexport function call(method, valid, message) {\n  if (!valid && !warned[message]) {\n    method(false, message);\n    warned[message] = true;\n  }\n}\n\n/** @see Same as {@link warning}, but only warn once for the same message */\nexport function warningOnce(valid, message) {\n  call(warning, valid, message);\n}\n\n/** @see Same as {@link warning}, but only warn once for the same message */\nexport function noteOnce(valid, message) {\n  call(note, valid, message);\n}\nwarningOnce.preMessage = preMessage;\nwarningOnce.resetWarned = resetWarned;\nwarningOnce.noteOnce = noteOnce;\nexport default warningOnce;"]},"metadata":{},"sourceType":"module"}