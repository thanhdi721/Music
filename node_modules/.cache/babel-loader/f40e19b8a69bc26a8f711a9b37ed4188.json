{"ast":null,"code":"export var VIEW_BOX_SIZE = 100;\nexport var getCircleStyle = function getCircleStyle(perimeter, perimeterWithoutGap, offset, percent, rotateDeg, gapDegree, gapPosition, strokeColor, strokeLinecap, strokeWidth) {\n  var stepSpace = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : 0;\n  var offsetDeg = offset / 100 * 360 * ((360 - gapDegree) / 360);\n  var positionDeg = gapDegree === 0 ? 0 : {\n    bottom: 0,\n    top: 180,\n    left: 90,\n    right: -90\n  }[gapPosition];\n  var strokeDashoffset = (100 - percent) / 100 * perimeterWithoutGap; // Fix percent accuracy when strokeLinecap is round\n  // https://github.com/ant-design/ant-design/issues/35009\n\n  if (strokeLinecap === 'round' && percent !== 100) {\n    strokeDashoffset += strokeWidth / 2; // when percent is small enough (<= 1%), keep smallest value to avoid it's disappearance\n\n    if (strokeDashoffset >= perimeterWithoutGap) {\n      strokeDashoffset = perimeterWithoutGap - 0.01;\n    }\n  }\n\n  var halfSize = VIEW_BOX_SIZE / 2;\n  return {\n    stroke: typeof strokeColor === 'string' ? strokeColor : undefined,\n    strokeDasharray: \"\".concat(perimeterWithoutGap, \"px \").concat(perimeter),\n    strokeDashoffset: strokeDashoffset + stepSpace,\n    transform: \"rotate(\".concat(rotateDeg + offsetDeg + positionDeg, \"deg)\"),\n    transformOrigin: \"\".concat(halfSize, \"px \").concat(halfSize, \"px\"),\n    transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s, opacity .3s ease 0s',\n    fillOpacity: 0\n  };\n};","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/rc-progress/es/Circle/util.js"],"names":["VIEW_BOX_SIZE","getCircleStyle","perimeter","perimeterWithoutGap","offset","percent","rotateDeg","gapDegree","gapPosition","strokeColor","strokeLinecap","strokeWidth","stepSpace","arguments","length","undefined","offsetDeg","positionDeg","bottom","top","left","right","strokeDashoffset","halfSize","stroke","strokeDasharray","concat","transform","transformOrigin","transition","fillOpacity"],"mappings":"AAAA,OAAO,IAAIA,aAAa,GAAG,GAApB;AACP,OAAO,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,SAAxB,EAAmCC,mBAAnC,EAAwDC,MAAxD,EAAgEC,OAAhE,EAAyEC,SAAzE,EAAoFC,SAApF,EAA+FC,WAA/F,EAA4GC,WAA5G,EAAyHC,aAAzH,EAAwIC,WAAxI,EAAqJ;AAC/K,MAAIC,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,EAAnB,IAAyBD,SAAS,CAAC,EAAD,CAAT,KAAkBE,SAA3C,GAAuDF,SAAS,CAAC,EAAD,CAAhE,GAAuE,CAAvF;AACA,MAAIG,SAAS,GAAGZ,MAAM,GAAG,GAAT,GAAe,GAAf,IAAsB,CAAC,MAAMG,SAAP,IAAoB,GAA1C,CAAhB;AACA,MAAIU,WAAW,GAAGV,SAAS,KAAK,CAAd,GAAkB,CAAlB,GAAsB;AACtCW,IAAAA,MAAM,EAAE,CAD8B;AAEtCC,IAAAA,GAAG,EAAE,GAFiC;AAGtCC,IAAAA,IAAI,EAAE,EAHgC;AAItCC,IAAAA,KAAK,EAAE,CAAC;AAJ8B,IAKtCb,WALsC,CAAxC;AAMA,MAAIc,gBAAgB,GAAG,CAAC,MAAMjB,OAAP,IAAkB,GAAlB,GAAwBF,mBAA/C,CAT+K,CAU/K;AACA;;AACA,MAAIO,aAAa,KAAK,OAAlB,IAA6BL,OAAO,KAAK,GAA7C,EAAkD;AAChDiB,IAAAA,gBAAgB,IAAIX,WAAW,GAAG,CAAlC,CADgD,CAEhD;;AACA,QAAIW,gBAAgB,IAAInB,mBAAxB,EAA6C;AAC3CmB,MAAAA,gBAAgB,GAAGnB,mBAAmB,GAAG,IAAzC;AACD;AACF;;AACD,MAAIoB,QAAQ,GAAGvB,aAAa,GAAG,CAA/B;AACA,SAAO;AACLwB,IAAAA,MAAM,EAAE,OAAOf,WAAP,KAAuB,QAAvB,GAAkCA,WAAlC,GAAgDM,SADnD;AAELU,IAAAA,eAAe,EAAE,GAAGC,MAAH,CAAUvB,mBAAV,EAA+B,KAA/B,EAAsCuB,MAAtC,CAA6CxB,SAA7C,CAFZ;AAGLoB,IAAAA,gBAAgB,EAAEA,gBAAgB,GAAGV,SAHhC;AAILe,IAAAA,SAAS,EAAE,UAAUD,MAAV,CAAiBpB,SAAS,GAAGU,SAAZ,GAAwBC,WAAzC,EAAsD,MAAtD,CAJN;AAKLW,IAAAA,eAAe,EAAE,GAAGF,MAAH,CAAUH,QAAV,EAAoB,KAApB,EAA2BG,MAA3B,CAAkCH,QAAlC,EAA4C,IAA5C,CALZ;AAMLM,IAAAA,UAAU,EAAE,0HANP;AAOLC,IAAAA,WAAW,EAAE;AAPR,GAAP;AASD,CA7BM","sourcesContent":["export var VIEW_BOX_SIZE = 100;\nexport var getCircleStyle = function getCircleStyle(perimeter, perimeterWithoutGap, offset, percent, rotateDeg, gapDegree, gapPosition, strokeColor, strokeLinecap, strokeWidth) {\n  var stepSpace = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : 0;\n  var offsetDeg = offset / 100 * 360 * ((360 - gapDegree) / 360);\n  var positionDeg = gapDegree === 0 ? 0 : {\n    bottom: 0,\n    top: 180,\n    left: 90,\n    right: -90\n  }[gapPosition];\n  var strokeDashoffset = (100 - percent) / 100 * perimeterWithoutGap;\n  // Fix percent accuracy when strokeLinecap is round\n  // https://github.com/ant-design/ant-design/issues/35009\n  if (strokeLinecap === 'round' && percent !== 100) {\n    strokeDashoffset += strokeWidth / 2;\n    // when percent is small enough (<= 1%), keep smallest value to avoid it's disappearance\n    if (strokeDashoffset >= perimeterWithoutGap) {\n      strokeDashoffset = perimeterWithoutGap - 0.01;\n    }\n  }\n  var halfSize = VIEW_BOX_SIZE / 2;\n  return {\n    stroke: typeof strokeColor === 'string' ? strokeColor : undefined,\n    strokeDasharray: \"\".concat(perimeterWithoutGap, \"px \").concat(perimeter),\n    strokeDashoffset: strokeDashoffset + stepSpace,\n    transform: \"rotate(\".concat(rotateDeg + offsetDeg + positionDeg, \"deg)\"),\n    transformOrigin: \"\".concat(halfSize, \"px \").concat(halfSize, \"px\"),\n    transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s, opacity .3s ease 0s',\n    fillOpacity: 0\n  };\n};"]},"metadata":{},"sourceType":"module"}