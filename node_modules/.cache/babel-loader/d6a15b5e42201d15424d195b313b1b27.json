{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { getRowFormat, pickProps, toArray } from \"../utils/miscUtil\";\nimport { fillTimeFormat } from \"./useLocale\";\n\nfunction checkShow(format, keywords, show) {\n  return show !== null && show !== void 0 ? show : keywords.some(function (keyword) {\n    return format.includes(keyword);\n  });\n}\n\nvar showTimeKeys = [// 'format',\n'showNow', 'showHour', 'showMinute', 'showSecond', 'showMillisecond', 'use12Hours', 'hourStep', 'minuteStep', 'secondStep', 'millisecondStep', 'hideDisabledOptions', 'defaultValue', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'disabledMilliseconds', 'disabledTime', 'changeOnScroll', 'defaultOpenValue'];\n/**\n * Get SharedTimeProps from props.\n */\n\nfunction pickTimeProps(props) {\n  var timeProps = pickProps(props, showTimeKeys);\n  var format = props.format,\n      picker = props.picker;\n  var propFormat = null;\n\n  if (format) {\n    propFormat = format;\n\n    if (Array.isArray(propFormat)) {\n      propFormat = propFormat[0];\n    }\n\n    propFormat = _typeof(propFormat) === 'object' ? propFormat.format : propFormat;\n  }\n\n  if (picker === 'time') {\n    timeProps.format = propFormat;\n  }\n\n  return [timeProps, propFormat];\n}\n\nfunction isStringFormat(format) {\n  return format && typeof format === 'string';\n}\n/** Check if all the showXXX is `undefined` */\n\n\nfunction existShowConfig(showHour, showMinute, showSecond, showMillisecond) {\n  return [showHour, showMinute, showSecond, showMillisecond].some(function (show) {\n    return show !== undefined;\n  });\n}\n/** Fill the showXXX if needed */\n\n\nfunction fillShowConfig(hasShowConfig, showHour, showMinute, showSecond, showMillisecond) {\n  var parsedShowHour = showHour;\n  var parsedShowMinute = showMinute;\n  var parsedShowSecond = showSecond;\n\n  if (!hasShowConfig && !parsedShowHour && !parsedShowMinute && !parsedShowSecond && !showMillisecond) {\n    parsedShowHour = true;\n    parsedShowMinute = true;\n    parsedShowSecond = true;\n  } else if (hasShowConfig) {\n    var _parsedShowHour, _parsedShowMinute, _parsedShowSecond;\n\n    var existFalse = [parsedShowHour, parsedShowMinute, parsedShowSecond].some(function (show) {\n      return show === false;\n    });\n    var existTrue = [parsedShowHour, parsedShowMinute, parsedShowSecond].some(function (show) {\n      return show === true;\n    });\n    var defaultShow = existFalse ? true : !existTrue;\n    parsedShowHour = (_parsedShowHour = parsedShowHour) !== null && _parsedShowHour !== void 0 ? _parsedShowHour : defaultShow;\n    parsedShowMinute = (_parsedShowMinute = parsedShowMinute) !== null && _parsedShowMinute !== void 0 ? _parsedShowMinute : defaultShow;\n    parsedShowSecond = (_parsedShowSecond = parsedShowSecond) !== null && _parsedShowSecond !== void 0 ? _parsedShowSecond : defaultShow;\n  }\n\n  return [parsedShowHour, parsedShowMinute, parsedShowSecond, showMillisecond];\n}\n/**\n * Get `showHour`, `showMinute`, `showSecond` or other from the props.\n * This is pure function, will not get `showXXX` from the `format` prop.\n */\n\n\nexport function getTimeProps(componentProps) {\n  var showTime = componentProps.showTime;\n\n  var _pickTimeProps = pickTimeProps(componentProps),\n      _pickTimeProps2 = _slicedToArray(_pickTimeProps, 2),\n      pickedProps = _pickTimeProps2[0],\n      propFormat = _pickTimeProps2[1];\n\n  var showTimeConfig = showTime && _typeof(showTime) === 'object' ? showTime : {};\n\n  var timeConfig = _objectSpread(_objectSpread({\n    defaultOpenValue: showTimeConfig.defaultOpenValue || showTimeConfig.defaultValue\n  }, pickedProps), showTimeConfig);\n\n  var showMillisecond = timeConfig.showMillisecond;\n  var showHour = timeConfig.showHour,\n      showMinute = timeConfig.showMinute,\n      showSecond = timeConfig.showSecond;\n  var hasShowConfig = existShowConfig(showHour, showMinute, showSecond, showMillisecond);\n\n  var _fillShowConfig = fillShowConfig(hasShowConfig, showHour, showMinute, showSecond, showMillisecond);\n\n  var _fillShowConfig2 = _slicedToArray(_fillShowConfig, 3);\n\n  showHour = _fillShowConfig2[0];\n  showMinute = _fillShowConfig2[1];\n  showSecond = _fillShowConfig2[2];\n  return [timeConfig, _objectSpread(_objectSpread({}, timeConfig), {}, {\n    showHour: showHour,\n    showMinute: showMinute,\n    showSecond: showSecond,\n    showMillisecond: showMillisecond\n  }), timeConfig.format, propFormat];\n}\nexport function fillShowTimeConfig(picker, showTimeFormat, propFormat, timeConfig, locale) {\n  var isTimePicker = picker === 'time';\n\n  if (picker === 'datetime' || isTimePicker) {\n    var pickedProps = timeConfig; // ====================== BaseFormat ======================\n\n    var defaultLocaleFormat = getRowFormat(picker, locale, null);\n    var baselineFormat = defaultLocaleFormat;\n    var formatList = [showTimeFormat, propFormat];\n\n    for (var i = 0; i < formatList.length; i += 1) {\n      var format = toArray(formatList[i])[0];\n\n      if (isStringFormat(format)) {\n        baselineFormat = format;\n        break;\n      }\n    } // ========================= Show =========================\n\n\n    var showHour = pickedProps.showHour,\n        showMinute = pickedProps.showMinute,\n        showSecond = pickedProps.showSecond,\n        showMillisecond = pickedProps.showMillisecond;\n    var use12Hours = pickedProps.use12Hours;\n    var showMeridiem = checkShow(baselineFormat, ['a', 'A', 'LT', 'LLL', 'LTS'], use12Hours);\n    var hasShowConfig = existShowConfig(showHour, showMinute, showSecond, showMillisecond); // Fill with format, if needed\n\n    if (!hasShowConfig) {\n      showHour = checkShow(baselineFormat, ['H', 'h', 'k', 'LT', 'LLL']);\n      showMinute = checkShow(baselineFormat, ['m', 'LT', 'LLL']);\n      showSecond = checkShow(baselineFormat, ['s', 'LTS']);\n      showMillisecond = checkShow(baselineFormat, ['SSS']);\n    } // Fallback if all can not see\n    // ======================== Format ========================\n\n\n    var _fillShowConfig3 = fillShowConfig(hasShowConfig, showHour, showMinute, showSecond, showMillisecond);\n\n    var _fillShowConfig4 = _slicedToArray(_fillShowConfig3, 3);\n\n    showHour = _fillShowConfig4[0];\n    showMinute = _fillShowConfig4[1];\n    showSecond = _fillShowConfig4[2];\n    var timeFormat = showTimeFormat || fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, showMeridiem); // ======================== Props =========================\n\n    return _objectSpread(_objectSpread({}, pickedProps), {}, {\n      // Format\n      format: timeFormat,\n      // Show Config\n      showHour: showHour,\n      showMinute: showMinute,\n      showSecond: showSecond,\n      showMillisecond: showMillisecond,\n      use12Hours: showMeridiem\n    });\n  }\n\n  return null;\n}","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-picker/es/hooks/useTimeConfig.js"],"names":["_objectSpread","_slicedToArray","_typeof","getRowFormat","pickProps","toArray","fillTimeFormat","checkShow","format","keywords","show","some","keyword","includes","showTimeKeys","pickTimeProps","props","timeProps","picker","propFormat","Array","isArray","isStringFormat","existShowConfig","showHour","showMinute","showSecond","showMillisecond","undefined","fillShowConfig","hasShowConfig","parsedShowHour","parsedShowMinute","parsedShowSecond","_parsedShowHour","_parsedShowMinute","_parsedShowSecond","existFalse","existTrue","defaultShow","getTimeProps","componentProps","showTime","_pickTimeProps","_pickTimeProps2","pickedProps","showTimeConfig","timeConfig","defaultOpenValue","defaultValue","_fillShowConfig","_fillShowConfig2","fillShowTimeConfig","showTimeFormat","locale","isTimePicker","defaultLocaleFormat","baselineFormat","formatList","i","length","use12Hours","showMeridiem","_fillShowConfig3","_fillShowConfig4","timeFormat"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { getRowFormat, pickProps, toArray } from \"../utils/miscUtil\";\nimport { fillTimeFormat } from \"./useLocale\";\nfunction checkShow(format, keywords, show) {\n  return show !== null && show !== void 0 ? show : keywords.some(function (keyword) {\n    return format.includes(keyword);\n  });\n}\nvar showTimeKeys = [\n// 'format',\n'showNow', 'showHour', 'showMinute', 'showSecond', 'showMillisecond', 'use12Hours', 'hourStep', 'minuteStep', 'secondStep', 'millisecondStep', 'hideDisabledOptions', 'defaultValue', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'disabledMilliseconds', 'disabledTime', 'changeOnScroll', 'defaultOpenValue'];\n\n/**\n * Get SharedTimeProps from props.\n */\nfunction pickTimeProps(props) {\n  var timeProps = pickProps(props, showTimeKeys);\n  var format = props.format,\n    picker = props.picker;\n  var propFormat = null;\n  if (format) {\n    propFormat = format;\n    if (Array.isArray(propFormat)) {\n      propFormat = propFormat[0];\n    }\n    propFormat = _typeof(propFormat) === 'object' ? propFormat.format : propFormat;\n  }\n  if (picker === 'time') {\n    timeProps.format = propFormat;\n  }\n  return [timeProps, propFormat];\n}\nfunction isStringFormat(format) {\n  return format && typeof format === 'string';\n}\n/** Check if all the showXXX is `undefined` */\nfunction existShowConfig(showHour, showMinute, showSecond, showMillisecond) {\n  return [showHour, showMinute, showSecond, showMillisecond].some(function (show) {\n    return show !== undefined;\n  });\n}\n\n/** Fill the showXXX if needed */\nfunction fillShowConfig(hasShowConfig, showHour, showMinute, showSecond, showMillisecond) {\n  var parsedShowHour = showHour;\n  var parsedShowMinute = showMinute;\n  var parsedShowSecond = showSecond;\n  if (!hasShowConfig && !parsedShowHour && !parsedShowMinute && !parsedShowSecond && !showMillisecond) {\n    parsedShowHour = true;\n    parsedShowMinute = true;\n    parsedShowSecond = true;\n  } else if (hasShowConfig) {\n    var _parsedShowHour, _parsedShowMinute, _parsedShowSecond;\n    var existFalse = [parsedShowHour, parsedShowMinute, parsedShowSecond].some(function (show) {\n      return show === false;\n    });\n    var existTrue = [parsedShowHour, parsedShowMinute, parsedShowSecond].some(function (show) {\n      return show === true;\n    });\n    var defaultShow = existFalse ? true : !existTrue;\n    parsedShowHour = (_parsedShowHour = parsedShowHour) !== null && _parsedShowHour !== void 0 ? _parsedShowHour : defaultShow;\n    parsedShowMinute = (_parsedShowMinute = parsedShowMinute) !== null && _parsedShowMinute !== void 0 ? _parsedShowMinute : defaultShow;\n    parsedShowSecond = (_parsedShowSecond = parsedShowSecond) !== null && _parsedShowSecond !== void 0 ? _parsedShowSecond : defaultShow;\n  }\n  return [parsedShowHour, parsedShowMinute, parsedShowSecond, showMillisecond];\n}\n\n/**\n * Get `showHour`, `showMinute`, `showSecond` or other from the props.\n * This is pure function, will not get `showXXX` from the `format` prop.\n */\nexport function getTimeProps(componentProps) {\n  var showTime = componentProps.showTime;\n  var _pickTimeProps = pickTimeProps(componentProps),\n    _pickTimeProps2 = _slicedToArray(_pickTimeProps, 2),\n    pickedProps = _pickTimeProps2[0],\n    propFormat = _pickTimeProps2[1];\n  var showTimeConfig = showTime && _typeof(showTime) === 'object' ? showTime : {};\n  var timeConfig = _objectSpread(_objectSpread({\n    defaultOpenValue: showTimeConfig.defaultOpenValue || showTimeConfig.defaultValue\n  }, pickedProps), showTimeConfig);\n  var showMillisecond = timeConfig.showMillisecond;\n  var showHour = timeConfig.showHour,\n    showMinute = timeConfig.showMinute,\n    showSecond = timeConfig.showSecond;\n  var hasShowConfig = existShowConfig(showHour, showMinute, showSecond, showMillisecond);\n  var _fillShowConfig = fillShowConfig(hasShowConfig, showHour, showMinute, showSecond, showMillisecond);\n  var _fillShowConfig2 = _slicedToArray(_fillShowConfig, 3);\n  showHour = _fillShowConfig2[0];\n  showMinute = _fillShowConfig2[1];\n  showSecond = _fillShowConfig2[2];\n  return [timeConfig, _objectSpread(_objectSpread({}, timeConfig), {}, {\n    showHour: showHour,\n    showMinute: showMinute,\n    showSecond: showSecond,\n    showMillisecond: showMillisecond\n  }), timeConfig.format, propFormat];\n}\nexport function fillShowTimeConfig(picker, showTimeFormat, propFormat, timeConfig, locale) {\n  var isTimePicker = picker === 'time';\n  if (picker === 'datetime' || isTimePicker) {\n    var pickedProps = timeConfig;\n\n    // ====================== BaseFormat ======================\n    var defaultLocaleFormat = getRowFormat(picker, locale, null);\n    var baselineFormat = defaultLocaleFormat;\n    var formatList = [showTimeFormat, propFormat];\n    for (var i = 0; i < formatList.length; i += 1) {\n      var format = toArray(formatList[i])[0];\n      if (isStringFormat(format)) {\n        baselineFormat = format;\n        break;\n      }\n    }\n\n    // ========================= Show =========================\n    var showHour = pickedProps.showHour,\n      showMinute = pickedProps.showMinute,\n      showSecond = pickedProps.showSecond,\n      showMillisecond = pickedProps.showMillisecond;\n    var use12Hours = pickedProps.use12Hours;\n    var showMeridiem = checkShow(baselineFormat, ['a', 'A', 'LT', 'LLL', 'LTS'], use12Hours);\n    var hasShowConfig = existShowConfig(showHour, showMinute, showSecond, showMillisecond);\n\n    // Fill with format, if needed\n    if (!hasShowConfig) {\n      showHour = checkShow(baselineFormat, ['H', 'h', 'k', 'LT', 'LLL']);\n      showMinute = checkShow(baselineFormat, ['m', 'LT', 'LLL']);\n      showSecond = checkShow(baselineFormat, ['s', 'LTS']);\n      showMillisecond = checkShow(baselineFormat, ['SSS']);\n    }\n\n    // Fallback if all can not see\n    // ======================== Format ========================\n    var _fillShowConfig3 = fillShowConfig(hasShowConfig, showHour, showMinute, showSecond, showMillisecond);\n    var _fillShowConfig4 = _slicedToArray(_fillShowConfig3, 3);\n    showHour = _fillShowConfig4[0];\n    showMinute = _fillShowConfig4[1];\n    showSecond = _fillShowConfig4[2];\n    var timeFormat = showTimeFormat || fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, showMeridiem);\n\n    // ======================== Props =========================\n    return _objectSpread(_objectSpread({}, pickedProps), {}, {\n      // Format\n      format: timeFormat,\n      // Show Config\n      showHour: showHour,\n      showMinute: showMinute,\n      showSecond: showSecond,\n      showMillisecond: showMillisecond,\n      use12Hours: showMeridiem\n    });\n  }\n  return null;\n}"]},"metadata":{},"sourceType":"module"}