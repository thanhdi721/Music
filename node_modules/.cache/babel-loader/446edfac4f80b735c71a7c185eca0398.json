{"ast":null,"code":"\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nfunction notEmpty(val) {\n  return val !== undefined && val !== null;\n}\n\nconst Cell = props => {\n  const {\n    itemPrefixCls,\n    component,\n    span,\n    className,\n    style,\n    labelStyle,\n    contentStyle,\n    bordered,\n    label,\n    content,\n    colon,\n    type\n  } = props;\n  const Component = component;\n\n  if (bordered) {\n    return /*#__PURE__*/React.createElement(Component, {\n      className: classNames({\n        [`${itemPrefixCls}-item-label`]: type === 'label',\n        [`${itemPrefixCls}-item-content`]: type === 'content'\n      }, className),\n      style: style,\n      colSpan: span\n    }, notEmpty(label) && /*#__PURE__*/React.createElement(\"span\", {\n      style: labelStyle\n    }, label), notEmpty(content) && /*#__PURE__*/React.createElement(\"span\", {\n      style: contentStyle\n    }, content));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, {\n    className: classNames(`${itemPrefixCls}-item`, className),\n    style: style,\n    colSpan: span\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${itemPrefixCls}-item-container`\n  }, (label || label === 0) && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(`${itemPrefixCls}-item-label`, {\n      [`${itemPrefixCls}-item-no-colon`]: !colon\n    }),\n    style: labelStyle\n  }, label), (content || content === 0) && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(`${itemPrefixCls}-item-content`),\n    style: contentStyle\n  }, content)));\n};\n\nexport default Cell;","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/descriptions/Cell.js"],"names":["classNames","React","notEmpty","val","undefined","Cell","props","itemPrefixCls","component","span","className","style","labelStyle","contentStyle","bordered","label","content","colon","type","Component","createElement","colSpan"],"mappings":"AAAA;;AAEA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AACA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAOA,GAAG,KAAKC,SAAR,IAAqBD,GAAG,KAAK,IAApC;AACD;;AACD,MAAME,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,KALI;AAMJC,IAAAA,UANI;AAOJC,IAAAA,YAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA,KATI;AAUJC,IAAAA,OAVI;AAWJC,IAAAA,KAXI;AAYJC,IAAAA;AAZI,MAaFZ,KAbJ;AAcA,QAAMa,SAAS,GAAGX,SAAlB;;AACA,MAAIM,QAAJ,EAAc;AACZ,WAAO,aAAab,KAAK,CAACmB,aAAN,CAAoBD,SAApB,EAA+B;AACjDT,MAAAA,SAAS,EAAEV,UAAU,CAAC;AACpB,SAAE,GAAEO,aAAc,aAAlB,GAAiCW,IAAI,KAAK,OADtB;AAEpB,SAAE,GAAEX,aAAc,eAAlB,GAAmCW,IAAI,KAAK;AAFxB,OAAD,EAGlBR,SAHkB,CAD4B;AAKjDC,MAAAA,KAAK,EAAEA,KAL0C;AAMjDU,MAAAA,OAAO,EAAEZ;AANwC,KAA/B,EAOjBP,QAAQ,CAACa,KAAD,CAAR,IAAmB,aAAad,KAAK,CAACmB,aAAN,CAAoB,MAApB,EAA4B;AAC7DT,MAAAA,KAAK,EAAEC;AADsD,KAA5B,EAEhCG,KAFgC,CAPf,EASTb,QAAQ,CAACc,OAAD,CAAR,IAAqB,aAAaf,KAAK,CAACmB,aAAN,CAAoB,MAApB,EAA4B;AACvET,MAAAA,KAAK,EAAEE;AADgE,KAA5B,EAE1CG,OAF0C,CATzB,CAApB;AAYD;;AACD,SAAO,aAAaf,KAAK,CAACmB,aAAN,CAAoBD,SAApB,EAA+B;AACjDT,IAAAA,SAAS,EAAEV,UAAU,CAAE,GAAEO,aAAc,OAAlB,EAA0BG,SAA1B,CAD4B;AAEjDC,IAAAA,KAAK,EAAEA,KAF0C;AAGjDU,IAAAA,OAAO,EAAEZ;AAHwC,GAA/B,EAIjB,aAAaR,KAAK,CAACmB,aAAN,CAAoB,KAApB,EAA2B;AACzCV,IAAAA,SAAS,EAAG,GAAEH,aAAc;AADa,GAA3B,EAEb,CAACQ,KAAK,IAAIA,KAAK,KAAK,CAApB,KAA4B,aAAad,KAAK,CAACmB,aAAN,CAAoB,MAApB,EAA4B;AACtEV,IAAAA,SAAS,EAAEV,UAAU,CAAE,GAAEO,aAAc,aAAlB,EAAgC;AACnD,OAAE,GAAEA,aAAc,gBAAlB,GAAoC,CAACU;AADc,KAAhC,CADiD;AAItEN,IAAAA,KAAK,EAAEC;AAJ+D,GAA5B,EAKzCG,KALyC,CAF5B,EAOJ,CAACC,OAAO,IAAIA,OAAO,KAAK,CAAxB,KAAgC,aAAaf,KAAK,CAACmB,aAAN,CAAoB,MAApB,EAA4B;AACnFV,IAAAA,SAAS,EAAEV,UAAU,CAAE,GAAEO,aAAc,eAAlB,CAD8D;AAEnFI,IAAAA,KAAK,EAAEE;AAF4E,GAA5B,EAGtDG,OAHsD,CAPzC,CAJI,CAApB;AAeD,CA7CD;;AA8CA,eAAeX,IAAf","sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nfunction notEmpty(val) {\n  return val !== undefined && val !== null;\n}\nconst Cell = props => {\n  const {\n    itemPrefixCls,\n    component,\n    span,\n    className,\n    style,\n    labelStyle,\n    contentStyle,\n    bordered,\n    label,\n    content,\n    colon,\n    type\n  } = props;\n  const Component = component;\n  if (bordered) {\n    return /*#__PURE__*/React.createElement(Component, {\n      className: classNames({\n        [`${itemPrefixCls}-item-label`]: type === 'label',\n        [`${itemPrefixCls}-item-content`]: type === 'content'\n      }, className),\n      style: style,\n      colSpan: span\n    }, notEmpty(label) && /*#__PURE__*/React.createElement(\"span\", {\n      style: labelStyle\n    }, label), notEmpty(content) && /*#__PURE__*/React.createElement(\"span\", {\n      style: contentStyle\n    }, content));\n  }\n  return /*#__PURE__*/React.createElement(Component, {\n    className: classNames(`${itemPrefixCls}-item`, className),\n    style: style,\n    colSpan: span\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${itemPrefixCls}-item-container`\n  }, (label || label === 0) && ( /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(`${itemPrefixCls}-item-label`, {\n      [`${itemPrefixCls}-item-no-colon`]: !colon\n    }),\n    style: labelStyle\n  }, label)), (content || content === 0) && ( /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(`${itemPrefixCls}-item-content`),\n    style: contentStyle\n  }, content))));\n};\nexport default Cell;"]},"metadata":{},"sourceType":"module"}