{"ast":null,"code":"import { getShadowRoot } from \"rc-util/es/Dom/shadow\";\nimport { warning } from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { getWin } from \"../util\";\nexport default function useWinClick(open, clickToHide, targetEle, popupEle, mask, maskClosable, inPopupOrChild, triggerOpen) {\n  var openRef = React.useRef(open);\n  openRef.current = open; // Click to hide is special action since click popup element should not hide\n\n  React.useEffect(function () {\n    if (clickToHide && popupEle && (!mask || maskClosable)) {\n      var onTriggerClose = function onTriggerClose(_ref) {\n        var target = _ref.target;\n\n        if (openRef.current && !inPopupOrChild(target)) {\n          triggerOpen(false);\n        }\n      };\n\n      var win = getWin(popupEle);\n      win.addEventListener('mousedown', onTriggerClose, true);\n      win.addEventListener('contextmenu', onTriggerClose, true); // shadow root\n\n      var targetShadowRoot = getShadowRoot(targetEle);\n\n      if (targetShadowRoot) {\n        targetShadowRoot.addEventListener('mousedown', onTriggerClose, true);\n        targetShadowRoot.addEventListener('contextmenu', onTriggerClose, true);\n      } // Warning if target and popup not in same root\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        var _targetEle$getRootNod, _popupEle$getRootNode;\n\n        var targetRoot = targetEle === null || targetEle === void 0 || (_targetEle$getRootNod = targetEle.getRootNode) === null || _targetEle$getRootNod === void 0 ? void 0 : _targetEle$getRootNod.call(targetEle);\n        var popupRoot = (_popupEle$getRootNode = popupEle.getRootNode) === null || _popupEle$getRootNode === void 0 ? void 0 : _popupEle$getRootNode.call(popupEle);\n        warning(targetRoot === popupRoot, \"trigger element and popup element should in same shadow root.\");\n      }\n\n      return function () {\n        win.removeEventListener('mousedown', onTriggerClose, true);\n        win.removeEventListener('contextmenu', onTriggerClose, true);\n\n        if (targetShadowRoot) {\n          targetShadowRoot.removeEventListener('mousedown', onTriggerClose, true);\n          targetShadowRoot.removeEventListener('contextmenu', onTriggerClose, true);\n        }\n      };\n    }\n  }, [clickToHide, targetEle, popupEle, mask, maskClosable]);\n}","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/@rc-component/trigger/es/hooks/useWinClick.js"],"names":["getShadowRoot","warning","React","getWin","useWinClick","open","clickToHide","targetEle","popupEle","mask","maskClosable","inPopupOrChild","triggerOpen","openRef","useRef","current","useEffect","onTriggerClose","_ref","target","win","addEventListener","targetShadowRoot","process","env","NODE_ENV","_targetEle$getRootNod","_popupEle$getRootNode","targetRoot","getRootNode","call","popupRoot","removeEventListener"],"mappings":"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","sourcesContent":["import { getShadowRoot } from \"rc-util/es/Dom/shadow\";\nimport { warning } from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { getWin } from \"../util\";\nexport default function useWinClick(open, clickToHide, targetEle, popupEle, mask, maskClosable, inPopupOrChild, triggerOpen) {\n  var openRef = React.useRef(open);\n  openRef.current = open;\n\n  // Click to hide is special action since click popup element should not hide\n  React.useEffect(function () {\n    if (clickToHide && popupEle && (!mask || maskClosable)) {\n      var onTriggerClose = function onTriggerClose(_ref) {\n        var target = _ref.target;\n        if (openRef.current && !inPopupOrChild(target)) {\n          triggerOpen(false);\n        }\n      };\n      var win = getWin(popupEle);\n      win.addEventListener('mousedown', onTriggerClose, true);\n      win.addEventListener('contextmenu', onTriggerClose, true);\n\n      // shadow root\n      var targetShadowRoot = getShadowRoot(targetEle);\n      if (targetShadowRoot) {\n        targetShadowRoot.addEventListener('mousedown', onTriggerClose, true);\n        targetShadowRoot.addEventListener('contextmenu', onTriggerClose, true);\n      }\n\n      // Warning if target and popup not in same root\n      if (process.env.NODE_ENV !== 'production') {\n        var _targetEle$getRootNod, _popupEle$getRootNode;\n        var targetRoot = targetEle === null || targetEle === void 0 || (_targetEle$getRootNod = targetEle.getRootNode) === null || _targetEle$getRootNod === void 0 ? void 0 : _targetEle$getRootNod.call(targetEle);\n        var popupRoot = (_popupEle$getRootNode = popupEle.getRootNode) === null || _popupEle$getRootNode === void 0 ? void 0 : _popupEle$getRootNode.call(popupEle);\n        warning(targetRoot === popupRoot, \"trigger element and popup element should in same shadow root.\");\n      }\n      return function () {\n        win.removeEventListener('mousedown', onTriggerClose, true);\n        win.removeEventListener('contextmenu', onTriggerClose, true);\n        if (targetShadowRoot) {\n          targetShadowRoot.removeEventListener('mousedown', onTriggerClose, true);\n          targetShadowRoot.removeEventListener('contextmenu', onTriggerClose, true);\n        }\n      };\n    }\n  }, [clickToHide, targetEle, popupEle, mask, maskClosable]);\n}"]},"metadata":{},"sourceType":"module"}