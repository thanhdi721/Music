{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { isSame } from \"../utils/dateUtil\";\n/**\n * Toggles the presence of a value in an array.\n * If the value exists in the array, removed it.\n * Else add it.\n */\n\nexport default function useToggleDates(generateConfig, locale, panelMode) {\n  function toggleDates(list, target) {\n    var index = list.findIndex(function (date) {\n      return isSame(generateConfig, locale, date, target, panelMode);\n    });\n\n    if (index === -1) {\n      return [].concat(_toConsumableArray(list), [target]);\n    }\n\n    var sliceList = _toConsumableArray(list);\n\n    sliceList.splice(index, 1);\n    return sliceList;\n  }\n\n  return toggleDates;\n}","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/rc-picker/es/hooks/useToggleDates.js"],"names":["_toConsumableArray","isSame","useToggleDates","generateConfig","locale","panelMode","toggleDates","list","target","index","findIndex","date","concat","sliceList","splice"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,8CAA/B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,cAAT,CAAwBC,cAAxB,EAAwCC,MAAxC,EAAgDC,SAAhD,EAA2D;AACxE,WAASC,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAAmC;AACjC,QAAIC,KAAK,GAAGF,IAAI,CAACG,SAAL,CAAe,UAAUC,IAAV,EAAgB;AACzC,aAAOV,MAAM,CAACE,cAAD,EAAiBC,MAAjB,EAAyBO,IAAzB,EAA+BH,MAA/B,EAAuCH,SAAvC,CAAb;AACD,KAFW,CAAZ;;AAGA,QAAII,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,aAAO,GAAGG,MAAH,CAAUZ,kBAAkB,CAACO,IAAD,CAA5B,EAAoC,CAACC,MAAD,CAApC,CAAP;AACD;;AACD,QAAIK,SAAS,GAAGb,kBAAkB,CAACO,IAAD,CAAlC;;AACAM,IAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACA,WAAOI,SAAP;AACD;;AACD,SAAOP,WAAP;AACD","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { isSame } from \"../utils/dateUtil\";\n/**\n * Toggles the presence of a value in an array.\n * If the value exists in the array, removed it.\n * Else add it.\n */\nexport default function useToggleDates(generateConfig, locale, panelMode) {\n  function toggleDates(list, target) {\n    var index = list.findIndex(function (date) {\n      return isSame(generateConfig, locale, date, target, panelMode);\n    });\n    if (index === -1) {\n      return [].concat(_toConsumableArray(list), [target]);\n    }\n    var sliceList = _toConsumableArray(list);\n    sliceList.splice(index, 1);\n    return sliceList;\n  }\n  return toggleDates;\n}"]},"metadata":{},"sourceType":"module"}