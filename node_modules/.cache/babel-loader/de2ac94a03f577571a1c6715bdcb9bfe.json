{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport hash from '@emotion/hash';\nimport { removeCSS, updateCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport * as React from 'react'; // @ts-ignore\n\nimport unitless from '@emotion/unitless';\nimport { compile, serialize, stringify } from 'stylis';\nimport { contentQuotesLinter, hashedAnimationLinter } from \"../linters\";\nimport StyleContext, { ATTR_CACHE_PATH, ATTR_MARK, ATTR_TOKEN, CSS_IN_JS_INSTANCE } from \"../StyleContext\";\nimport { isClientSide, toStyleStr } from \"../util\";\nimport { CSS_FILE_STYLE, existPath, getStyleAndHash } from \"../util/cacheMapUtil\";\nimport useGlobalCache from \"./useGlobalCache\";\nvar SKIP_CHECK = '_skip_check_';\nvar MULTI_VALUE = '_multi_value_'; // ============================================================================\n// ==                                 Parser                                 ==\n// ============================================================================\n// Preprocessor style content to browser support one\n\nexport function normalizeStyle(styleStr) {\n  var serialized = serialize(compile(styleStr), stringify);\n  return serialized.replace(/\\{%%%\\:[^;];}/g, ';');\n}\n\nfunction isCompoundCSSProperty(value) {\n  return _typeof(value) === 'object' && value && (SKIP_CHECK in value || MULTI_VALUE in value);\n} // 注入 hash 值\n\n\nfunction injectSelectorHash(key, hashId, hashPriority) {\n  if (!hashId) {\n    return key;\n  }\n\n  var hashClassName = \".\".concat(hashId);\n  var hashSelector = hashPriority === 'low' ? \":where(\".concat(hashClassName, \")\") : hashClassName; // 注入 hashId\n\n  var keys = key.split(',').map(function (k) {\n    var _firstPath$match;\n\n    var fullPath = k.trim().split(/\\s+/); // 如果 Selector 第一个是 HTML Element，那我们就插到它的后面。反之，就插到最前面。\n\n    var firstPath = fullPath[0] || '';\n    var htmlElement = ((_firstPath$match = firstPath.match(/^\\w+/)) === null || _firstPath$match === void 0 ? void 0 : _firstPath$match[0]) || '';\n    firstPath = \"\".concat(htmlElement).concat(hashSelector).concat(firstPath.slice(htmlElement.length));\n    return [firstPath].concat(_toConsumableArray(fullPath.slice(1))).join(' ');\n  });\n  return keys.join(',');\n} // Parse CSSObject to style content\n\n\nexport var parseStyle = function parseStyle(interpolation) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    root: true,\n    parentSelectors: []\n  },\n      root = _ref.root,\n      injectHash = _ref.injectHash,\n      parentSelectors = _ref.parentSelectors;\n\n  var hashId = config.hashId,\n      layer = config.layer,\n      path = config.path,\n      hashPriority = config.hashPriority,\n      _config$transformers = config.transformers,\n      transformers = _config$transformers === void 0 ? [] : _config$transformers,\n      _config$linters = config.linters,\n      linters = _config$linters === void 0 ? [] : _config$linters;\n  var styleStr = '';\n  var effectStyle = {};\n\n  function parseKeyframes(keyframes) {\n    var animationName = keyframes.getName(hashId);\n\n    if (!effectStyle[animationName]) {\n      var _parseStyle = parseStyle(keyframes.style, config, {\n        root: false,\n        parentSelectors: parentSelectors\n      }),\n          _parseStyle2 = _slicedToArray(_parseStyle, 1),\n          _parsedStr = _parseStyle2[0];\n\n      effectStyle[animationName] = \"@keyframes \".concat(keyframes.getName(hashId)).concat(_parsedStr);\n    }\n  }\n\n  function flattenList(list) {\n    var fullList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    list.forEach(function (item) {\n      if (Array.isArray(item)) {\n        flattenList(item, fullList);\n      } else if (item) {\n        fullList.push(item);\n      }\n    });\n    return fullList;\n  }\n\n  var flattenStyleList = flattenList(Array.isArray(interpolation) ? interpolation : [interpolation]);\n  flattenStyleList.forEach(function (originStyle) {\n    // Only root level can use raw string\n    var style = typeof originStyle === 'string' && !root ? {} : originStyle;\n\n    if (typeof style === 'string') {\n      styleStr += \"\".concat(style, \"\\n\");\n    } else if (style._keyframe) {\n      // Keyframe\n      parseKeyframes(style);\n    } else {\n      var mergedStyle = transformers.reduce(function (prev, trans) {\n        var _trans$visit;\n\n        return (trans === null || trans === void 0 || (_trans$visit = trans.visit) === null || _trans$visit === void 0 ? void 0 : _trans$visit.call(trans, prev)) || prev;\n      }, style); // Normal CSSObject\n\n      Object.keys(mergedStyle).forEach(function (key) {\n        var value = mergedStyle[key];\n\n        if (_typeof(value) === 'object' && value && (key !== 'animationName' || !value._keyframe) && !isCompoundCSSProperty(value)) {\n          var subInjectHash = false; // 当成嵌套对象来处理\n\n          var mergedKey = key.trim(); // Whether treat child as root. In most case it is false.\n\n          var nextRoot = false; // 拆分多个选择器\n\n          if ((root || injectHash) && hashId) {\n            if (mergedKey.startsWith('@')) {\n              // 略过媒体查询，交给子节点继续插入 hashId\n              subInjectHash = true;\n            } else {\n              // 注入 hashId\n              mergedKey = injectSelectorHash(key, hashId, hashPriority);\n            }\n          } else if (root && !hashId && (mergedKey === '&' || mergedKey === '')) {\n            // In case of `{ '&': { a: { color: 'red' } } }` or `{ '': { a: { color: 'red' } } }` without hashId,\n            // we will get `&{a:{color:red;}}` or `{a:{color:red;}}` string for stylis to compile.\n            // But it does not conform to stylis syntax,\n            // and finally we will get `{color:red;}` as css, which is wrong.\n            // So we need to remove key in root, and treat child `{ a: { color: 'red' } }` as root.\n            mergedKey = '';\n            nextRoot = true;\n          }\n\n          var _parseStyle3 = parseStyle(value, config, {\n            root: nextRoot,\n            injectHash: subInjectHash,\n            parentSelectors: [].concat(_toConsumableArray(parentSelectors), [mergedKey])\n          }),\n              _parseStyle4 = _slicedToArray(_parseStyle3, 2),\n              _parsedStr2 = _parseStyle4[0],\n              childEffectStyle = _parseStyle4[1];\n\n          effectStyle = _objectSpread(_objectSpread({}, effectStyle), childEffectStyle);\n          styleStr += \"\".concat(mergedKey).concat(_parsedStr2);\n        } else {\n          var _value;\n\n          function appendStyle(cssKey, cssValue) {\n            if (process.env.NODE_ENV !== 'production' && (_typeof(value) !== 'object' || !(value !== null && value !== void 0 && value[SKIP_CHECK]))) {\n              [contentQuotesLinter, hashedAnimationLinter].concat(_toConsumableArray(linters)).forEach(function (linter) {\n                return linter(cssKey, cssValue, {\n                  path: path,\n                  hashId: hashId,\n                  parentSelectors: parentSelectors\n                });\n              });\n            } // 如果是样式则直接插入\n\n\n            var styleName = cssKey.replace(/[A-Z]/g, function (match) {\n              return \"-\".concat(match.toLowerCase());\n            }); // Auto suffix with px\n\n            var formatValue = cssValue;\n\n            if (!unitless[cssKey] && typeof formatValue === 'number' && formatValue !== 0) {\n              formatValue = \"\".concat(formatValue, \"px\");\n            } // handle animationName & Keyframe value\n\n\n            if (cssKey === 'animationName' && cssValue !== null && cssValue !== void 0 && cssValue._keyframe) {\n              parseKeyframes(cssValue);\n              formatValue = cssValue.getName(hashId);\n            }\n\n            styleStr += \"\".concat(styleName, \":\").concat(formatValue, \";\");\n          }\n\n          var actualValue = (_value = value === null || value === void 0 ? void 0 : value.value) !== null && _value !== void 0 ? _value : value;\n\n          if (_typeof(value) === 'object' && value !== null && value !== void 0 && value[MULTI_VALUE] && Array.isArray(actualValue)) {\n            actualValue.forEach(function (item) {\n              appendStyle(key, item);\n            });\n          } else {\n            appendStyle(key, actualValue);\n          }\n        }\n      });\n    }\n  });\n\n  if (!root) {\n    styleStr = \"{\".concat(styleStr, \"}\");\n  } else if (layer) {\n    styleStr = \"@layer \".concat(layer.name, \" {\").concat(styleStr, \"}\");\n\n    if (layer.dependencies) {\n      effectStyle[\"@layer \".concat(layer.name)] = layer.dependencies.map(function (deps) {\n        return \"@layer \".concat(deps, \", \").concat(layer.name, \";\");\n      }).join('\\n');\n    }\n  }\n\n  return [styleStr, effectStyle];\n}; // ============================================================================\n// ==                                Register                                ==\n// ============================================================================\n\nexport function uniqueHash(path, styleStr) {\n  return hash(\"\".concat(path.join('%')).concat(styleStr));\n}\n\nfunction Empty() {\n  return null;\n}\n\nexport var STYLE_PREFIX = 'style';\n/**\n * Register a style to the global style sheet.\n */\n\nexport default function useStyleRegister(info, styleFn) {\n  var token = info.token,\n      path = info.path,\n      hashId = info.hashId,\n      layer = info.layer,\n      nonce = info.nonce,\n      clientOnly = info.clientOnly,\n      _info$order = info.order,\n      order = _info$order === void 0 ? 0 : _info$order;\n\n  var _React$useContext = React.useContext(StyleContext),\n      autoClear = _React$useContext.autoClear,\n      mock = _React$useContext.mock,\n      defaultCache = _React$useContext.defaultCache,\n      hashPriority = _React$useContext.hashPriority,\n      container = _React$useContext.container,\n      ssrInline = _React$useContext.ssrInline,\n      transformers = _React$useContext.transformers,\n      linters = _React$useContext.linters,\n      cache = _React$useContext.cache,\n      enableLayer = _React$useContext.layer;\n\n  var tokenKey = token._tokenKey;\n  var fullPath = [tokenKey];\n\n  if (enableLayer) {\n    fullPath.push('layer');\n  }\n\n  fullPath.push.apply(fullPath, _toConsumableArray(path)); // Check if need insert style\n\n  var isMergedClientSide = isClientSide;\n\n  if (process.env.NODE_ENV !== 'production' && mock !== undefined) {\n    isMergedClientSide = mock === 'client';\n  }\n\n  var _useGlobalCache = useGlobalCache(STYLE_PREFIX, fullPath, // Create cache if needed\n  function () {\n    var cachePath = fullPath.join('|'); // Get style from SSR inline style directly\n\n    if (existPath(cachePath)) {\n      var _getStyleAndHash = getStyleAndHash(cachePath),\n          _getStyleAndHash2 = _slicedToArray(_getStyleAndHash, 2),\n          inlineCacheStyleStr = _getStyleAndHash2[0],\n          styleHash = _getStyleAndHash2[1];\n\n      if (inlineCacheStyleStr) {\n        return [inlineCacheStyleStr, tokenKey, styleHash, {}, clientOnly, order];\n      }\n    } // Generate style\n\n\n    var styleObj = styleFn();\n\n    var _parseStyle5 = parseStyle(styleObj, {\n      hashId: hashId,\n      hashPriority: hashPriority,\n      layer: enableLayer ? layer : undefined,\n      path: path.join('-'),\n      transformers: transformers,\n      linters: linters\n    }),\n        _parseStyle6 = _slicedToArray(_parseStyle5, 2),\n        parsedStyle = _parseStyle6[0],\n        effectStyle = _parseStyle6[1];\n\n    var styleStr = normalizeStyle(parsedStyle);\n    var styleId = uniqueHash(fullPath, styleStr);\n    return [styleStr, tokenKey, styleId, effectStyle, clientOnly, order];\n  }, // Remove cache if no need\n  function (_ref2, fromHMR) {\n    var _ref3 = _slicedToArray(_ref2, 3),\n        styleId = _ref3[2];\n\n    if ((fromHMR || autoClear) && isClientSide) {\n      removeCSS(styleId, {\n        mark: ATTR_MARK\n      });\n    }\n  }, // Effect: Inject style here\n  function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 4),\n        styleStr = _ref5[0],\n        _ = _ref5[1],\n        styleId = _ref5[2],\n        effectStyle = _ref5[3];\n\n    if (isMergedClientSide && styleStr !== CSS_FILE_STYLE) {\n      var mergedCSSConfig = {\n        mark: ATTR_MARK,\n        prepend: enableLayer ? false : 'queue',\n        attachTo: container,\n        priority: order\n      };\n      var nonceStr = typeof nonce === 'function' ? nonce() : nonce;\n\n      if (nonceStr) {\n        mergedCSSConfig.csp = {\n          nonce: nonceStr\n        };\n      } // ================= Split Effect Style =================\n      // We will split effectStyle here since @layer should be at the top level\n\n\n      var effectLayerKeys = [];\n      var effectRestKeys = [];\n      Object.keys(effectStyle).forEach(function (key) {\n        if (key.startsWith('@layer')) {\n          effectLayerKeys.push(key);\n        } else {\n          effectRestKeys.push(key);\n        }\n      }); // ================= Inject Layer Style =================\n      // Inject layer style\n\n      effectLayerKeys.forEach(function (effectKey) {\n        updateCSS(normalizeStyle(effectStyle[effectKey]), \"_layer-\".concat(effectKey), _objectSpread(_objectSpread({}, mergedCSSConfig), {}, {\n          prepend: true\n        }));\n      }); // ==================== Inject Style ====================\n      // Inject style\n\n      var style = updateCSS(styleStr, styleId, mergedCSSConfig);\n      style[CSS_IN_JS_INSTANCE] = cache.instanceId; // Used for `useCacheToken` to remove on batch when token removed\n\n      style.setAttribute(ATTR_TOKEN, tokenKey); // Debug usage. Dev only\n\n      if (process.env.NODE_ENV !== 'production') {\n        style.setAttribute(ATTR_CACHE_PATH, fullPath.join('|'));\n      } // ================ Inject Effect Style =================\n      // Inject client side effect style\n\n\n      effectRestKeys.forEach(function (effectKey) {\n        updateCSS(normalizeStyle(effectStyle[effectKey]), \"_effect-\".concat(effectKey), mergedCSSConfig);\n      });\n    }\n  }),\n      _useGlobalCache2 = _slicedToArray(_useGlobalCache, 3),\n      cachedStyleStr = _useGlobalCache2[0],\n      cachedTokenKey = _useGlobalCache2[1],\n      cachedStyleId = _useGlobalCache2[2];\n\n  return function (node) {\n    var styleNode;\n\n    if (!ssrInline || isMergedClientSide || !defaultCache) {\n      styleNode = /*#__PURE__*/React.createElement(Empty, null);\n    } else {\n      var _ref6;\n\n      styleNode = /*#__PURE__*/React.createElement(\"style\", _extends({}, (_ref6 = {}, _defineProperty(_ref6, ATTR_TOKEN, cachedTokenKey), _defineProperty(_ref6, ATTR_MARK, cachedStyleId), _ref6), {\n        dangerouslySetInnerHTML: {\n          __html: cachedStyleStr\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, styleNode, node);\n  };\n}\nexport var extract = function extract(cache, effectStyles, options) {\n  var _cache = _slicedToArray(cache, 6),\n      styleStr = _cache[0],\n      tokenKey = _cache[1],\n      styleId = _cache[2],\n      effectStyle = _cache[3],\n      clientOnly = _cache[4],\n      order = _cache[5];\n\n  var _ref7 = options || {},\n      plain = _ref7.plain; // Skip client only style\n\n\n  if (clientOnly) {\n    return null;\n  }\n\n  var keyStyleText = styleStr; // ====================== Share ======================\n  // Used for rc-util\n\n  var sharedAttrs = {\n    'data-rc-order': 'prependQueue',\n    'data-rc-priority': \"\".concat(order)\n  }; // ====================== Style ======================\n\n  keyStyleText = toStyleStr(styleStr, tokenKey, styleId, sharedAttrs, plain); // =============== Create effect style ===============\n\n  if (effectStyle) {\n    Object.keys(effectStyle).forEach(function (effectKey) {\n      // Effect style can be reused\n      if (!effectStyles[effectKey]) {\n        effectStyles[effectKey] = true;\n        var effectStyleStr = normalizeStyle(effectStyle[effectKey]);\n        var effectStyleHTML = toStyleStr(effectStyleStr, tokenKey, \"_effect-\".concat(effectKey), sharedAttrs, plain);\n\n        if (effectKey.startsWith('@layer')) {\n          keyStyleText = effectStyleHTML + keyStyleText;\n        } else {\n          keyStyleText += effectStyleHTML;\n        }\n      }\n    });\n  }\n\n  return [order, styleId, keyStyleText];\n};","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/@ant-design/cssinjs/es/hooks/useStyleRegister.js"],"names":["_extends","_defineProperty","_objectSpread","_slicedToArray","_toConsumableArray","_typeof","hash","removeCSS","updateCSS","React","unitless","compile","serialize","stringify","contentQuotesLinter","hashedAnimationLinter","StyleContext","ATTR_CACHE_PATH","ATTR_MARK","ATTR_TOKEN","CSS_IN_JS_INSTANCE","isClientSide","toStyleStr","CSS_FILE_STYLE","existPath","getStyleAndHash","useGlobalCache","SKIP_CHECK","MULTI_VALUE","normalizeStyle","styleStr","serialized","replace","isCompoundCSSProperty","value","injectSelectorHash","key","hashId","hashPriority","hashClassName","concat","hashSelector","keys","split","map","k","_firstPath$match","fullPath","trim","firstPath","htmlElement","match","slice","length","join","parseStyle","interpolation","config","arguments","undefined","_ref","root","parentSelectors","injectHash","layer","path","_config$transformers","transformers","_config$linters","linters","effectStyle","parseKeyframes","keyframes","animationName","getName","_parseStyle","style","_parseStyle2","_parsedStr","flattenList","list","fullList","forEach","item","Array","isArray","push","flattenStyleList","originStyle","_keyframe","mergedStyle","reduce","prev","trans","_trans$visit","visit","call","Object","subInjectHash","mergedKey","nextRoot","startsWith","_parseStyle3","_parseStyle4","_parsedStr2","childEffectStyle","_value","appendStyle","cssKey","cssValue","process","env","NODE_ENV","linter","styleName","toLowerCase","formatValue","actualValue","name","dependencies","deps","uniqueHash","Empty","STYLE_PREFIX","useStyleRegister","info","styleFn","token","nonce","clientOnly","_info$order","order","_React$useContext","useContext","autoClear","mock","defaultCache","container","ssrInline","cache","enableLayer","tokenKey","_tokenKey","apply","isMergedClientSide","_useGlobalCache","cachePath","_getStyleAndHash","_getStyleAndHash2","inlineCacheStyleStr","styleHash","styleObj","_parseStyle5","_parseStyle6","parsedStyle","styleId","_ref2","fromHMR","_ref3","mark","_ref4","_ref5","_","mergedCSSConfig","prepend","attachTo","priority","nonceStr","csp","effectLayerKeys","effectRestKeys","effectKey","instanceId","setAttribute","_useGlobalCache2","cachedStyleStr","cachedTokenKey","cachedStyleId","node","styleNode","createElement","_ref6","dangerouslySetInnerHTML","__html","Fragment","extract","effectStyles","options","_cache","_ref7","plain","keyStyleText","sharedAttrs","effectStyleStr","effectStyleHTML"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport hash from '@emotion/hash';\nimport { removeCSS, updateCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport * as React from 'react';\n// @ts-ignore\nimport unitless from '@emotion/unitless';\nimport { compile, serialize, stringify } from 'stylis';\nimport { contentQuotesLinter, hashedAnimationLinter } from \"../linters\";\nimport StyleContext, { ATTR_CACHE_PATH, ATTR_MARK, ATTR_TOKEN, CSS_IN_JS_INSTANCE } from \"../StyleContext\";\nimport { isClientSide, toStyleStr } from \"../util\";\nimport { CSS_FILE_STYLE, existPath, getStyleAndHash } from \"../util/cacheMapUtil\";\nimport useGlobalCache from \"./useGlobalCache\";\nvar SKIP_CHECK = '_skip_check_';\nvar MULTI_VALUE = '_multi_value_';\n// ============================================================================\n// ==                                 Parser                                 ==\n// ============================================================================\n// Preprocessor style content to browser support one\nexport function normalizeStyle(styleStr) {\n  var serialized = serialize(compile(styleStr), stringify);\n  return serialized.replace(/\\{%%%\\:[^;];}/g, ';');\n}\nfunction isCompoundCSSProperty(value) {\n  return _typeof(value) === 'object' && value && (SKIP_CHECK in value || MULTI_VALUE in value);\n}\n\n// 注入 hash 值\nfunction injectSelectorHash(key, hashId, hashPriority) {\n  if (!hashId) {\n    return key;\n  }\n  var hashClassName = \".\".concat(hashId);\n  var hashSelector = hashPriority === 'low' ? \":where(\".concat(hashClassName, \")\") : hashClassName;\n\n  // 注入 hashId\n  var keys = key.split(',').map(function (k) {\n    var _firstPath$match;\n    var fullPath = k.trim().split(/\\s+/);\n\n    // 如果 Selector 第一个是 HTML Element，那我们就插到它的后面。反之，就插到最前面。\n    var firstPath = fullPath[0] || '';\n    var htmlElement = ((_firstPath$match = firstPath.match(/^\\w+/)) === null || _firstPath$match === void 0 ? void 0 : _firstPath$match[0]) || '';\n    firstPath = \"\".concat(htmlElement).concat(hashSelector).concat(firstPath.slice(htmlElement.length));\n    return [firstPath].concat(_toConsumableArray(fullPath.slice(1))).join(' ');\n  });\n  return keys.join(',');\n}\n// Parse CSSObject to style content\nexport var parseStyle = function parseStyle(interpolation) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      root: true,\n      parentSelectors: []\n    },\n    root = _ref.root,\n    injectHash = _ref.injectHash,\n    parentSelectors = _ref.parentSelectors;\n  var hashId = config.hashId,\n    layer = config.layer,\n    path = config.path,\n    hashPriority = config.hashPriority,\n    _config$transformers = config.transformers,\n    transformers = _config$transformers === void 0 ? [] : _config$transformers,\n    _config$linters = config.linters,\n    linters = _config$linters === void 0 ? [] : _config$linters;\n  var styleStr = '';\n  var effectStyle = {};\n  function parseKeyframes(keyframes) {\n    var animationName = keyframes.getName(hashId);\n    if (!effectStyle[animationName]) {\n      var _parseStyle = parseStyle(keyframes.style, config, {\n          root: false,\n          parentSelectors: parentSelectors\n        }),\n        _parseStyle2 = _slicedToArray(_parseStyle, 1),\n        _parsedStr = _parseStyle2[0];\n      effectStyle[animationName] = \"@keyframes \".concat(keyframes.getName(hashId)).concat(_parsedStr);\n    }\n  }\n  function flattenList(list) {\n    var fullList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    list.forEach(function (item) {\n      if (Array.isArray(item)) {\n        flattenList(item, fullList);\n      } else if (item) {\n        fullList.push(item);\n      }\n    });\n    return fullList;\n  }\n  var flattenStyleList = flattenList(Array.isArray(interpolation) ? interpolation : [interpolation]);\n  flattenStyleList.forEach(function (originStyle) {\n    // Only root level can use raw string\n    var style = typeof originStyle === 'string' && !root ? {} : originStyle;\n    if (typeof style === 'string') {\n      styleStr += \"\".concat(style, \"\\n\");\n    } else if (style._keyframe) {\n      // Keyframe\n      parseKeyframes(style);\n    } else {\n      var mergedStyle = transformers.reduce(function (prev, trans) {\n        var _trans$visit;\n        return (trans === null || trans === void 0 || (_trans$visit = trans.visit) === null || _trans$visit === void 0 ? void 0 : _trans$visit.call(trans, prev)) || prev;\n      }, style);\n\n      // Normal CSSObject\n      Object.keys(mergedStyle).forEach(function (key) {\n        var value = mergedStyle[key];\n        if (_typeof(value) === 'object' && value && (key !== 'animationName' || !value._keyframe) && !isCompoundCSSProperty(value)) {\n          var subInjectHash = false;\n\n          // 当成嵌套对象来处理\n          var mergedKey = key.trim();\n          // Whether treat child as root. In most case it is false.\n          var nextRoot = false;\n\n          // 拆分多个选择器\n          if ((root || injectHash) && hashId) {\n            if (mergedKey.startsWith('@')) {\n              // 略过媒体查询，交给子节点继续插入 hashId\n              subInjectHash = true;\n            } else {\n              // 注入 hashId\n              mergedKey = injectSelectorHash(key, hashId, hashPriority);\n            }\n          } else if (root && !hashId && (mergedKey === '&' || mergedKey === '')) {\n            // In case of `{ '&': { a: { color: 'red' } } }` or `{ '': { a: { color: 'red' } } }` without hashId,\n            // we will get `&{a:{color:red;}}` or `{a:{color:red;}}` string for stylis to compile.\n            // But it does not conform to stylis syntax,\n            // and finally we will get `{color:red;}` as css, which is wrong.\n            // So we need to remove key in root, and treat child `{ a: { color: 'red' } }` as root.\n            mergedKey = '';\n            nextRoot = true;\n          }\n          var _parseStyle3 = parseStyle(value, config, {\n              root: nextRoot,\n              injectHash: subInjectHash,\n              parentSelectors: [].concat(_toConsumableArray(parentSelectors), [mergedKey])\n            }),\n            _parseStyle4 = _slicedToArray(_parseStyle3, 2),\n            _parsedStr2 = _parseStyle4[0],\n            childEffectStyle = _parseStyle4[1];\n          effectStyle = _objectSpread(_objectSpread({}, effectStyle), childEffectStyle);\n          styleStr += \"\".concat(mergedKey).concat(_parsedStr2);\n        } else {\n          var _value;\n          function appendStyle(cssKey, cssValue) {\n            if (process.env.NODE_ENV !== 'production' && (_typeof(value) !== 'object' || !(value !== null && value !== void 0 && value[SKIP_CHECK]))) {\n              [contentQuotesLinter, hashedAnimationLinter].concat(_toConsumableArray(linters)).forEach(function (linter) {\n                return linter(cssKey, cssValue, {\n                  path: path,\n                  hashId: hashId,\n                  parentSelectors: parentSelectors\n                });\n              });\n            }\n\n            // 如果是样式则直接插入\n            var styleName = cssKey.replace(/[A-Z]/g, function (match) {\n              return \"-\".concat(match.toLowerCase());\n            });\n\n            // Auto suffix with px\n            var formatValue = cssValue;\n            if (!unitless[cssKey] && typeof formatValue === 'number' && formatValue !== 0) {\n              formatValue = \"\".concat(formatValue, \"px\");\n            }\n\n            // handle animationName & Keyframe value\n            if (cssKey === 'animationName' && cssValue !== null && cssValue !== void 0 && cssValue._keyframe) {\n              parseKeyframes(cssValue);\n              formatValue = cssValue.getName(hashId);\n            }\n            styleStr += \"\".concat(styleName, \":\").concat(formatValue, \";\");\n          }\n          var actualValue = (_value = value === null || value === void 0 ? void 0 : value.value) !== null && _value !== void 0 ? _value : value;\n          if (_typeof(value) === 'object' && value !== null && value !== void 0 && value[MULTI_VALUE] && Array.isArray(actualValue)) {\n            actualValue.forEach(function (item) {\n              appendStyle(key, item);\n            });\n          } else {\n            appendStyle(key, actualValue);\n          }\n        }\n      });\n    }\n  });\n  if (!root) {\n    styleStr = \"{\".concat(styleStr, \"}\");\n  } else if (layer) {\n    styleStr = \"@layer \".concat(layer.name, \" {\").concat(styleStr, \"}\");\n    if (layer.dependencies) {\n      effectStyle[\"@layer \".concat(layer.name)] = layer.dependencies.map(function (deps) {\n        return \"@layer \".concat(deps, \", \").concat(layer.name, \";\");\n      }).join('\\n');\n    }\n  }\n  return [styleStr, effectStyle];\n};\n\n// ============================================================================\n// ==                                Register                                ==\n// ============================================================================\nexport function uniqueHash(path, styleStr) {\n  return hash(\"\".concat(path.join('%')).concat(styleStr));\n}\nfunction Empty() {\n  return null;\n}\nexport var STYLE_PREFIX = 'style';\n/**\n * Register a style to the global style sheet.\n */\nexport default function useStyleRegister(info, styleFn) {\n  var token = info.token,\n    path = info.path,\n    hashId = info.hashId,\n    layer = info.layer,\n    nonce = info.nonce,\n    clientOnly = info.clientOnly,\n    _info$order = info.order,\n    order = _info$order === void 0 ? 0 : _info$order;\n  var _React$useContext = React.useContext(StyleContext),\n    autoClear = _React$useContext.autoClear,\n    mock = _React$useContext.mock,\n    defaultCache = _React$useContext.defaultCache,\n    hashPriority = _React$useContext.hashPriority,\n    container = _React$useContext.container,\n    ssrInline = _React$useContext.ssrInline,\n    transformers = _React$useContext.transformers,\n    linters = _React$useContext.linters,\n    cache = _React$useContext.cache,\n    enableLayer = _React$useContext.layer;\n  var tokenKey = token._tokenKey;\n  var fullPath = [tokenKey];\n  if (enableLayer) {\n    fullPath.push('layer');\n  }\n  fullPath.push.apply(fullPath, _toConsumableArray(path));\n\n  // Check if need insert style\n  var isMergedClientSide = isClientSide;\n  if (process.env.NODE_ENV !== 'production' && mock !== undefined) {\n    isMergedClientSide = mock === 'client';\n  }\n  var _useGlobalCache = useGlobalCache(STYLE_PREFIX, fullPath,\n    // Create cache if needed\n    function () {\n      var cachePath = fullPath.join('|');\n\n      // Get style from SSR inline style directly\n      if (existPath(cachePath)) {\n        var _getStyleAndHash = getStyleAndHash(cachePath),\n          _getStyleAndHash2 = _slicedToArray(_getStyleAndHash, 2),\n          inlineCacheStyleStr = _getStyleAndHash2[0],\n          styleHash = _getStyleAndHash2[1];\n        if (inlineCacheStyleStr) {\n          return [inlineCacheStyleStr, tokenKey, styleHash, {}, clientOnly, order];\n        }\n      }\n\n      // Generate style\n      var styleObj = styleFn();\n      var _parseStyle5 = parseStyle(styleObj, {\n          hashId: hashId,\n          hashPriority: hashPriority,\n          layer: enableLayer ? layer : undefined,\n          path: path.join('-'),\n          transformers: transformers,\n          linters: linters\n        }),\n        _parseStyle6 = _slicedToArray(_parseStyle5, 2),\n        parsedStyle = _parseStyle6[0],\n        effectStyle = _parseStyle6[1];\n      var styleStr = normalizeStyle(parsedStyle);\n      var styleId = uniqueHash(fullPath, styleStr);\n      return [styleStr, tokenKey, styleId, effectStyle, clientOnly, order];\n    },\n    // Remove cache if no need\n    function (_ref2, fromHMR) {\n      var _ref3 = _slicedToArray(_ref2, 3),\n        styleId = _ref3[2];\n      if ((fromHMR || autoClear) && isClientSide) {\n        removeCSS(styleId, {\n          mark: ATTR_MARK\n        });\n      }\n    },\n    // Effect: Inject style here\n    function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 4),\n        styleStr = _ref5[0],\n        _ = _ref5[1],\n        styleId = _ref5[2],\n        effectStyle = _ref5[3];\n      if (isMergedClientSide && styleStr !== CSS_FILE_STYLE) {\n        var mergedCSSConfig = {\n          mark: ATTR_MARK,\n          prepend: enableLayer ? false : 'queue',\n          attachTo: container,\n          priority: order\n        };\n        var nonceStr = typeof nonce === 'function' ? nonce() : nonce;\n        if (nonceStr) {\n          mergedCSSConfig.csp = {\n            nonce: nonceStr\n          };\n        }\n\n        // ================= Split Effect Style =================\n        // We will split effectStyle here since @layer should be at the top level\n        var effectLayerKeys = [];\n        var effectRestKeys = [];\n        Object.keys(effectStyle).forEach(function (key) {\n          if (key.startsWith('@layer')) {\n            effectLayerKeys.push(key);\n          } else {\n            effectRestKeys.push(key);\n          }\n        });\n\n        // ================= Inject Layer Style =================\n        // Inject layer style\n        effectLayerKeys.forEach(function (effectKey) {\n          updateCSS(normalizeStyle(effectStyle[effectKey]), \"_layer-\".concat(effectKey), _objectSpread(_objectSpread({}, mergedCSSConfig), {}, {\n            prepend: true\n          }));\n        });\n\n        // ==================== Inject Style ====================\n        // Inject style\n        var style = updateCSS(styleStr, styleId, mergedCSSConfig);\n        style[CSS_IN_JS_INSTANCE] = cache.instanceId;\n\n        // Used for `useCacheToken` to remove on batch when token removed\n        style.setAttribute(ATTR_TOKEN, tokenKey);\n\n        // Debug usage. Dev only\n        if (process.env.NODE_ENV !== 'production') {\n          style.setAttribute(ATTR_CACHE_PATH, fullPath.join('|'));\n        }\n\n        // ================ Inject Effect Style =================\n        // Inject client side effect style\n        effectRestKeys.forEach(function (effectKey) {\n          updateCSS(normalizeStyle(effectStyle[effectKey]), \"_effect-\".concat(effectKey), mergedCSSConfig);\n        });\n      }\n    }),\n    _useGlobalCache2 = _slicedToArray(_useGlobalCache, 3),\n    cachedStyleStr = _useGlobalCache2[0],\n    cachedTokenKey = _useGlobalCache2[1],\n    cachedStyleId = _useGlobalCache2[2];\n  return function (node) {\n    var styleNode;\n    if (!ssrInline || isMergedClientSide || !defaultCache) {\n      styleNode = /*#__PURE__*/React.createElement(Empty, null);\n    } else {\n      var _ref6;\n      styleNode = /*#__PURE__*/React.createElement(\"style\", _extends({}, (_ref6 = {}, _defineProperty(_ref6, ATTR_TOKEN, cachedTokenKey), _defineProperty(_ref6, ATTR_MARK, cachedStyleId), _ref6), {\n        dangerouslySetInnerHTML: {\n          __html: cachedStyleStr\n        }\n      }));\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, styleNode, node);\n  };\n}\nexport var extract = function extract(cache, effectStyles, options) {\n  var _cache = _slicedToArray(cache, 6),\n    styleStr = _cache[0],\n    tokenKey = _cache[1],\n    styleId = _cache[2],\n    effectStyle = _cache[3],\n    clientOnly = _cache[4],\n    order = _cache[5];\n  var _ref7 = options || {},\n    plain = _ref7.plain;\n\n  // Skip client only style\n  if (clientOnly) {\n    return null;\n  }\n  var keyStyleText = styleStr;\n\n  // ====================== Share ======================\n  // Used for rc-util\n  var sharedAttrs = {\n    'data-rc-order': 'prependQueue',\n    'data-rc-priority': \"\".concat(order)\n  };\n\n  // ====================== Style ======================\n  keyStyleText = toStyleStr(styleStr, tokenKey, styleId, sharedAttrs, plain);\n\n  // =============== Create effect style ===============\n  if (effectStyle) {\n    Object.keys(effectStyle).forEach(function (effectKey) {\n      // Effect style can be reused\n      if (!effectStyles[effectKey]) {\n        effectStyles[effectKey] = true;\n        var effectStyleStr = normalizeStyle(effectStyle[effectKey]);\n        var effectStyleHTML = toStyleStr(effectStyleStr, tokenKey, \"_effect-\".concat(effectKey), sharedAttrs, plain);\n        if (effectKey.startsWith('@layer')) {\n          keyStyleText = effectStyleHTML + keyStyleText;\n        } else {\n          keyStyleText += effectStyleHTML;\n        }\n      }\n    });\n  }\n  return [order, styleId, keyStyleText];\n};"]},"metadata":{},"sourceType":"module"}