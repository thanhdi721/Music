{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport addEventListener from \"rc-util/es/Dom/addEventListener\";\nimport { getOffset } from \"rc-util/es/Dom/css\";\nimport getScrollBarSize from \"rc-util/es/getScrollBarSize\";\nimport * as React from 'react';\nimport TableContext from \"./context/TableContext\";\nimport { useLayoutState } from \"./hooks/useFrame\";\nimport raf from \"rc-util/es/raf\";\n\nvar StickyScrollBar = function StickyScrollBar(_ref, ref) {\n  var _scrollBodyRef$curren, _scrollBodyRef$curren2;\n\n  var scrollBodyRef = _ref.scrollBodyRef,\n      onScroll = _ref.onScroll,\n      offsetScroll = _ref.offsetScroll,\n      container = _ref.container;\n  var prefixCls = useContext(TableContext, 'prefixCls');\n  var bodyScrollWidth = ((_scrollBodyRef$curren = scrollBodyRef.current) === null || _scrollBodyRef$curren === void 0 ? void 0 : _scrollBodyRef$curren.scrollWidth) || 0;\n  var bodyWidth = ((_scrollBodyRef$curren2 = scrollBodyRef.current) === null || _scrollBodyRef$curren2 === void 0 ? void 0 : _scrollBodyRef$curren2.clientWidth) || 0;\n  var scrollBarWidth = bodyScrollWidth && bodyWidth * (bodyWidth / bodyScrollWidth);\n  var scrollBarRef = React.useRef();\n\n  var _useLayoutState = useLayoutState({\n    scrollLeft: 0,\n    isHiddenScrollBar: false\n  }),\n      _useLayoutState2 = _slicedToArray(_useLayoutState, 2),\n      scrollState = _useLayoutState2[0],\n      setScrollState = _useLayoutState2[1];\n\n  var refState = React.useRef({\n    delta: 0,\n    x: 0\n  });\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isActive = _React$useState2[0],\n      setActive = _React$useState2[1];\n\n  var rafRef = React.useRef(null);\n  React.useEffect(function () {\n    return function () {\n      raf.cancel(rafRef.current);\n    };\n  }, []);\n\n  var onMouseUp = function onMouseUp() {\n    setActive(false);\n  };\n\n  var onMouseDown = function onMouseDown(event) {\n    event.persist();\n    refState.current.delta = event.pageX - scrollState.scrollLeft;\n    refState.current.x = 0;\n    setActive(true);\n    event.preventDefault();\n  };\n\n  var onMouseMove = function onMouseMove(event) {\n    var _window; // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n\n\n    var _ref2 = event || ((_window = window) === null || _window === void 0 ? void 0 : _window.event),\n        buttons = _ref2.buttons;\n\n    if (!isActive || buttons === 0) {\n      // If out body mouse up, we can set isActive false when mouse move\n      if (isActive) {\n        setActive(false);\n      }\n\n      return;\n    }\n\n    var left = refState.current.x + event.pageX - refState.current.x - refState.current.delta;\n\n    if (left <= 0) {\n      left = 0;\n    }\n\n    if (left + scrollBarWidth >= bodyWidth) {\n      left = bodyWidth - scrollBarWidth;\n    }\n\n    onScroll({\n      scrollLeft: left / bodyWidth * (bodyScrollWidth + 2)\n    });\n    refState.current.x = event.pageX;\n  };\n\n  var checkScrollBarVisible = function checkScrollBarVisible() {\n    rafRef.current = raf(function () {\n      if (!scrollBodyRef.current) {\n        return;\n      }\n\n      var tableOffsetTop = getOffset(scrollBodyRef.current).top;\n      var tableBottomOffset = tableOffsetTop + scrollBodyRef.current.offsetHeight;\n      var currentClientOffset = container === window ? document.documentElement.scrollTop + window.innerHeight : getOffset(container).top + container.clientHeight;\n\n      if (tableBottomOffset - getScrollBarSize() <= currentClientOffset || tableOffsetTop >= currentClientOffset - offsetScroll) {\n        setScrollState(function (state) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isHiddenScrollBar: true\n          });\n        });\n      } else {\n        setScrollState(function (state) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isHiddenScrollBar: false\n          });\n        });\n      }\n    });\n  };\n\n  var setScrollLeft = function setScrollLeft(left) {\n    setScrollState(function (state) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        scrollLeft: left / bodyScrollWidth * bodyWidth || 0\n      });\n    });\n  };\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      setScrollLeft: setScrollLeft,\n      checkScrollBarVisible: checkScrollBarVisible\n    };\n  });\n  React.useEffect(function () {\n    var onMouseUpListener = addEventListener(document.body, 'mouseup', onMouseUp, false);\n    var onMouseMoveListener = addEventListener(document.body, 'mousemove', onMouseMove, false);\n    checkScrollBarVisible();\n    return function () {\n      onMouseUpListener.remove();\n      onMouseMoveListener.remove();\n    };\n  }, [scrollBarWidth, isActive]);\n  React.useEffect(function () {\n    var onScrollListener = addEventListener(container, 'scroll', checkScrollBarVisible, false);\n    var onResizeListener = addEventListener(window, 'resize', checkScrollBarVisible, false);\n    return function () {\n      onScrollListener.remove();\n      onResizeListener.remove();\n    };\n  }, [container]);\n  React.useEffect(function () {\n    if (!scrollState.isHiddenScrollBar) {\n      setScrollState(function (state) {\n        var bodyNode = scrollBodyRef.current;\n\n        if (!bodyNode) {\n          return state;\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          scrollLeft: bodyNode.scrollLeft / bodyNode.scrollWidth * bodyNode.clientWidth\n        });\n      });\n    }\n  }, [scrollState.isHiddenScrollBar]);\n\n  if (bodyScrollWidth <= bodyWidth || !scrollBarWidth || scrollState.isHiddenScrollBar) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: getScrollBarSize(),\n      width: bodyWidth,\n      bottom: offsetScroll\n    },\n    className: \"\".concat(prefixCls, \"-sticky-scroll\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: onMouseDown,\n    ref: scrollBarRef,\n    className: classNames(\"\".concat(prefixCls, \"-sticky-scroll-bar\"), _defineProperty({}, \"\".concat(prefixCls, \"-sticky-scroll-bar-active\"), isActive)),\n    style: {\n      width: \"\".concat(scrollBarWidth, \"px\"),\n      transform: \"translate3d(\".concat(scrollState.scrollLeft, \"px, 0, 0)\")\n    }\n  }));\n};\n\nexport default /*#__PURE__*/React.forwardRef(StickyScrollBar);","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/rc-table/es/stickyScrollBar.js"],"names":["_defineProperty","_objectSpread","_slicedToArray","useContext","classNames","addEventListener","getOffset","getScrollBarSize","React","TableContext","useLayoutState","raf","StickyScrollBar","_ref","ref","_scrollBodyRef$curren","_scrollBodyRef$curren2","scrollBodyRef","onScroll","offsetScroll","container","prefixCls","bodyScrollWidth","current","scrollWidth","bodyWidth","clientWidth","scrollBarWidth","scrollBarRef","useRef","_useLayoutState","scrollLeft","isHiddenScrollBar","_useLayoutState2","scrollState","setScrollState","refState","delta","x","_React$useState","useState","_React$useState2","isActive","setActive","rafRef","useEffect","cancel","onMouseUp","onMouseDown","event","persist","pageX","preventDefault","onMouseMove","_window","_ref2","window","buttons","left","checkScrollBarVisible","tableOffsetTop","top","tableBottomOffset","offsetHeight","currentClientOffset","document","documentElement","scrollTop","innerHeight","clientHeight","state","setScrollLeft","useImperativeHandle","onMouseUpListener","body","onMouseMoveListener","remove","onScrollListener","onResizeListener","bodyNode","createElement","style","height","width","bottom","className","concat","transform","forwardRef"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport addEventListener from \"rc-util/es/Dom/addEventListener\";\nimport { getOffset } from \"rc-util/es/Dom/css\";\nimport getScrollBarSize from \"rc-util/es/getScrollBarSize\";\nimport * as React from 'react';\nimport TableContext from \"./context/TableContext\";\nimport { useLayoutState } from \"./hooks/useFrame\";\nimport raf from \"rc-util/es/raf\";\nvar StickyScrollBar = function StickyScrollBar(_ref, ref) {\n  var _scrollBodyRef$curren, _scrollBodyRef$curren2;\n  var scrollBodyRef = _ref.scrollBodyRef,\n    onScroll = _ref.onScroll,\n    offsetScroll = _ref.offsetScroll,\n    container = _ref.container;\n  var prefixCls = useContext(TableContext, 'prefixCls');\n  var bodyScrollWidth = ((_scrollBodyRef$curren = scrollBodyRef.current) === null || _scrollBodyRef$curren === void 0 ? void 0 : _scrollBodyRef$curren.scrollWidth) || 0;\n  var bodyWidth = ((_scrollBodyRef$curren2 = scrollBodyRef.current) === null || _scrollBodyRef$curren2 === void 0 ? void 0 : _scrollBodyRef$curren2.clientWidth) || 0;\n  var scrollBarWidth = bodyScrollWidth && bodyWidth * (bodyWidth / bodyScrollWidth);\n  var scrollBarRef = React.useRef();\n  var _useLayoutState = useLayoutState({\n      scrollLeft: 0,\n      isHiddenScrollBar: false\n    }),\n    _useLayoutState2 = _slicedToArray(_useLayoutState, 2),\n    scrollState = _useLayoutState2[0],\n    setScrollState = _useLayoutState2[1];\n  var refState = React.useRef({\n    delta: 0,\n    x: 0\n  });\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isActive = _React$useState2[0],\n    setActive = _React$useState2[1];\n  var rafRef = React.useRef(null);\n  React.useEffect(function () {\n    return function () {\n      raf.cancel(rafRef.current);\n    };\n  }, []);\n  var onMouseUp = function onMouseUp() {\n    setActive(false);\n  };\n  var onMouseDown = function onMouseDown(event) {\n    event.persist();\n    refState.current.delta = event.pageX - scrollState.scrollLeft;\n    refState.current.x = 0;\n    setActive(true);\n    event.preventDefault();\n  };\n  var onMouseMove = function onMouseMove(event) {\n    var _window;\n    // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n    var _ref2 = event || ((_window = window) === null || _window === void 0 ? void 0 : _window.event),\n      buttons = _ref2.buttons;\n    if (!isActive || buttons === 0) {\n      // If out body mouse up, we can set isActive false when mouse move\n      if (isActive) {\n        setActive(false);\n      }\n      return;\n    }\n    var left = refState.current.x + event.pageX - refState.current.x - refState.current.delta;\n    if (left <= 0) {\n      left = 0;\n    }\n    if (left + scrollBarWidth >= bodyWidth) {\n      left = bodyWidth - scrollBarWidth;\n    }\n    onScroll({\n      scrollLeft: left / bodyWidth * (bodyScrollWidth + 2)\n    });\n    refState.current.x = event.pageX;\n  };\n  var checkScrollBarVisible = function checkScrollBarVisible() {\n    rafRef.current = raf(function () {\n      if (!scrollBodyRef.current) {\n        return;\n      }\n      var tableOffsetTop = getOffset(scrollBodyRef.current).top;\n      var tableBottomOffset = tableOffsetTop + scrollBodyRef.current.offsetHeight;\n      var currentClientOffset = container === window ? document.documentElement.scrollTop + window.innerHeight : getOffset(container).top + container.clientHeight;\n      if (tableBottomOffset - getScrollBarSize() <= currentClientOffset || tableOffsetTop >= currentClientOffset - offsetScroll) {\n        setScrollState(function (state) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isHiddenScrollBar: true\n          });\n        });\n      } else {\n        setScrollState(function (state) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isHiddenScrollBar: false\n          });\n        });\n      }\n    });\n  };\n  var setScrollLeft = function setScrollLeft(left) {\n    setScrollState(function (state) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        scrollLeft: left / bodyScrollWidth * bodyWidth || 0\n      });\n    });\n  };\n  React.useImperativeHandle(ref, function () {\n    return {\n      setScrollLeft: setScrollLeft,\n      checkScrollBarVisible: checkScrollBarVisible\n    };\n  });\n  React.useEffect(function () {\n    var onMouseUpListener = addEventListener(document.body, 'mouseup', onMouseUp, false);\n    var onMouseMoveListener = addEventListener(document.body, 'mousemove', onMouseMove, false);\n    checkScrollBarVisible();\n    return function () {\n      onMouseUpListener.remove();\n      onMouseMoveListener.remove();\n    };\n  }, [scrollBarWidth, isActive]);\n  React.useEffect(function () {\n    var onScrollListener = addEventListener(container, 'scroll', checkScrollBarVisible, false);\n    var onResizeListener = addEventListener(window, 'resize', checkScrollBarVisible, false);\n    return function () {\n      onScrollListener.remove();\n      onResizeListener.remove();\n    };\n  }, [container]);\n  React.useEffect(function () {\n    if (!scrollState.isHiddenScrollBar) {\n      setScrollState(function (state) {\n        var bodyNode = scrollBodyRef.current;\n        if (!bodyNode) {\n          return state;\n        }\n        return _objectSpread(_objectSpread({}, state), {}, {\n          scrollLeft: bodyNode.scrollLeft / bodyNode.scrollWidth * bodyNode.clientWidth\n        });\n      });\n    }\n  }, [scrollState.isHiddenScrollBar]);\n  if (bodyScrollWidth <= bodyWidth || !scrollBarWidth || scrollState.isHiddenScrollBar) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: getScrollBarSize(),\n      width: bodyWidth,\n      bottom: offsetScroll\n    },\n    className: \"\".concat(prefixCls, \"-sticky-scroll\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: onMouseDown,\n    ref: scrollBarRef,\n    className: classNames(\"\".concat(prefixCls, \"-sticky-scroll-bar\"), _defineProperty({}, \"\".concat(prefixCls, \"-sticky-scroll-bar-active\"), isActive)),\n    style: {\n      width: \"\".concat(scrollBarWidth, \"px\"),\n      transform: \"translate3d(\".concat(scrollState.scrollLeft, \"px, 0, 0)\")\n    }\n  }));\n};\nexport default /*#__PURE__*/React.forwardRef(StickyScrollBar);"]},"metadata":{},"sourceType":"module"}