{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { COMMON_PROPS } from \"../common\";\n/**\n * Merge props provided `items` or context collected images\n */\n\nexport default function usePreviewItems(items) {\n  // Context collection image data\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      images = _React$useState2[0],\n      setImages = _React$useState2[1];\n\n  var registerImage = React.useCallback(function (id, data) {\n    setImages(function (imgs) {\n      return _objectSpread(_objectSpread({}, imgs), {}, _defineProperty({}, id, data));\n    });\n    return function () {\n      setImages(function (imgs) {\n        var cloneImgs = _objectSpread({}, imgs);\n\n        delete cloneImgs[id];\n        return cloneImgs;\n      });\n    };\n  }, []); // items\n\n  var mergedItems = React.useMemo(function () {\n    if (items) {\n      return items.map(function (item) {\n        if (typeof item === 'string') {\n          return {\n            data: {\n              src: item\n            }\n          };\n        }\n\n        var data = {};\n        Object.keys(item).forEach(function (key) {\n          if (['src'].concat(_toConsumableArray(COMMON_PROPS)).includes(key)) {\n            data[key] = item[key];\n          }\n        });\n        return {\n          data: data\n        };\n      });\n    }\n\n    return Object.keys(images).reduce(function (total, id) {\n      var _images$id = images[id],\n          canPreview = _images$id.canPreview,\n          data = _images$id.data;\n\n      if (canPreview) {\n        total.push({\n          data: data,\n          id: id\n        });\n      }\n\n      return total;\n    }, []);\n  }, [items, images]);\n  return [mergedItems, registerImage];\n}","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-image/es/hooks/usePreviewItems.js"],"names":["_toConsumableArray","_defineProperty","_objectSpread","_slicedToArray","React","COMMON_PROPS","usePreviewItems","items","_React$useState","useState","_React$useState2","images","setImages","registerImage","useCallback","id","data","imgs","cloneImgs","mergedItems","useMemo","map","item","src","Object","keys","forEach","key","concat","includes","reduce","total","_images$id","canPreview","push"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA;AACA;AACA;;AACA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C;AACA,MAAIC,eAAe,GAAGJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAtB;AAAA,MACEC,gBAAgB,GAAGP,cAAc,CAACK,eAAD,EAAkB,CAAlB,CADnC;AAAA,MAEEG,MAAM,GAAGD,gBAAgB,CAAC,CAAD,CAF3B;AAAA,MAGEE,SAAS,GAAGF,gBAAgB,CAAC,CAAD,CAH9B;;AAIA,MAAIG,aAAa,GAAGT,KAAK,CAACU,WAAN,CAAkB,UAAUC,EAAV,EAAcC,IAAd,EAAoB;AACxDJ,IAAAA,SAAS,CAAC,UAAUK,IAAV,EAAgB;AACxB,aAAOf,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKe,IAAL,CAAd,EAA0B,EAA1B,EAA8BhB,eAAe,CAAC,EAAD,EAAKc,EAAL,EAASC,IAAT,CAA7C,CAApB;AACD,KAFQ,CAAT;AAGA,WAAO,YAAY;AACjBJ,MAAAA,SAAS,CAAC,UAAUK,IAAV,EAAgB;AACxB,YAAIC,SAAS,GAAGhB,aAAa,CAAC,EAAD,EAAKe,IAAL,CAA7B;;AACA,eAAOC,SAAS,CAACH,EAAD,CAAhB;AACA,eAAOG,SAAP;AACD,OAJQ,CAAT;AAKD,KAND;AAOD,GAXmB,EAWjB,EAXiB,CAApB,CAN6C,CAmB7C;;AACA,MAAIC,WAAW,GAAGf,KAAK,CAACgB,OAAN,CAAc,YAAY;AAC1C,QAAIb,KAAJ,EAAW;AACT,aAAOA,KAAK,CAACc,GAAN,CAAU,UAAUC,IAAV,EAAgB;AAC/B,YAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,iBAAO;AACLN,YAAAA,IAAI,EAAE;AACJO,cAAAA,GAAG,EAAED;AADD;AADD,WAAP;AAKD;;AACD,YAAIN,IAAI,GAAG,EAAX;AACAQ,QAAAA,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,OAAlB,CAA0B,UAAUC,GAAV,EAAe;AACvC,cAAI,CAAC,KAAD,EAAQC,MAAR,CAAe5B,kBAAkB,CAACK,YAAD,CAAjC,EAAiDwB,QAAjD,CAA0DF,GAA1D,CAAJ,EAAoE;AAClEX,YAAAA,IAAI,CAACW,GAAD,CAAJ,GAAYL,IAAI,CAACK,GAAD,CAAhB;AACD;AACF,SAJD;AAKA,eAAO;AACLX,UAAAA,IAAI,EAAEA;AADD,SAAP;AAGD,OAjBM,CAAP;AAkBD;;AACD,WAAOQ,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBmB,MAApB,CAA2B,UAAUC,KAAV,EAAiBhB,EAAjB,EAAqB;AACrD,UAAIiB,UAAU,GAAGrB,MAAM,CAACI,EAAD,CAAvB;AAAA,UACEkB,UAAU,GAAGD,UAAU,CAACC,UAD1B;AAAA,UAEEjB,IAAI,GAAGgB,UAAU,CAAChB,IAFpB;;AAGA,UAAIiB,UAAJ,EAAgB;AACdF,QAAAA,KAAK,CAACG,IAAN,CAAW;AACTlB,UAAAA,IAAI,EAAEA,IADG;AAETD,UAAAA,EAAE,EAAEA;AAFK,SAAX;AAID;;AACD,aAAOgB,KAAP;AACD,KAXM,EAWJ,EAXI,CAAP;AAYD,GAjCiB,EAiCf,CAACxB,KAAD,EAAQI,MAAR,CAjCe,CAAlB;AAkCA,SAAO,CAACQ,WAAD,EAAcN,aAAd,CAAP;AACD","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { COMMON_PROPS } from \"../common\";\n/**\n * Merge props provided `items` or context collected images\n */\nexport default function usePreviewItems(items) {\n  // Context collection image data\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    images = _React$useState2[0],\n    setImages = _React$useState2[1];\n  var registerImage = React.useCallback(function (id, data) {\n    setImages(function (imgs) {\n      return _objectSpread(_objectSpread({}, imgs), {}, _defineProperty({}, id, data));\n    });\n    return function () {\n      setImages(function (imgs) {\n        var cloneImgs = _objectSpread({}, imgs);\n        delete cloneImgs[id];\n        return cloneImgs;\n      });\n    };\n  }, []);\n\n  // items\n  var mergedItems = React.useMemo(function () {\n    if (items) {\n      return items.map(function (item) {\n        if (typeof item === 'string') {\n          return {\n            data: {\n              src: item\n            }\n          };\n        }\n        var data = {};\n        Object.keys(item).forEach(function (key) {\n          if (['src'].concat(_toConsumableArray(COMMON_PROPS)).includes(key)) {\n            data[key] = item[key];\n          }\n        });\n        return {\n          data: data\n        };\n      });\n    }\n    return Object.keys(images).reduce(function (total, id) {\n      var _images$id = images[id],\n        canPreview = _images$id.canPreview,\n        data = _images$id.data;\n      if (canPreview) {\n        total.push({\n          data: data,\n          id: id\n        });\n      }\n      return total;\n    }, []);\n  }, [items, images]);\n  return [mergedItems, registerImage];\n}"]},"metadata":{},"sourceType":"module"}