{"ast":null,"code":"import genFontSizes from './genFontSizes';\n\nconst genFontMapToken = fontSize => {\n  const fontSizePairs = genFontSizes(fontSize);\n  const fontSizes = fontSizePairs.map(pair => pair.size);\n  const lineHeights = fontSizePairs.map(pair => pair.lineHeight);\n  const fontSizeMD = fontSizes[1];\n  const fontSizeSM = fontSizes[0];\n  const fontSizeLG = fontSizes[2];\n  const lineHeight = lineHeights[1];\n  const lineHeightSM = lineHeights[0];\n  const lineHeightLG = lineHeights[2];\n  return {\n    fontSizeSM,\n    fontSize: fontSizeMD,\n    fontSizeLG,\n    fontSizeXL: fontSizes[3],\n    fontSizeHeading1: fontSizes[6],\n    fontSizeHeading2: fontSizes[5],\n    fontSizeHeading3: fontSizes[4],\n    fontSizeHeading4: fontSizes[3],\n    fontSizeHeading5: fontSizes[2],\n    lineHeight,\n    lineHeightLG,\n    lineHeightSM,\n    fontHeight: Math.round(lineHeight * fontSizeMD),\n    fontHeightLG: Math.round(lineHeightLG * fontSizeLG),\n    fontHeightSM: Math.round(lineHeightSM * fontSizeSM),\n    lineHeightHeading1: lineHeights[6],\n    lineHeightHeading2: lineHeights[5],\n    lineHeightHeading3: lineHeights[4],\n    lineHeightHeading4: lineHeights[3],\n    lineHeightHeading5: lineHeights[2]\n  };\n};\n\nexport default genFontMapToken;","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/theme/themes/shared/genFontMapToken.js"],"names":["genFontSizes","genFontMapToken","fontSize","fontSizePairs","fontSizes","map","pair","size","lineHeights","lineHeight","fontSizeMD","fontSizeSM","fontSizeLG","lineHeightSM","lineHeightLG","fontSizeXL","fontSizeHeading1","fontSizeHeading2","fontSizeHeading3","fontSizeHeading4","fontSizeHeading5","fontHeight","Math","round","fontHeightLG","fontHeightSM","lineHeightHeading1","lineHeightHeading2","lineHeightHeading3","lineHeightHeading4","lineHeightHeading5"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;;AACA,MAAMC,eAAe,GAAGC,QAAQ,IAAI;AAClC,QAAMC,aAAa,GAAGH,YAAY,CAACE,QAAD,CAAlC;AACA,QAAME,SAAS,GAAGD,aAAa,CAACE,GAAd,CAAkBC,IAAI,IAAIA,IAAI,CAACC,IAA/B,CAAlB;AACA,QAAMC,WAAW,GAAGL,aAAa,CAACE,GAAd,CAAkBC,IAAI,IAAIA,IAAI,CAACG,UAA/B,CAApB;AACA,QAAMC,UAAU,GAAGN,SAAS,CAAC,CAAD,CAA5B;AACA,QAAMO,UAAU,GAAGP,SAAS,CAAC,CAAD,CAA5B;AACA,QAAMQ,UAAU,GAAGR,SAAS,CAAC,CAAD,CAA5B;AACA,QAAMK,UAAU,GAAGD,WAAW,CAAC,CAAD,CAA9B;AACA,QAAMK,YAAY,GAAGL,WAAW,CAAC,CAAD,CAAhC;AACA,QAAMM,YAAY,GAAGN,WAAW,CAAC,CAAD,CAAhC;AACA,SAAO;AACLG,IAAAA,UADK;AAELT,IAAAA,QAAQ,EAAEQ,UAFL;AAGLE,IAAAA,UAHK;AAILG,IAAAA,UAAU,EAAEX,SAAS,CAAC,CAAD,CAJhB;AAKLY,IAAAA,gBAAgB,EAAEZ,SAAS,CAAC,CAAD,CALtB;AAMLa,IAAAA,gBAAgB,EAAEb,SAAS,CAAC,CAAD,CANtB;AAOLc,IAAAA,gBAAgB,EAAEd,SAAS,CAAC,CAAD,CAPtB;AAQLe,IAAAA,gBAAgB,EAAEf,SAAS,CAAC,CAAD,CARtB;AASLgB,IAAAA,gBAAgB,EAAEhB,SAAS,CAAC,CAAD,CATtB;AAULK,IAAAA,UAVK;AAWLK,IAAAA,YAXK;AAYLD,IAAAA,YAZK;AAaLQ,IAAAA,UAAU,EAAEC,IAAI,CAACC,KAAL,CAAWd,UAAU,GAAGC,UAAxB,CAbP;AAcLc,IAAAA,YAAY,EAAEF,IAAI,CAACC,KAAL,CAAWT,YAAY,GAAGF,UAA1B,CAdT;AAeLa,IAAAA,YAAY,EAAEH,IAAI,CAACC,KAAL,CAAWV,YAAY,GAAGF,UAA1B,CAfT;AAgBLe,IAAAA,kBAAkB,EAAElB,WAAW,CAAC,CAAD,CAhB1B;AAiBLmB,IAAAA,kBAAkB,EAAEnB,WAAW,CAAC,CAAD,CAjB1B;AAkBLoB,IAAAA,kBAAkB,EAAEpB,WAAW,CAAC,CAAD,CAlB1B;AAmBLqB,IAAAA,kBAAkB,EAAErB,WAAW,CAAC,CAAD,CAnB1B;AAoBLsB,IAAAA,kBAAkB,EAAEtB,WAAW,CAAC,CAAD;AApB1B,GAAP;AAsBD,CAhCD;;AAiCA,eAAeP,eAAf","sourcesContent":["import genFontSizes from './genFontSizes';\nconst genFontMapToken = fontSize => {\n  const fontSizePairs = genFontSizes(fontSize);\n  const fontSizes = fontSizePairs.map(pair => pair.size);\n  const lineHeights = fontSizePairs.map(pair => pair.lineHeight);\n  const fontSizeMD = fontSizes[1];\n  const fontSizeSM = fontSizes[0];\n  const fontSizeLG = fontSizes[2];\n  const lineHeight = lineHeights[1];\n  const lineHeightSM = lineHeights[0];\n  const lineHeightLG = lineHeights[2];\n  return {\n    fontSizeSM,\n    fontSize: fontSizeMD,\n    fontSizeLG,\n    fontSizeXL: fontSizes[3],\n    fontSizeHeading1: fontSizes[6],\n    fontSizeHeading2: fontSizes[5],\n    fontSizeHeading3: fontSizes[4],\n    fontSizeHeading4: fontSizes[3],\n    fontSizeHeading5: fontSizes[2],\n    lineHeight,\n    lineHeightLG,\n    lineHeightSM,\n    fontHeight: Math.round(lineHeight * fontSizeMD),\n    fontHeightLG: Math.round(lineHeightLG * fontSizeLG),\n    fontHeightSM: Math.round(lineHeightSM * fontSizeSM),\n    lineHeightHeading1: lineHeights[6],\n    lineHeightHeading2: lineHeights[5],\n    lineHeightHeading3: lineHeights[4],\n    lineHeightHeading4: lineHeights[3],\n    lineHeightHeading5: lineHeights[2]\n  };\n};\nexport default genFontMapToken;"]},"metadata":{},"sourceType":"module"}