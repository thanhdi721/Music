{"ast":null,"code":"import * as React from 'react';\nexport default function usePickerRef(ref) {\n  var selectorRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    var _selectorRef$current;\n\n    return {\n      nativeElement: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.nativeElement,\n      focus: function focus(options) {\n        var _selectorRef$current2;\n\n        (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 || _selectorRef$current2.focus(options);\n      },\n      blur: function blur() {\n        var _selectorRef$current3;\n\n        (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 || _selectorRef$current3.blur();\n      }\n    };\n  });\n  return selectorRef;\n}","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/rc-picker/es/PickerInput/hooks/usePickerRef.js"],"names":["React","usePickerRef","ref","selectorRef","useRef","useImperativeHandle","_selectorRef$current","nativeElement","current","focus","options","_selectorRef$current2","blur","_selectorRef$current3"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,eAAe,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACxC,MAAIC,WAAW,GAAGH,KAAK,CAACI,MAAN,EAAlB;AACAJ,EAAAA,KAAK,CAACK,mBAAN,CAA0BH,GAA1B,EAA+B,YAAY;AACzC,QAAII,oBAAJ;;AACA,WAAO;AACLC,MAAAA,aAAa,EAAE,CAACD,oBAAoB,GAAGH,WAAW,CAACK,OAApC,MAAiD,IAAjD,IAAyDF,oBAAoB,KAAK,KAAK,CAAvF,GAA2F,KAAK,CAAhG,GAAoGA,oBAAoB,CAACC,aADnI;AAELE,MAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,OAAf,EAAwB;AAC7B,YAAIC,qBAAJ;;AACA,SAACA,qBAAqB,GAAGR,WAAW,CAACK,OAArC,MAAkD,IAAlD,IAA0DG,qBAAqB,KAAK,KAAK,CAAzF,IAA8FA,qBAAqB,CAACF,KAAtB,CAA4BC,OAA5B,CAA9F;AACD,OALI;AAMLE,MAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,YAAIC,qBAAJ;;AACA,SAACA,qBAAqB,GAAGV,WAAW,CAACK,OAArC,MAAkD,IAAlD,IAA0DK,qBAAqB,KAAK,KAAK,CAAzF,IAA8FA,qBAAqB,CAACD,IAAtB,EAA9F;AACD;AATI,KAAP;AAWD,GAbD;AAcA,SAAOT,WAAP;AACD","sourcesContent":["import * as React from 'react';\nexport default function usePickerRef(ref) {\n  var selectorRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    var _selectorRef$current;\n    return {\n      nativeElement: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.nativeElement,\n      focus: function focus(options) {\n        var _selectorRef$current2;\n        (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 || _selectorRef$current2.focus(options);\n      },\n      blur: function blur() {\n        var _selectorRef$current3;\n        (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 || _selectorRef$current3.blur();\n      }\n    };\n  });\n  return selectorRef;\n}"]},"metadata":{},"sourceType":"module"}