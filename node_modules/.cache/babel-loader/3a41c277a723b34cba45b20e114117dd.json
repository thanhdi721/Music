{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nexport function getArrowToken(token) {\n  const {\n    sizePopupArrow,\n    borderRadiusXS,\n    borderRadiusOuter\n  } = token;\n  const unitWidth = sizePopupArrow / 2;\n  const ax = 0;\n  const ay = unitWidth;\n  const bx = borderRadiusOuter * 1 / Math.sqrt(2);\n  const by = unitWidth - borderRadiusOuter * (1 - 1 / Math.sqrt(2));\n  const cx = unitWidth - borderRadiusXS * (1 / Math.sqrt(2));\n  const cy = borderRadiusOuter * (Math.sqrt(2) - 1) + borderRadiusXS * (1 / Math.sqrt(2));\n  const dx = 2 * unitWidth - cx;\n  const dy = cy;\n  const ex = 2 * unitWidth - bx;\n  const ey = by;\n  const fx = 2 * unitWidth - ax;\n  const fy = ay;\n  const shadowWidth = unitWidth * Math.sqrt(2) + borderRadiusOuter * (Math.sqrt(2) - 2);\n  const polygonOffset = borderRadiusOuter * (Math.sqrt(2) - 1);\n  const arrowPolygon = `polygon(${polygonOffset}px 100%, 50% ${polygonOffset}px, ${2 * unitWidth - polygonOffset}px 100%, ${polygonOffset}px 100%)`;\n  const arrowPath = `path('M ${ax} ${ay} A ${borderRadiusOuter} ${borderRadiusOuter} 0 0 0 ${bx} ${by} L ${cx} ${cy} A ${borderRadiusXS} ${borderRadiusXS} 0 0 1 ${dx} ${dy} L ${ex} ${ey} A ${borderRadiusOuter} ${borderRadiusOuter} 0 0 0 ${fx} ${fy} Z')`;\n  return {\n    arrowShadowWidth: shadowWidth,\n    arrowPath,\n    arrowPolygon\n  };\n}\nexport const genRoundedArrow = (token, bgColor, boxShadow) => {\n  const {\n    sizePopupArrow,\n    arrowPolygon,\n    arrowPath,\n    arrowShadowWidth,\n    borderRadiusXS,\n    calc\n  } = token;\n  return {\n    pointerEvents: 'none',\n    width: sizePopupArrow,\n    height: sizePopupArrow,\n    overflow: 'hidden',\n    '&::before': {\n      position: 'absolute',\n      bottom: 0,\n      insetInlineStart: 0,\n      width: sizePopupArrow,\n      height: calc(sizePopupArrow).div(2).equal(),\n      background: bgColor,\n      clipPath: {\n        _multi_value_: true,\n        value: [arrowPolygon, arrowPath]\n      },\n      content: '\"\"'\n    },\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: arrowShadowWidth,\n      height: arrowShadowWidth,\n      bottom: 0,\n      insetInline: 0,\n      margin: 'auto',\n      borderRadius: {\n        _skip_check_: true,\n        value: `0 0 ${unit(borderRadiusXS)} 0`\n      },\n      transform: 'translateY(50%) rotate(-135deg)',\n      boxShadow,\n      zIndex: 0,\n      background: 'transparent'\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/style/roundedArrow.js"],"names":["unit","getArrowToken","token","sizePopupArrow","borderRadiusXS","borderRadiusOuter","unitWidth","ax","ay","bx","Math","sqrt","by","cx","cy","dx","dy","ex","ey","fx","fy","shadowWidth","polygonOffset","arrowPolygon","arrowPath","arrowShadowWidth","genRoundedArrow","bgColor","boxShadow","calc","pointerEvents","width","height","overflow","position","bottom","insetInlineStart","div","equal","background","clipPath","_multi_value_","value","content","insetInline","margin","borderRadius","_skip_check_","transform","zIndex"],"mappings":"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","sourcesContent":["import { unit } from '@ant-design/cssinjs';\nexport function getArrowToken(token) {\n  const {\n    sizePopupArrow,\n    borderRadiusXS,\n    borderRadiusOuter\n  } = token;\n  const unitWidth = sizePopupArrow / 2;\n  const ax = 0;\n  const ay = unitWidth;\n  const bx = borderRadiusOuter * 1 / Math.sqrt(2);\n  const by = unitWidth - borderRadiusOuter * (1 - 1 / Math.sqrt(2));\n  const cx = unitWidth - borderRadiusXS * (1 / Math.sqrt(2));\n  const cy = borderRadiusOuter * (Math.sqrt(2) - 1) + borderRadiusXS * (1 / Math.sqrt(2));\n  const dx = 2 * unitWidth - cx;\n  const dy = cy;\n  const ex = 2 * unitWidth - bx;\n  const ey = by;\n  const fx = 2 * unitWidth - ax;\n  const fy = ay;\n  const shadowWidth = unitWidth * Math.sqrt(2) + borderRadiusOuter * (Math.sqrt(2) - 2);\n  const polygonOffset = borderRadiusOuter * (Math.sqrt(2) - 1);\n  const arrowPolygon = `polygon(${polygonOffset}px 100%, 50% ${polygonOffset}px, ${2 * unitWidth - polygonOffset}px 100%, ${polygonOffset}px 100%)`;\n  const arrowPath = `path('M ${ax} ${ay} A ${borderRadiusOuter} ${borderRadiusOuter} 0 0 0 ${bx} ${by} L ${cx} ${cy} A ${borderRadiusXS} ${borderRadiusXS} 0 0 1 ${dx} ${dy} L ${ex} ${ey} A ${borderRadiusOuter} ${borderRadiusOuter} 0 0 0 ${fx} ${fy} Z')`;\n  return {\n    arrowShadowWidth: shadowWidth,\n    arrowPath,\n    arrowPolygon\n  };\n}\nexport const genRoundedArrow = (token, bgColor, boxShadow) => {\n  const {\n    sizePopupArrow,\n    arrowPolygon,\n    arrowPath,\n    arrowShadowWidth,\n    borderRadiusXS,\n    calc\n  } = token;\n  return {\n    pointerEvents: 'none',\n    width: sizePopupArrow,\n    height: sizePopupArrow,\n    overflow: 'hidden',\n    '&::before': {\n      position: 'absolute',\n      bottom: 0,\n      insetInlineStart: 0,\n      width: sizePopupArrow,\n      height: calc(sizePopupArrow).div(2).equal(),\n      background: bgColor,\n      clipPath: {\n        _multi_value_: true,\n        value: [arrowPolygon, arrowPath]\n      },\n      content: '\"\"'\n    },\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: arrowShadowWidth,\n      height: arrowShadowWidth,\n      bottom: 0,\n      insetInline: 0,\n      margin: 'auto',\n      borderRadius: {\n        _skip_check_: true,\n        value: `0 0 ${unit(borderRadiusXS)} 0`\n      },\n      transform: 'translateY(50%) rotate(-135deg)',\n      boxShadow,\n      zIndex: 0,\n      background: 'transparent'\n    }\n  };\n};"]},"metadata":{},"sourceType":"module"}