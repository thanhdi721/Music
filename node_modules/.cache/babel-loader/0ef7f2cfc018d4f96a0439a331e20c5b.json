{"ast":null,"code":"import { useLayoutUpdateEffect } from \"rc-util/es/hooks/useLayoutEffect\";\nimport raf from \"rc-util/es/raf\";\nimport * as React from 'react';\n/**\n * Trigger `callback` immediately when `condition` is `true`.\n * But trigger `callback` in next frame when `condition` is `false`.\n */\n\nexport default function useLockEffect(condition, callback) {\n  var delayFrames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var callbackRef = React.useRef(callback);\n  callbackRef.current = callback;\n  useLayoutUpdateEffect(function () {\n    if (condition) {\n      callbackRef.current(condition);\n    } else {\n      var id = raf(function () {\n        callbackRef.current(condition);\n      }, delayFrames);\n      return function () {\n        raf.cancel(id);\n      };\n    }\n  }, [condition]);\n}","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-picker/es/PickerInput/hooks/useLockEffect.js"],"names":["useLayoutUpdateEffect","raf","React","useLockEffect","condition","callback","delayFrames","arguments","length","undefined","callbackRef","useRef","current","id","cancel"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,kCAAtC;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,QAAlC,EAA4C;AACzD,MAAIC,WAAW,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAAtF;AACA,MAAIG,WAAW,GAAGR,KAAK,CAACS,MAAN,CAAaN,QAAb,CAAlB;AACAK,EAAAA,WAAW,CAACE,OAAZ,GAAsBP,QAAtB;AACAL,EAAAA,qBAAqB,CAAC,YAAY;AAChC,QAAII,SAAJ,EAAe;AACbM,MAAAA,WAAW,CAACE,OAAZ,CAAoBR,SAApB;AACD,KAFD,MAEO;AACL,UAAIS,EAAE,GAAGZ,GAAG,CAAC,YAAY;AACvBS,QAAAA,WAAW,CAACE,OAAZ,CAAoBR,SAApB;AACD,OAFW,EAETE,WAFS,CAAZ;AAGA,aAAO,YAAY;AACjBL,QAAAA,GAAG,CAACa,MAAJ,CAAWD,EAAX;AACD,OAFD;AAGD;AACF,GAXoB,EAWlB,CAACT,SAAD,CAXkB,CAArB;AAYD","sourcesContent":["import { useLayoutUpdateEffect } from \"rc-util/es/hooks/useLayoutEffect\";\nimport raf from \"rc-util/es/raf\";\nimport * as React from 'react';\n\n/**\n * Trigger `callback` immediately when `condition` is `true`.\n * But trigger `callback` in next frame when `condition` is `false`.\n */\nexport default function useLockEffect(condition, callback) {\n  var delayFrames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var callbackRef = React.useRef(callback);\n  callbackRef.current = callback;\n  useLayoutUpdateEffect(function () {\n    if (condition) {\n      callbackRef.current(condition);\n    } else {\n      var id = raf(function () {\n        callbackRef.current(condition);\n      }, delayFrames);\n      return function () {\n        raf.cancel(id);\n      };\n    }\n  }, [condition]);\n}"]},"metadata":{},"sourceType":"module"}