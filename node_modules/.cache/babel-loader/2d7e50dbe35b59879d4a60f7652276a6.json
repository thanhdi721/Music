{"ast":null,"code":"\"use client\";\n/* eslint-disable import/prefer-default-export */\n\nimport { unit } from '@ant-design/cssinjs';\nexport { operationUnit } from './operationUnit';\nexport const textEllipsis = {\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis'\n};\nexport const resetComponent = function (token) {\n  let needInheritFontFamily = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return {\n    boxSizing: 'border-box',\n    margin: 0,\n    padding: 0,\n    color: token.colorText,\n    fontSize: token.fontSize,\n    // font-variant: @font-variant-base;\n    lineHeight: token.lineHeight,\n    listStyle: 'none',\n    // font-feature-settings: @font-feature-settings-base;\n    fontFamily: needInheritFontFamily ? 'inherit' : token.fontFamily\n  };\n};\nexport const resetIcon = () => ({\n  display: 'inline-flex',\n  alignItems: 'center',\n  color: 'inherit',\n  fontStyle: 'normal',\n  lineHeight: 0,\n  textAlign: 'center',\n  textTransform: 'none',\n  // for SVG icon, see https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n  verticalAlign: '-0.125em',\n  textRendering: 'optimizeLegibility',\n  '-webkit-font-smoothing': 'antialiased',\n  '-moz-osx-font-smoothing': 'grayscale',\n  '> *': {\n    lineHeight: 1\n  },\n  svg: {\n    display: 'inline-block'\n  }\n});\nexport const clearFix = () => ({\n  // https://github.com/ant-design/ant-design/issues/21301#issuecomment-583955229\n  '&::before': {\n    display: 'table',\n    content: '\"\"'\n  },\n  '&::after': {\n    // https://github.com/ant-design/ant-design/issues/21864\n    display: 'table',\n    clear: 'both',\n    content: '\"\"'\n  }\n});\nexport const genLinkStyle = token => ({\n  a: {\n    color: token.colorLink,\n    textDecoration: token.linkDecoration,\n    backgroundColor: 'transparent',\n    // remove the gray background on active links in IE 10.\n    outline: 'none',\n    cursor: 'pointer',\n    transition: `color ${token.motionDurationSlow}`,\n    '-webkit-text-decoration-skip': 'objects',\n    // remove gaps in links underline in iOS 8+ and Safari 8+.\n    '&:hover': {\n      color: token.colorLinkHover\n    },\n    '&:active': {\n      color: token.colorLinkActive\n    },\n    [`&:active,\n  &:hover`]: {\n      textDecoration: token.linkHoverDecoration,\n      outline: 0\n    },\n    // https://github.com/ant-design/ant-design/issues/22503\n    '&:focus': {\n      textDecoration: token.linkFocusDecoration,\n      outline: 0\n    },\n    '&[disabled]': {\n      color: token.colorTextDisabled,\n      cursor: 'not-allowed'\n    }\n  }\n});\nexport const genCommonStyle = (token, componentPrefixCls, rootCls) => {\n  const {\n    fontFamily,\n    fontSize\n  } = token;\n  const prefixSelector = `[class^=\"${componentPrefixCls}\"], [class*=\" ${componentPrefixCls}\"]`;\n  const rootPrefixSelector = rootCls ? `.${rootCls}` : prefixSelector;\n  return {\n    [rootPrefixSelector]: {\n      fontFamily,\n      fontSize,\n      boxSizing: 'border-box',\n      '&::before, &::after': {\n        boxSizing: 'border-box'\n      },\n      [prefixSelector]: {\n        boxSizing: 'border-box',\n        '&::before, &::after': {\n          boxSizing: 'border-box'\n        }\n      }\n    }\n  };\n};\nexport const genFocusOutline = token => ({\n  outline: `${unit(token.lineWidthFocus)} solid ${token.colorPrimaryBorder}`,\n  outlineOffset: 1,\n  transition: 'outline-offset 0s, outline 0s'\n});\nexport const genFocusStyle = token => ({\n  '&:focus-visible': Object.assign({}, genFocusOutline(token))\n});","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/style/index.js"],"names":["unit","operationUnit","textEllipsis","overflow","whiteSpace","textOverflow","resetComponent","token","needInheritFontFamily","arguments","length","undefined","boxSizing","margin","padding","color","colorText","fontSize","lineHeight","listStyle","fontFamily","resetIcon","display","alignItems","fontStyle","textAlign","textTransform","verticalAlign","textRendering","svg","clearFix","content","clear","genLinkStyle","a","colorLink","textDecoration","linkDecoration","backgroundColor","outline","cursor","transition","motionDurationSlow","colorLinkHover","colorLinkActive","linkHoverDecoration","linkFocusDecoration","colorTextDisabled","genCommonStyle","componentPrefixCls","rootCls","prefixSelector","rootPrefixSelector","genFocusOutline","lineWidthFocus","colorPrimaryBorder","outlineOffset","genFocusStyle","Object","assign"],"mappings":"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","sourcesContent":["\"use client\";\n\n/* eslint-disable import/prefer-default-export */\nimport { unit } from '@ant-design/cssinjs';\nexport { operationUnit } from './operationUnit';\nexport const textEllipsis = {\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis'\n};\nexport const resetComponent = function (token) {\n  let needInheritFontFamily = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return {\n    boxSizing: 'border-box',\n    margin: 0,\n    padding: 0,\n    color: token.colorText,\n    fontSize: token.fontSize,\n    // font-variant: @font-variant-base;\n    lineHeight: token.lineHeight,\n    listStyle: 'none',\n    // font-feature-settings: @font-feature-settings-base;\n    fontFamily: needInheritFontFamily ? 'inherit' : token.fontFamily\n  };\n};\nexport const resetIcon = () => ({\n  display: 'inline-flex',\n  alignItems: 'center',\n  color: 'inherit',\n  fontStyle: 'normal',\n  lineHeight: 0,\n  textAlign: 'center',\n  textTransform: 'none',\n  // for SVG icon, see https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n  verticalAlign: '-0.125em',\n  textRendering: 'optimizeLegibility',\n  '-webkit-font-smoothing': 'antialiased',\n  '-moz-osx-font-smoothing': 'grayscale',\n  '> *': {\n    lineHeight: 1\n  },\n  svg: {\n    display: 'inline-block'\n  }\n});\nexport const clearFix = () => ({\n  // https://github.com/ant-design/ant-design/issues/21301#issuecomment-583955229\n  '&::before': {\n    display: 'table',\n    content: '\"\"'\n  },\n  '&::after': {\n    // https://github.com/ant-design/ant-design/issues/21864\n    display: 'table',\n    clear: 'both',\n    content: '\"\"'\n  }\n});\nexport const genLinkStyle = token => ({\n  a: {\n    color: token.colorLink,\n    textDecoration: token.linkDecoration,\n    backgroundColor: 'transparent',\n    // remove the gray background on active links in IE 10.\n    outline: 'none',\n    cursor: 'pointer',\n    transition: `color ${token.motionDurationSlow}`,\n    '-webkit-text-decoration-skip': 'objects',\n    // remove gaps in links underline in iOS 8+ and Safari 8+.\n    '&:hover': {\n      color: token.colorLinkHover\n    },\n    '&:active': {\n      color: token.colorLinkActive\n    },\n    [`&:active,\n  &:hover`]: {\n      textDecoration: token.linkHoverDecoration,\n      outline: 0\n    },\n    // https://github.com/ant-design/ant-design/issues/22503\n    '&:focus': {\n      textDecoration: token.linkFocusDecoration,\n      outline: 0\n    },\n    '&[disabled]': {\n      color: token.colorTextDisabled,\n      cursor: 'not-allowed'\n    }\n  }\n});\nexport const genCommonStyle = (token, componentPrefixCls, rootCls) => {\n  const {\n    fontFamily,\n    fontSize\n  } = token;\n  const prefixSelector = `[class^=\"${componentPrefixCls}\"], [class*=\" ${componentPrefixCls}\"]`;\n  const rootPrefixSelector = rootCls ? `.${rootCls}` : prefixSelector;\n  return {\n    [rootPrefixSelector]: {\n      fontFamily,\n      fontSize,\n      boxSizing: 'border-box',\n      '&::before, &::after': {\n        boxSizing: 'border-box'\n      },\n      [prefixSelector]: {\n        boxSizing: 'border-box',\n        '&::before, &::after': {\n          boxSizing: 'border-box'\n        }\n      }\n    }\n  };\n};\nexport const genFocusOutline = token => ({\n  outline: `${unit(token.lineWidthFocus)} solid ${token.colorPrimaryBorder}`,\n  outlineOffset: 1,\n  transition: 'outline-offset 0s, outline 0s'\n});\nexport const genFocusStyle = token => ({\n  '&:focus-visible': Object.assign({}, genFocusOutline(token))\n});"]},"metadata":{},"sourceType":"module"}