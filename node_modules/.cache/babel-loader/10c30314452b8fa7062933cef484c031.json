{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEvent, useMergedState } from 'rc-util';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport omit from \"rc-util/es/omit\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport * as React from 'react';\nimport useToggleDates from \"../hooks/useToggleDates\";\nimport PickerTrigger from \"../PickerTrigger\";\nimport { pickTriggerProps } from \"../PickerTrigger/util\";\nimport { toArray } from \"../utils/miscUtil\";\nimport PickerContext from \"./context\";\nimport useCellRender from \"./hooks/useCellRender\";\nimport useFieldsInvalidate from \"./hooks/useFieldsInvalidate\";\nimport useFilledProps from \"./hooks/useFilledProps\";\nimport useOpen from \"./hooks/useOpen\";\nimport usePickerRef from \"./hooks/usePickerRef\";\nimport usePresets from \"./hooks/usePresets\";\nimport useRangeActive from \"./hooks/useRangeActive\";\nimport useRangePickerValue from \"./hooks/useRangePickerValue\";\nimport useRangeValue, { useInnerValue } from \"./hooks/useRangeValue\";\nimport useShowNow from \"./hooks/useShowNow\";\nimport Popup from \"./Popup\";\nimport SingleSelector from \"./Selector/SingleSelector\"; // TODO: isInvalidateDate with showTime.disabledTime should not provide `range` prop\n\n/** Internal usage. For cross function get same aligned props */\n\nfunction Picker(props, ref) {\n  // ========================= Prop =========================\n  var _useFilledProps = useFilledProps(props),\n      _useFilledProps2 = _slicedToArray(_useFilledProps, 6),\n      filledProps = _useFilledProps2[0],\n      internalPicker = _useFilledProps2[1],\n      complexPicker = _useFilledProps2[2],\n      formatList = _useFilledProps2[3],\n      maskFormat = _useFilledProps2[4],\n      isInvalidateDate = _useFilledProps2[5];\n\n  var _ref = filledProps,\n      prefixCls = _ref.prefixCls,\n      styles = _ref.styles,\n      classNames = _ref.classNames,\n      order = _ref.order,\n      defaultValue = _ref.defaultValue,\n      value = _ref.value,\n      needConfirm = _ref.needConfirm,\n      onChange = _ref.onChange,\n      onKeyDown = _ref.onKeyDown,\n      disabled = _ref.disabled,\n      disabledDate = _ref.disabledDate,\n      minDate = _ref.minDate,\n      maxDate = _ref.maxDate,\n      defaultOpen = _ref.defaultOpen,\n      open = _ref.open,\n      onOpenChange = _ref.onOpenChange,\n      locale = _ref.locale,\n      generateConfig = _ref.generateConfig,\n      picker = _ref.picker,\n      showNow = _ref.showNow,\n      showToday = _ref.showToday,\n      showTime = _ref.showTime,\n      mode = _ref.mode,\n      onPanelChange = _ref.onPanelChange,\n      onCalendarChange = _ref.onCalendarChange,\n      onOk = _ref.onOk,\n      multiple = _ref.multiple,\n      defaultPickerValue = _ref.defaultPickerValue,\n      pickerValue = _ref.pickerValue,\n      onPickerValueChange = _ref.onPickerValueChange,\n      inputReadOnly = _ref.inputReadOnly,\n      suffixIcon = _ref.suffixIcon,\n      removeIcon = _ref.removeIcon,\n      onFocus = _ref.onFocus,\n      onBlur = _ref.onBlur,\n      presets = _ref.presets,\n      components = _ref.components,\n      cellRender = _ref.cellRender,\n      dateRender = _ref.dateRender,\n      monthCellRender = _ref.monthCellRender,\n      onClick = _ref.onClick; // ========================= Refs =========================\n\n  var selectorRef = usePickerRef(ref); // ========================= Util =========================\n\n  function pickerParam(values) {\n    if (values === null) {\n      return null;\n    }\n\n    return multiple ? values : values[0];\n  }\n\n  var toggleDates = useToggleDates(generateConfig, locale, internalPicker); // ========================= Open =========================\n\n  var _useOpen = useOpen(open, defaultOpen, [disabled], onOpenChange),\n      _useOpen2 = _slicedToArray(_useOpen, 2),\n      mergedOpen = _useOpen2[0],\n      triggerOpen = _useOpen2[1]; // ======================= Calendar =======================\n\n\n  var onInternalCalendarChange = function onInternalCalendarChange(dates, dateStrings, info) {\n    if (onCalendarChange) {\n      var filteredInfo = _objectSpread({}, info);\n\n      delete filteredInfo.range;\n      onCalendarChange(pickerParam(dates), pickerParam(dateStrings), filteredInfo);\n    }\n  };\n\n  var onInternalOk = function onInternalOk(dates) {\n    onOk === null || onOk === void 0 || onOk(pickerParam(dates));\n  }; // ======================== Values ========================\n\n\n  var _useInnerValue = useInnerValue(generateConfig, locale, formatList, false, order, defaultValue, value, onInternalCalendarChange, onInternalOk),\n      _useInnerValue2 = _slicedToArray(_useInnerValue, 5),\n      mergedValue = _useInnerValue2[0],\n      setInnerValue = _useInnerValue2[1],\n      getCalendarValue = _useInnerValue2[2],\n      triggerCalendarChange = _useInnerValue2[3],\n      triggerOk = _useInnerValue2[4];\n\n  var calendarValue = getCalendarValue(); // ======================== Active ========================\n  // In SinglePicker, we will always get `activeIndex` is 0.\n\n  var _useRangeActive = useRangeActive([disabled]),\n      _useRangeActive2 = _slicedToArray(_useRangeActive, 4),\n      focused = _useRangeActive2[0],\n      triggerFocus = _useRangeActive2[1],\n      lastOperation = _useRangeActive2[2],\n      activeIndex = _useRangeActive2[3];\n\n  var onSharedFocus = function onSharedFocus(event) {\n    triggerFocus(true);\n    onFocus === null || onFocus === void 0 || onFocus(event, {});\n  };\n\n  var onSharedBlur = function onSharedBlur(event) {\n    triggerFocus(false);\n    onBlur === null || onBlur === void 0 || onBlur(event, {});\n  }; // ========================= Mode =========================\n\n\n  var _useMergedState = useMergedState(picker, {\n    value: mode\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedMode = _useMergedState2[0],\n      setMode = _useMergedState2[1];\n  /** Extends from `mergedMode` to patch `datetime` mode */\n\n\n  var internalMode = mergedMode === 'date' && showTime ? 'datetime' : mergedMode; // ======================= Show Now =======================\n\n  var mergedShowNow = useShowNow(picker, mergedMode, showNow, showToday); // ======================== Value =========================\n\n  var onInternalChange = onChange && function (dates, dateStrings) {\n    onChange(pickerParam(dates), pickerParam(dateStrings));\n  };\n\n  var _useRangeValue = useRangeValue(_objectSpread(_objectSpread({}, filledProps), {}, {\n    onChange: onInternalChange\n  }), mergedValue, setInnerValue, getCalendarValue, triggerCalendarChange, [], //disabled,\n  formatList, focused, mergedOpen, isInvalidateDate),\n      _useRangeValue2 = _slicedToArray(_useRangeValue, 2),\n\n  /** Trigger `onChange` directly without check `disabledDate` */\n  triggerSubmitChange = _useRangeValue2[1]; // ======================= Validate =======================\n\n\n  var _useFieldsInvalidate = useFieldsInvalidate(calendarValue, isInvalidateDate),\n      _useFieldsInvalidate2 = _slicedToArray(_useFieldsInvalidate, 2),\n      submitInvalidates = _useFieldsInvalidate2[0],\n      onSelectorInvalid = _useFieldsInvalidate2[1];\n\n  var submitInvalidate = React.useMemo(function () {\n    return submitInvalidates.some(function (invalidated) {\n      return invalidated;\n    });\n  }, [submitInvalidates]); // ===================== Picker Value =====================\n  // Proxy to single pickerValue\n\n  var onInternalPickerValueChange = function onInternalPickerValueChange(dates, info) {\n    if (onPickerValueChange) {\n      var cleanInfo = _objectSpread(_objectSpread({}, info), {}, {\n        mode: info.mode[0]\n      });\n\n      delete cleanInfo.range;\n      onPickerValueChange(dates[0], cleanInfo);\n    }\n  };\n\n  var _useRangePickerValue = useRangePickerValue(generateConfig, locale, calendarValue, [mergedMode], mergedOpen, activeIndex, internalPicker, false, // multiplePanel,\n  defaultPickerValue, pickerValue, toArray(showTime === null || showTime === void 0 ? void 0 : showTime.defaultOpenValue), onInternalPickerValueChange, minDate, maxDate),\n      _useRangePickerValue2 = _slicedToArray(_useRangePickerValue, 2),\n      currentPickerValue = _useRangePickerValue2[0],\n      setCurrentPickerValue = _useRangePickerValue2[1]; // >>> Mode need wait for `pickerValue`\n\n\n  var triggerModeChange = useEvent(function (nextPickerValue, nextMode, triggerEvent) {\n    setMode(nextMode); // Compatible with `onPanelChange`\n\n    if (onPanelChange && triggerEvent !== false) {\n      var lastPickerValue = nextPickerValue || calendarValue[calendarValue.length - 1];\n      onPanelChange(lastPickerValue, nextMode);\n    }\n  }); // ======================== Submit ========================\n\n  /**\n   * Different with RangePicker, confirm should check `multiple` logic.\n   * This will never provide `date` instead.\n   */\n\n  var triggerConfirm = function triggerConfirm() {\n    triggerSubmitChange(getCalendarValue());\n    triggerOpen(false, {\n      force: true\n    });\n  }; // ======================== Click =========================\n\n\n  var onSelectorClick = function onSelectorClick(event) {\n    if (!disabled && !selectorRef.current.nativeElement.contains(document.activeElement)) {\n      // Click to focus the enabled input\n      selectorRef.current.focus();\n    }\n\n    triggerOpen(true);\n    onClick === null || onClick === void 0 || onClick(event);\n  };\n\n  var onSelectorClear = function onSelectorClear() {\n    triggerSubmitChange(null);\n    triggerOpen(false, {\n      force: true\n    });\n  }; // ======================== Hover =========================\n\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hoverSource = _React$useState2[0],\n      setHoverSource = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      internalHoverValue = _React$useState4[0],\n      setInternalHoverValue = _React$useState4[1];\n\n  var hoverValues = React.useMemo(function () {\n    var values = [internalHoverValue].concat(_toConsumableArray(calendarValue)).filter(function (date) {\n      return date;\n    });\n    return multiple ? values : values.slice(0, 1);\n  }, [calendarValue, internalHoverValue, multiple]); // Selector values is different with RangePicker\n  // which can not use `hoverValue` directly\n\n  var selectorValues = React.useMemo(function () {\n    if (!multiple && internalHoverValue) {\n      return [internalHoverValue];\n    }\n\n    return calendarValue.filter(function (date) {\n      return date;\n    });\n  }, [calendarValue, internalHoverValue, multiple]); // Clean up `internalHoverValues` when closed\n\n  React.useEffect(function () {\n    if (!mergedOpen) {\n      setInternalHoverValue(null);\n    }\n  }, [mergedOpen]); // ========================================================\n  // ==                       Panels                       ==\n  // ========================================================\n  // ======================= Presets ========================\n\n  var presetList = usePresets(presets);\n\n  var onPresetHover = function onPresetHover(nextValue) {\n    setInternalHoverValue(nextValue);\n    setHoverSource('preset');\n  }; // TODO: handle this\n\n\n  var onPresetSubmit = function onPresetSubmit(nextValue) {\n    var nextCalendarValues = multiple ? toggleDates(getCalendarValue(), nextValue) : [nextValue];\n    var passed = triggerSubmitChange(nextCalendarValues);\n\n    if (passed && !multiple) {\n      triggerOpen(false, {\n        force: true\n      });\n    }\n  };\n\n  var onNow = function onNow(now) {\n    onPresetSubmit(now);\n  }; // ======================== Panel =========================\n\n\n  var onPanelHover = function onPanelHover(date) {\n    setInternalHoverValue(date);\n    setHoverSource('cell');\n  }; // >>> Focus\n\n\n  var onPanelFocus = function onPanelFocus(event) {\n    triggerOpen(true);\n    onSharedFocus(event);\n  }; // >>> Calendar\n\n\n  var onPanelSelect = function onPanelSelect(date) {\n    lastOperation('panel');\n    var nextValues = multiple ? toggleDates(getCalendarValue(), date) : [date]; // Only trigger calendar event but not update internal `calendarValue` state\n\n    triggerCalendarChange(nextValues); // >>> Trigger next active if !needConfirm\n    // Fully logic check `useRangeValue` hook\n\n    if (!needConfirm && !complexPicker && internalPicker === internalMode) {\n      triggerConfirm();\n    }\n  }; // >>> Close\n\n\n  var onPopupClose = function onPopupClose() {\n    // Close popup\n    triggerOpen(false);\n  }; // >>> cellRender\n\n\n  var onInternalCellRender = useCellRender(cellRender, dateRender, monthCellRender); // >>> invalid\n\n  var panelProps = React.useMemo(function () {\n    var domProps = pickAttrs(filledProps, false);\n    var restProps = omit(filledProps, [].concat(_toConsumableArray(Object.keys(domProps)), ['onChange', 'onCalendarChange', 'style', 'className', 'onPanelChange']));\n    return _objectSpread(_objectSpread({}, restProps), {}, {\n      multiple: filledProps.multiple\n    });\n  }, [filledProps]); // >>> Render\n\n  var panel = /*#__PURE__*/React.createElement(Popup, _extends({}, panelProps, {\n    showNow: mergedShowNow,\n    showTime: showTime // Disabled\n    ,\n    disabledDate: disabledDate // Focus\n    ,\n    onFocus: onPanelFocus,\n    onBlur: onSharedBlur // Mode\n    ,\n    picker: picker,\n    mode: mergedMode,\n    internalMode: internalMode,\n    onPanelChange: triggerModeChange // Value\n    ,\n    format: maskFormat,\n    value: calendarValue,\n    isInvalid: isInvalidateDate,\n    onChange: null,\n    onSelect: onPanelSelect // PickerValue\n    ,\n    pickerValue: currentPickerValue,\n    defaultOpenValue: showTime === null || showTime === void 0 ? void 0 : showTime.defaultOpenValue,\n    onPickerValueChange: setCurrentPickerValue // Hover\n    ,\n    hoverValue: hoverValues,\n    onHover: onPanelHover // Submit\n    ,\n    needConfirm: needConfirm,\n    onSubmit: triggerConfirm,\n    onOk: triggerOk // Preset\n    ,\n    presets: presetList,\n    onPresetHover: onPresetHover,\n    onPresetSubmit: onPresetSubmit,\n    onNow: onNow // Render\n    ,\n    cellRender: onInternalCellRender\n  })); // ========================================================\n  // ==                      Selector                      ==\n  // ========================================================\n  // ======================== Change ========================\n\n  var onSelectorChange = function onSelectorChange(date) {\n    triggerCalendarChange(date);\n  };\n\n  var onSelectorInputChange = function onSelectorInputChange() {\n    lastOperation('input');\n  }; // ======================= Selector =======================\n\n\n  var onSelectorFocus = function onSelectorFocus(event) {\n    lastOperation('input');\n    triggerOpen(true, {\n      inherit: true\n    }); // setActiveIndex(index);\n\n    onSharedFocus(event);\n  };\n\n  var onSelectorBlur = function onSelectorBlur(event) {\n    triggerOpen(false);\n    onSharedBlur(event);\n  };\n\n  var onSelectorKeyDown = function onSelectorKeyDown(event, preventDefault) {\n    if (event.key === 'Tab') {\n      triggerConfirm();\n    }\n\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown(event, preventDefault);\n  }; // ======================= Context ========================\n\n\n  var context = React.useMemo(function () {\n    return {\n      prefixCls: prefixCls,\n      locale: locale,\n      generateConfig: generateConfig,\n      button: components.button,\n      input: components.input\n    };\n  }, [prefixCls, locale, generateConfig, components.button, components.input]); // ======================== Effect ========================\n  // >>> Mode\n  // Reset for every active\n\n  useLayoutEffect(function () {\n    if (mergedOpen && activeIndex !== undefined) {\n      // Legacy compatible. This effect update should not trigger `onPanelChange`\n      triggerModeChange(null, picker, false);\n    }\n  }, [mergedOpen, activeIndex, picker]); // >>> For complex picker, we need check if need to focus next one\n\n  useLayoutEffect(function () {\n    var lastOp = lastOperation(); // Trade as confirm on field leave\n\n    if (!mergedOpen && lastOp === 'input') {\n      triggerOpen(false);\n      triggerConfirm();\n    } // Submit with complex picker\n\n\n    if (!mergedOpen && complexPicker && !needConfirm && lastOp === 'panel') {\n      triggerOpen(true);\n      triggerConfirm();\n    }\n  }, [mergedOpen]); // ======================== Render ========================\n\n  return /*#__PURE__*/React.createElement(PickerContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(PickerTrigger, _extends({}, pickTriggerProps(filledProps), {\n    popupElement: panel,\n    popupStyle: styles.popup,\n    popupClassName: classNames.popup // Visible\n    ,\n    visible: mergedOpen,\n    onClose: onPopupClose\n  }), /*#__PURE__*/React.createElement(SingleSelector // Shared\n  , _extends({}, filledProps, {\n    // Ref\n    ref: selectorRef // Icon\n    ,\n    suffixIcon: suffixIcon,\n    removeIcon: removeIcon // Active\n    ,\n    activeHelp: !!internalHoverValue,\n    allHelp: !!internalHoverValue && hoverSource === 'preset',\n    focused: focused,\n    onFocus: onSelectorFocus,\n    onBlur: onSelectorBlur,\n    onKeyDown: onSelectorKeyDown,\n    onSubmit: triggerConfirm // Change\n    ,\n    value: selectorValues,\n    maskFormat: maskFormat,\n    onChange: onSelectorChange,\n    onInputChange: onSelectorInputChange,\n    internalPicker: internalPicker // Format\n    ,\n    format: formatList,\n    inputReadOnly: inputReadOnly // Disabled\n    ,\n    disabled: disabled // Open\n    ,\n    open: mergedOpen,\n    onOpenChange: triggerOpen // Click\n    ,\n    onClick: onSelectorClick,\n    onClear: onSelectorClear // Invalid\n    ,\n    invalid: submitInvalidate,\n    onInvalid: function onInvalid(invalid) {\n      // Only `single` mode support type date.\n      // `multiple` mode can not typing.\n      onSelectorInvalid(invalid, 0);\n    }\n  }))));\n}\n\nvar RefPicker = /*#__PURE__*/React.forwardRef(Picker);\n\nif (process.env.NODE_ENV !== 'production') {\n  RefPicker.displayName = 'RefPicker';\n}\n\nexport default RefPicker;","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/rc-picker/es/PickerInput/SinglePicker.js"],"names":["_extends","_toConsumableArray","_objectSpread","_slicedToArray","useEvent","useMergedState","useLayoutEffect","omit","pickAttrs","React","useToggleDates","PickerTrigger","pickTriggerProps","toArray","PickerContext","useCellRender","useFieldsInvalidate","useFilledProps","useOpen","usePickerRef","usePresets","useRangeActive","useRangePickerValue","useRangeValue","useInnerValue","useShowNow","Popup","SingleSelector","Picker","props","ref","_useFilledProps","_useFilledProps2","filledProps","internalPicker","complexPicker","formatList","maskFormat","isInvalidateDate","_ref","prefixCls","styles","classNames","order","defaultValue","value","needConfirm","onChange","onKeyDown","disabled","disabledDate","minDate","maxDate","defaultOpen","open","onOpenChange","locale","generateConfig","picker","showNow","showToday","showTime","mode","onPanelChange","onCalendarChange","onOk","multiple","defaultPickerValue","pickerValue","onPickerValueChange","inputReadOnly","suffixIcon","removeIcon","onFocus","onBlur","presets","components","cellRender","dateRender","monthCellRender","onClick","selectorRef","pickerParam","values","toggleDates","_useOpen","_useOpen2","mergedOpen","triggerOpen","onInternalCalendarChange","dates","dateStrings","info","filteredInfo","range","onInternalOk","_useInnerValue","_useInnerValue2","mergedValue","setInnerValue","getCalendarValue","triggerCalendarChange","triggerOk","calendarValue","_useRangeActive","_useRangeActive2","focused","triggerFocus","lastOperation","activeIndex","onSharedFocus","event","onSharedBlur","_useMergedState","_useMergedState2","mergedMode","setMode","internalMode","mergedShowNow","onInternalChange","_useRangeValue","_useRangeValue2","triggerSubmitChange","_useFieldsInvalidate","_useFieldsInvalidate2","submitInvalidates","onSelectorInvalid","submitInvalidate","useMemo","some","invalidated","onInternalPickerValueChange","cleanInfo","_useRangePickerValue","defaultOpenValue","_useRangePickerValue2","currentPickerValue","setCurrentPickerValue","triggerModeChange","nextPickerValue","nextMode","triggerEvent","lastPickerValue","length","triggerConfirm","force","onSelectorClick","current","nativeElement","contains","document","activeElement","focus","onSelectorClear","_React$useState","useState","_React$useState2","hoverSource","setHoverSource","_React$useState3","_React$useState4","internalHoverValue","setInternalHoverValue","hoverValues","concat","filter","date","slice","selectorValues","useEffect","presetList","onPresetHover","nextValue","onPresetSubmit","nextCalendarValues","passed","onNow","now","onPanelHover","onPanelFocus","onPanelSelect","nextValues","onPopupClose","onInternalCellRender","panelProps","domProps","restProps","Object","keys","panel","createElement","format","isInvalid","onSelect","hoverValue","onHover","onSubmit","onSelectorChange","onSelectorInputChange","onSelectorFocus","inherit","onSelectorBlur","onSelectorKeyDown","preventDefault","key","context","button","input","undefined","lastOp","Provider","popupElement","popupStyle","popup","popupClassName","visible","onClose","activeHelp","allHelp","onInputChange","onClear","invalid","onInvalid","RefPicker","forwardRef","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEvent, useMergedState } from 'rc-util';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport omit from \"rc-util/es/omit\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport * as React from 'react';\nimport useToggleDates from \"../hooks/useToggleDates\";\nimport PickerTrigger from \"../PickerTrigger\";\nimport { pickTriggerProps } from \"../PickerTrigger/util\";\nimport { toArray } from \"../utils/miscUtil\";\nimport PickerContext from \"./context\";\nimport useCellRender from \"./hooks/useCellRender\";\nimport useFieldsInvalidate from \"./hooks/useFieldsInvalidate\";\nimport useFilledProps from \"./hooks/useFilledProps\";\nimport useOpen from \"./hooks/useOpen\";\nimport usePickerRef from \"./hooks/usePickerRef\";\nimport usePresets from \"./hooks/usePresets\";\nimport useRangeActive from \"./hooks/useRangeActive\";\nimport useRangePickerValue from \"./hooks/useRangePickerValue\";\nimport useRangeValue, { useInnerValue } from \"./hooks/useRangeValue\";\nimport useShowNow from \"./hooks/useShowNow\";\nimport Popup from \"./Popup\";\nimport SingleSelector from \"./Selector/SingleSelector\";\n\n// TODO: isInvalidateDate with showTime.disabledTime should not provide `range` prop\n\n/** Internal usage. For cross function get same aligned props */\n\nfunction Picker(props, ref) {\n  // ========================= Prop =========================\n  var _useFilledProps = useFilledProps(props),\n    _useFilledProps2 = _slicedToArray(_useFilledProps, 6),\n    filledProps = _useFilledProps2[0],\n    internalPicker = _useFilledProps2[1],\n    complexPicker = _useFilledProps2[2],\n    formatList = _useFilledProps2[3],\n    maskFormat = _useFilledProps2[4],\n    isInvalidateDate = _useFilledProps2[5];\n  var _ref = filledProps,\n    prefixCls = _ref.prefixCls,\n    styles = _ref.styles,\n    classNames = _ref.classNames,\n    order = _ref.order,\n    defaultValue = _ref.defaultValue,\n    value = _ref.value,\n    needConfirm = _ref.needConfirm,\n    onChange = _ref.onChange,\n    onKeyDown = _ref.onKeyDown,\n    disabled = _ref.disabled,\n    disabledDate = _ref.disabledDate,\n    minDate = _ref.minDate,\n    maxDate = _ref.maxDate,\n    defaultOpen = _ref.defaultOpen,\n    open = _ref.open,\n    onOpenChange = _ref.onOpenChange,\n    locale = _ref.locale,\n    generateConfig = _ref.generateConfig,\n    picker = _ref.picker,\n    showNow = _ref.showNow,\n    showToday = _ref.showToday,\n    showTime = _ref.showTime,\n    mode = _ref.mode,\n    onPanelChange = _ref.onPanelChange,\n    onCalendarChange = _ref.onCalendarChange,\n    onOk = _ref.onOk,\n    multiple = _ref.multiple,\n    defaultPickerValue = _ref.defaultPickerValue,\n    pickerValue = _ref.pickerValue,\n    onPickerValueChange = _ref.onPickerValueChange,\n    inputReadOnly = _ref.inputReadOnly,\n    suffixIcon = _ref.suffixIcon,\n    removeIcon = _ref.removeIcon,\n    onFocus = _ref.onFocus,\n    onBlur = _ref.onBlur,\n    presets = _ref.presets,\n    components = _ref.components,\n    cellRender = _ref.cellRender,\n    dateRender = _ref.dateRender,\n    monthCellRender = _ref.monthCellRender,\n    onClick = _ref.onClick;\n\n  // ========================= Refs =========================\n  var selectorRef = usePickerRef(ref);\n\n  // ========================= Util =========================\n  function pickerParam(values) {\n    if (values === null) {\n      return null;\n    }\n    return multiple ? values : values[0];\n  }\n  var toggleDates = useToggleDates(generateConfig, locale, internalPicker);\n\n  // ========================= Open =========================\n  var _useOpen = useOpen(open, defaultOpen, [disabled], onOpenChange),\n    _useOpen2 = _slicedToArray(_useOpen, 2),\n    mergedOpen = _useOpen2[0],\n    triggerOpen = _useOpen2[1];\n\n  // ======================= Calendar =======================\n  var onInternalCalendarChange = function onInternalCalendarChange(dates, dateStrings, info) {\n    if (onCalendarChange) {\n      var filteredInfo = _objectSpread({}, info);\n      delete filteredInfo.range;\n      onCalendarChange(pickerParam(dates), pickerParam(dateStrings), filteredInfo);\n    }\n  };\n  var onInternalOk = function onInternalOk(dates) {\n    onOk === null || onOk === void 0 || onOk(pickerParam(dates));\n  };\n\n  // ======================== Values ========================\n  var _useInnerValue = useInnerValue(generateConfig, locale, formatList, false, order, defaultValue, value, onInternalCalendarChange, onInternalOk),\n    _useInnerValue2 = _slicedToArray(_useInnerValue, 5),\n    mergedValue = _useInnerValue2[0],\n    setInnerValue = _useInnerValue2[1],\n    getCalendarValue = _useInnerValue2[2],\n    triggerCalendarChange = _useInnerValue2[3],\n    triggerOk = _useInnerValue2[4];\n  var calendarValue = getCalendarValue();\n\n  // ======================== Active ========================\n  // In SinglePicker, we will always get `activeIndex` is 0.\n  var _useRangeActive = useRangeActive([disabled]),\n    _useRangeActive2 = _slicedToArray(_useRangeActive, 4),\n    focused = _useRangeActive2[0],\n    triggerFocus = _useRangeActive2[1],\n    lastOperation = _useRangeActive2[2],\n    activeIndex = _useRangeActive2[3];\n  var onSharedFocus = function onSharedFocus(event) {\n    triggerFocus(true);\n    onFocus === null || onFocus === void 0 || onFocus(event, {});\n  };\n  var onSharedBlur = function onSharedBlur(event) {\n    triggerFocus(false);\n    onBlur === null || onBlur === void 0 || onBlur(event, {});\n  };\n\n  // ========================= Mode =========================\n  var _useMergedState = useMergedState(picker, {\n      value: mode\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedMode = _useMergedState2[0],\n    setMode = _useMergedState2[1];\n\n  /** Extends from `mergedMode` to patch `datetime` mode */\n  var internalMode = mergedMode === 'date' && showTime ? 'datetime' : mergedMode;\n\n  // ======================= Show Now =======================\n  var mergedShowNow = useShowNow(picker, mergedMode, showNow, showToday);\n\n  // ======================== Value =========================\n  var onInternalChange = onChange && function (dates, dateStrings) {\n    onChange(pickerParam(dates), pickerParam(dateStrings));\n  };\n  var _useRangeValue = useRangeValue(_objectSpread(_objectSpread({}, filledProps), {}, {\n      onChange: onInternalChange\n    }), mergedValue, setInnerValue, getCalendarValue, triggerCalendarChange, [],\n    //disabled,\n    formatList, focused, mergedOpen, isInvalidateDate),\n    _useRangeValue2 = _slicedToArray(_useRangeValue, 2),\n    /** Trigger `onChange` directly without check `disabledDate` */\n    triggerSubmitChange = _useRangeValue2[1];\n\n  // ======================= Validate =======================\n  var _useFieldsInvalidate = useFieldsInvalidate(calendarValue, isInvalidateDate),\n    _useFieldsInvalidate2 = _slicedToArray(_useFieldsInvalidate, 2),\n    submitInvalidates = _useFieldsInvalidate2[0],\n    onSelectorInvalid = _useFieldsInvalidate2[1];\n  var submitInvalidate = React.useMemo(function () {\n    return submitInvalidates.some(function (invalidated) {\n      return invalidated;\n    });\n  }, [submitInvalidates]);\n\n  // ===================== Picker Value =====================\n  // Proxy to single pickerValue\n  var onInternalPickerValueChange = function onInternalPickerValueChange(dates, info) {\n    if (onPickerValueChange) {\n      var cleanInfo = _objectSpread(_objectSpread({}, info), {}, {\n        mode: info.mode[0]\n      });\n      delete cleanInfo.range;\n      onPickerValueChange(dates[0], cleanInfo);\n    }\n  };\n  var _useRangePickerValue = useRangePickerValue(generateConfig, locale, calendarValue, [mergedMode], mergedOpen, activeIndex, internalPicker, false,\n    // multiplePanel,\n    defaultPickerValue, pickerValue, toArray(showTime === null || showTime === void 0 ? void 0 : showTime.defaultOpenValue), onInternalPickerValueChange, minDate, maxDate),\n    _useRangePickerValue2 = _slicedToArray(_useRangePickerValue, 2),\n    currentPickerValue = _useRangePickerValue2[0],\n    setCurrentPickerValue = _useRangePickerValue2[1];\n\n  // >>> Mode need wait for `pickerValue`\n  var triggerModeChange = useEvent(function (nextPickerValue, nextMode, triggerEvent) {\n    setMode(nextMode);\n\n    // Compatible with `onPanelChange`\n    if (onPanelChange && triggerEvent !== false) {\n      var lastPickerValue = nextPickerValue || calendarValue[calendarValue.length - 1];\n      onPanelChange(lastPickerValue, nextMode);\n    }\n  });\n\n  // ======================== Submit ========================\n  /**\n   * Different with RangePicker, confirm should check `multiple` logic.\n   * This will never provide `date` instead.\n   */\n  var triggerConfirm = function triggerConfirm() {\n    triggerSubmitChange(getCalendarValue());\n    triggerOpen(false, {\n      force: true\n    });\n  };\n\n  // ======================== Click =========================\n  var onSelectorClick = function onSelectorClick(event) {\n    if (!disabled && !selectorRef.current.nativeElement.contains(document.activeElement)) {\n      // Click to focus the enabled input\n      selectorRef.current.focus();\n    }\n    triggerOpen(true);\n    onClick === null || onClick === void 0 || onClick(event);\n  };\n  var onSelectorClear = function onSelectorClear() {\n    triggerSubmitChange(null);\n    triggerOpen(false, {\n      force: true\n    });\n  };\n\n  // ======================== Hover =========================\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    hoverSource = _React$useState2[0],\n    setHoverSource = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    internalHoverValue = _React$useState4[0],\n    setInternalHoverValue = _React$useState4[1];\n  var hoverValues = React.useMemo(function () {\n    var values = [internalHoverValue].concat(_toConsumableArray(calendarValue)).filter(function (date) {\n      return date;\n    });\n    return multiple ? values : values.slice(0, 1);\n  }, [calendarValue, internalHoverValue, multiple]);\n\n  // Selector values is different with RangePicker\n  // which can not use `hoverValue` directly\n  var selectorValues = React.useMemo(function () {\n    if (!multiple && internalHoverValue) {\n      return [internalHoverValue];\n    }\n    return calendarValue.filter(function (date) {\n      return date;\n    });\n  }, [calendarValue, internalHoverValue, multiple]);\n\n  // Clean up `internalHoverValues` when closed\n  React.useEffect(function () {\n    if (!mergedOpen) {\n      setInternalHoverValue(null);\n    }\n  }, [mergedOpen]);\n\n  // ========================================================\n  // ==                       Panels                       ==\n  // ========================================================\n  // ======================= Presets ========================\n  var presetList = usePresets(presets);\n  var onPresetHover = function onPresetHover(nextValue) {\n    setInternalHoverValue(nextValue);\n    setHoverSource('preset');\n  };\n\n  // TODO: handle this\n  var onPresetSubmit = function onPresetSubmit(nextValue) {\n    var nextCalendarValues = multiple ? toggleDates(getCalendarValue(), nextValue) : [nextValue];\n    var passed = triggerSubmitChange(nextCalendarValues);\n    if (passed && !multiple) {\n      triggerOpen(false, {\n        force: true\n      });\n    }\n  };\n  var onNow = function onNow(now) {\n    onPresetSubmit(now);\n  };\n\n  // ======================== Panel =========================\n  var onPanelHover = function onPanelHover(date) {\n    setInternalHoverValue(date);\n    setHoverSource('cell');\n  };\n\n  // >>> Focus\n  var onPanelFocus = function onPanelFocus(event) {\n    triggerOpen(true);\n    onSharedFocus(event);\n  };\n\n  // >>> Calendar\n  var onPanelSelect = function onPanelSelect(date) {\n    lastOperation('panel');\n    var nextValues = multiple ? toggleDates(getCalendarValue(), date) : [date];\n\n    // Only trigger calendar event but not update internal `calendarValue` state\n    triggerCalendarChange(nextValues);\n\n    // >>> Trigger next active if !needConfirm\n    // Fully logic check `useRangeValue` hook\n    if (!needConfirm && !complexPicker && internalPicker === internalMode) {\n      triggerConfirm();\n    }\n  };\n\n  // >>> Close\n  var onPopupClose = function onPopupClose() {\n    // Close popup\n    triggerOpen(false);\n  };\n\n  // >>> cellRender\n  var onInternalCellRender = useCellRender(cellRender, dateRender, monthCellRender);\n\n  // >>> invalid\n\n  var panelProps = React.useMemo(function () {\n    var domProps = pickAttrs(filledProps, false);\n    var restProps = omit(filledProps, [].concat(_toConsumableArray(Object.keys(domProps)), ['onChange', 'onCalendarChange', 'style', 'className', 'onPanelChange']));\n    return _objectSpread(_objectSpread({}, restProps), {}, {\n      multiple: filledProps.multiple\n    });\n  }, [filledProps]);\n\n  // >>> Render\n  var panel = /*#__PURE__*/React.createElement(Popup, _extends({}, panelProps, {\n    showNow: mergedShowNow,\n    showTime: showTime\n    // Disabled\n    ,\n    disabledDate: disabledDate\n    // Focus\n    ,\n    onFocus: onPanelFocus,\n    onBlur: onSharedBlur\n    // Mode\n    ,\n    picker: picker,\n    mode: mergedMode,\n    internalMode: internalMode,\n    onPanelChange: triggerModeChange\n    // Value\n    ,\n    format: maskFormat,\n    value: calendarValue,\n    isInvalid: isInvalidateDate,\n    onChange: null,\n    onSelect: onPanelSelect\n    // PickerValue\n    ,\n    pickerValue: currentPickerValue,\n    defaultOpenValue: showTime === null || showTime === void 0 ? void 0 : showTime.defaultOpenValue,\n    onPickerValueChange: setCurrentPickerValue\n    // Hover\n    ,\n    hoverValue: hoverValues,\n    onHover: onPanelHover\n    // Submit\n    ,\n    needConfirm: needConfirm,\n    onSubmit: triggerConfirm,\n    onOk: triggerOk\n    // Preset\n    ,\n    presets: presetList,\n    onPresetHover: onPresetHover,\n    onPresetSubmit: onPresetSubmit,\n    onNow: onNow\n    // Render\n    ,\n    cellRender: onInternalCellRender\n  }));\n\n  // ========================================================\n  // ==                      Selector                      ==\n  // ========================================================\n\n  // ======================== Change ========================\n  var onSelectorChange = function onSelectorChange(date) {\n    triggerCalendarChange(date);\n  };\n  var onSelectorInputChange = function onSelectorInputChange() {\n    lastOperation('input');\n  };\n\n  // ======================= Selector =======================\n  var onSelectorFocus = function onSelectorFocus(event) {\n    lastOperation('input');\n    triggerOpen(true, {\n      inherit: true\n    });\n\n    // setActiveIndex(index);\n\n    onSharedFocus(event);\n  };\n  var onSelectorBlur = function onSelectorBlur(event) {\n    triggerOpen(false);\n    onSharedBlur(event);\n  };\n  var onSelectorKeyDown = function onSelectorKeyDown(event, preventDefault) {\n    if (event.key === 'Tab') {\n      triggerConfirm();\n    }\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown(event, preventDefault);\n  };\n\n  // ======================= Context ========================\n  var context = React.useMemo(function () {\n    return {\n      prefixCls: prefixCls,\n      locale: locale,\n      generateConfig: generateConfig,\n      button: components.button,\n      input: components.input\n    };\n  }, [prefixCls, locale, generateConfig, components.button, components.input]);\n\n  // ======================== Effect ========================\n  // >>> Mode\n  // Reset for every active\n  useLayoutEffect(function () {\n    if (mergedOpen && activeIndex !== undefined) {\n      // Legacy compatible. This effect update should not trigger `onPanelChange`\n      triggerModeChange(null, picker, false);\n    }\n  }, [mergedOpen, activeIndex, picker]);\n\n  // >>> For complex picker, we need check if need to focus next one\n  useLayoutEffect(function () {\n    var lastOp = lastOperation();\n\n    // Trade as confirm on field leave\n    if (!mergedOpen && lastOp === 'input') {\n      triggerOpen(false);\n      triggerConfirm();\n    }\n\n    // Submit with complex picker\n    if (!mergedOpen && complexPicker && !needConfirm && lastOp === 'panel') {\n      triggerOpen(true);\n      triggerConfirm();\n    }\n  }, [mergedOpen]);\n\n  // ======================== Render ========================\n  return /*#__PURE__*/React.createElement(PickerContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(PickerTrigger, _extends({}, pickTriggerProps(filledProps), {\n    popupElement: panel,\n    popupStyle: styles.popup,\n    popupClassName: classNames.popup\n    // Visible\n    ,\n    visible: mergedOpen,\n    onClose: onPopupClose\n  }), /*#__PURE__*/React.createElement(SingleSelector\n  // Shared\n  , _extends({}, filledProps, {\n    // Ref\n    ref: selectorRef\n    // Icon\n    ,\n    suffixIcon: suffixIcon,\n    removeIcon: removeIcon\n    // Active\n    ,\n    activeHelp: !!internalHoverValue,\n    allHelp: !!internalHoverValue && hoverSource === 'preset',\n    focused: focused,\n    onFocus: onSelectorFocus,\n    onBlur: onSelectorBlur,\n    onKeyDown: onSelectorKeyDown,\n    onSubmit: triggerConfirm\n    // Change\n    ,\n    value: selectorValues,\n    maskFormat: maskFormat,\n    onChange: onSelectorChange,\n    onInputChange: onSelectorInputChange,\n    internalPicker: internalPicker\n    // Format\n    ,\n    format: formatList,\n    inputReadOnly: inputReadOnly\n    // Disabled\n    ,\n    disabled: disabled\n    // Open\n    ,\n    open: mergedOpen,\n    onOpenChange: triggerOpen\n    // Click\n    ,\n    onClick: onSelectorClick,\n    onClear: onSelectorClear\n    // Invalid\n    ,\n    invalid: submitInvalidate,\n    onInvalid: function onInvalid(invalid) {\n      // Only `single` mode support type date.\n      // `multiple` mode can not typing.\n      onSelectorInvalid(invalid, 0);\n    }\n  }))));\n}\nvar RefPicker = /*#__PURE__*/React.forwardRef(Picker);\nif (process.env.NODE_ENV !== 'production') {\n  RefPicker.displayName = 'RefPicker';\n}\nexport default RefPicker;"]},"metadata":{},"sourceType":"module"}