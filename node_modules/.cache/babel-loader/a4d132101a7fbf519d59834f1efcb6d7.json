{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nexport var token2CSSVar = function token2CSSVar(token) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return \"--\".concat(prefix ? \"\".concat(prefix, \"-\") : '').concat(token).replace(/([a-z0-9])([A-Z])/g, '$1-$2').replace(/([A-Z]+)([A-Z][a-z0-9]+)/g, '$1-$2').replace(/([a-z])([A-Z0-9])/g, '$1-$2').toLowerCase();\n};\nexport var serializeCSSVar = function serializeCSSVar(cssVars, hashId, options) {\n  if (!Object.keys(cssVars).length) {\n    return '';\n  }\n\n  return \".\".concat(hashId).concat(options !== null && options !== void 0 && options.scope ? \".\".concat(options.scope) : '', \"{\").concat(Object.entries(cssVars).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return \"\".concat(key, \":\").concat(value, \";\");\n  }).join(''), \"}\");\n};\nexport var transformToken = function transformToken(token, themeKey, config) {\n  var cssVars = {};\n  var result = {};\n  Object.entries(token).forEach(function (_ref3) {\n    var _config$preserve, _config$ignore;\n\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    if (config !== null && config !== void 0 && (_config$preserve = config.preserve) !== null && _config$preserve !== void 0 && _config$preserve[key]) {\n      result[key] = value;\n    } else if ((typeof value === 'string' || typeof value === 'number') && !(config !== null && config !== void 0 && (_config$ignore = config.ignore) !== null && _config$ignore !== void 0 && _config$ignore[key])) {\n      var _config$unitless;\n\n      var cssVar = token2CSSVar(key, config === null || config === void 0 ? void 0 : config.prefix);\n      cssVars[cssVar] = typeof value === 'number' && !(config !== null && config !== void 0 && (_config$unitless = config.unitless) !== null && _config$unitless !== void 0 && _config$unitless[key]) ? \"\".concat(value, \"px\") : String(value);\n      result[key] = \"var(\".concat(cssVar, \")\");\n    }\n  });\n  return [result, serializeCSSVar(cssVars, themeKey, {\n    scope: config === null || config === void 0 ? void 0 : config.scope\n  })];\n};","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/@ant-design/cssinjs/es/util/css-variables.js"],"names":["_slicedToArray","token2CSSVar","token","prefix","arguments","length","undefined","concat","replace","toLowerCase","serializeCSSVar","cssVars","hashId","options","Object","keys","scope","entries","map","_ref","_ref2","key","value","join","transformToken","themeKey","config","result","forEach","_ref3","_config$preserve","_config$ignore","_ref4","preserve","ignore","_config$unitless","cssVar","unitless","String"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAO,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AACrD,MAAIC,MAAM,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAjF;AACA,SAAO,KAAKG,MAAL,CAAYJ,MAAM,GAAG,GAAGI,MAAH,CAAUJ,MAAV,EAAkB,GAAlB,CAAH,GAA4B,EAA9C,EAAkDI,MAAlD,CAAyDL,KAAzD,EAAgEM,OAAhE,CAAwE,oBAAxE,EAA8F,OAA9F,EAAuGA,OAAvG,CAA+G,2BAA/G,EAA4I,OAA5I,EAAqJA,OAArJ,CAA6J,oBAA7J,EAAmL,OAAnL,EAA4LC,WAA5L,EAAP;AACD,CAHM;AAIP,OAAO,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,OAA1C,EAAmD;AAC9E,MAAI,CAACC,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqBN,MAA1B,EAAkC;AAChC,WAAO,EAAP;AACD;;AACD,SAAO,IAAIE,MAAJ,CAAWK,MAAX,EAAmBL,MAAnB,CAA0BM,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAACG,KAAlD,GAA0D,IAAIT,MAAJ,CAAWM,OAAO,CAACG,KAAnB,CAA1D,GAAsF,EAAhH,EAAoH,GAApH,EAAyHT,MAAzH,CAAgIO,MAAM,CAACG,OAAP,CAAeN,OAAf,EAAwBO,GAAxB,CAA4B,UAAUC,IAAV,EAAgB;AACjL,QAAIC,KAAK,GAAGpB,cAAc,CAACmB,IAAD,EAAO,CAAP,CAA1B;AAAA,QACEE,GAAG,GAAGD,KAAK,CAAC,CAAD,CADb;AAAA,QAEEE,KAAK,GAAGF,KAAK,CAAC,CAAD,CAFf;;AAGA,WAAO,GAAGb,MAAH,CAAUc,GAAV,EAAe,GAAf,EAAoBd,MAApB,CAA2Be,KAA3B,EAAkC,GAAlC,CAAP;AACD,GALsI,EAKpIC,IALoI,CAK/H,EAL+H,CAAhI,EAKM,GALN,CAAP;AAMD,CAVM;AAWP,OAAO,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBtB,KAAxB,EAA+BuB,QAA/B,EAAyCC,MAAzC,EAAiD;AAC3E,MAAIf,OAAO,GAAG,EAAd;AACA,MAAIgB,MAAM,GAAG,EAAb;AACAb,EAAAA,MAAM,CAACG,OAAP,CAAef,KAAf,EAAsB0B,OAAtB,CAA8B,UAAUC,KAAV,EAAiB;AAC7C,QAAIC,gBAAJ,EAAsBC,cAAtB;;AACA,QAAIC,KAAK,GAAGhC,cAAc,CAAC6B,KAAD,EAAQ,CAAR,CAA1B;AAAA,QACER,GAAG,GAAGW,KAAK,CAAC,CAAD,CADb;AAAA,QAEEV,KAAK,GAAGU,KAAK,CAAC,CAAD,CAFf;;AAGA,QAAIN,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,IAAwC,CAACI,gBAAgB,GAAGJ,MAAM,CAACO,QAA3B,MAAyC,IAAjF,IAAyFH,gBAAgB,KAAK,KAAK,CAAnH,IAAwHA,gBAAgB,CAACT,GAAD,CAA5I,EAAmJ;AACjJM,MAAAA,MAAM,CAACN,GAAD,CAAN,GAAcC,KAAd;AACD,KAFD,MAEO,IAAI,CAAC,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAA/C,KAA4D,EAAEI,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,IAAwC,CAACK,cAAc,GAAGL,MAAM,CAACQ,MAAzB,MAAqC,IAA7E,IAAqFH,cAAc,KAAK,KAAK,CAA7G,IAAkHA,cAAc,CAACV,GAAD,CAAlI,CAAhE,EAA0M;AAC/M,UAAIc,gBAAJ;;AACA,UAAIC,MAAM,GAAGnC,YAAY,CAACoB,GAAD,EAAMK,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACvB,MAA7D,CAAzB;AACAQ,MAAAA,OAAO,CAACyB,MAAD,CAAP,GAAkB,OAAOd,KAAP,KAAiB,QAAjB,IAA6B,EAAEI,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,IAAwC,CAACS,gBAAgB,GAAGT,MAAM,CAACW,QAA3B,MAAyC,IAAjF,IAAyFF,gBAAgB,KAAK,KAAK,CAAnH,IAAwHA,gBAAgB,CAACd,GAAD,CAA1I,CAA7B,GAAgL,GAAGd,MAAH,CAAUe,KAAV,EAAiB,IAAjB,CAAhL,GAAyMgB,MAAM,CAAChB,KAAD,CAAjO;AACAK,MAAAA,MAAM,CAACN,GAAD,CAAN,GAAc,OAAOd,MAAP,CAAc6B,MAAd,EAAsB,GAAtB,CAAd;AACD;AACF,GAbD;AAcA,SAAO,CAACT,MAAD,EAASjB,eAAe,CAACC,OAAD,EAAUc,QAAV,EAAoB;AACjDT,IAAAA,KAAK,EAAEU,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACV;AADb,GAApB,CAAxB,CAAP;AAGD,CApBM","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nexport var token2CSSVar = function token2CSSVar(token) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return \"--\".concat(prefix ? \"\".concat(prefix, \"-\") : '').concat(token).replace(/([a-z0-9])([A-Z])/g, '$1-$2').replace(/([A-Z]+)([A-Z][a-z0-9]+)/g, '$1-$2').replace(/([a-z])([A-Z0-9])/g, '$1-$2').toLowerCase();\n};\nexport var serializeCSSVar = function serializeCSSVar(cssVars, hashId, options) {\n  if (!Object.keys(cssVars).length) {\n    return '';\n  }\n  return \".\".concat(hashId).concat(options !== null && options !== void 0 && options.scope ? \".\".concat(options.scope) : '', \"{\").concat(Object.entries(cssVars).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    return \"\".concat(key, \":\").concat(value, \";\");\n  }).join(''), \"}\");\n};\nexport var transformToken = function transformToken(token, themeKey, config) {\n  var cssVars = {};\n  var result = {};\n  Object.entries(token).forEach(function (_ref3) {\n    var _config$preserve, _config$ignore;\n    var _ref4 = _slicedToArray(_ref3, 2),\n      key = _ref4[0],\n      value = _ref4[1];\n    if (config !== null && config !== void 0 && (_config$preserve = config.preserve) !== null && _config$preserve !== void 0 && _config$preserve[key]) {\n      result[key] = value;\n    } else if ((typeof value === 'string' || typeof value === 'number') && !(config !== null && config !== void 0 && (_config$ignore = config.ignore) !== null && _config$ignore !== void 0 && _config$ignore[key])) {\n      var _config$unitless;\n      var cssVar = token2CSSVar(key, config === null || config === void 0 ? void 0 : config.prefix);\n      cssVars[cssVar] = typeof value === 'number' && !(config !== null && config !== void 0 && (_config$unitless = config.unitless) !== null && _config$unitless !== void 0 && _config$unitless[key]) ? \"\".concat(value, \"px\") : String(value);\n      result[key] = \"var(\".concat(cssVar, \")\");\n    }\n  });\n  return [result, serializeCSSVar(cssVars, themeKey, {\n    scope: config === null || config === void 0 ? void 0 : config.scope\n  })];\n};"]},"metadata":{},"sourceType":"module"}