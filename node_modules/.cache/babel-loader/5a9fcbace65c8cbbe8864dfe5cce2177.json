{"ast":null,"code":"import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { CONTAINER_MAX_OFFSET } from '../../_util/hooks/useZIndex';\nimport { resetComponent, genFocusStyle } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport genNotificationPlacementStyle from './placement';\nimport genStackStyle from './stack';\nexport const genNoticeStyle = token => {\n  const {\n    iconCls,\n    componentCls,\n    // .ant-notification\n    boxShadow,\n    fontSizeLG,\n    notificationMarginBottom,\n    borderRadiusLG,\n    colorSuccess,\n    colorInfo,\n    colorWarning,\n    colorError,\n    colorTextHeading,\n    notificationBg,\n    notificationPadding,\n    notificationMarginEdge,\n    fontSize,\n    lineHeight,\n    width,\n    notificationIconSize,\n    colorText\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  return {\n    position: 'relative',\n    marginBottom: notificationMarginBottom,\n    marginInlineStart: 'auto',\n    background: notificationBg,\n    borderRadius: borderRadiusLG,\n    boxShadow,\n    [noticeCls]: {\n      padding: notificationPadding,\n      width,\n      maxWidth: `calc(100vw - ${unit(token.calc(notificationMarginEdge).mul(2).equal())})`,\n      overflow: 'hidden',\n      lineHeight,\n      wordWrap: 'break-word'\n    },\n    [`${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      color: colorTextHeading,\n      fontSize: fontSizeLG,\n      lineHeight: token.lineHeightLG\n    },\n    [`${noticeCls}-description`]: {\n      fontSize,\n      color: colorText\n    },\n    [`${noticeCls}-closable ${noticeCls}-message`]: {\n      paddingInlineEnd: token.paddingLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      marginInlineStart: token.calc(token.marginSM).add(notificationIconSize).equal(),\n      fontSize: fontSizeLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-description`]: {\n      marginInlineStart: token.calc(token.marginSM).add(notificationIconSize).equal(),\n      fontSize\n    },\n    // Icon & color style in different selector level\n    // https://github.com/ant-design/ant-design/issues/16503\n    // https://github.com/ant-design/ant-design/issues/15512\n    [`${noticeCls}-icon`]: {\n      position: 'absolute',\n      fontSize: notificationIconSize,\n      lineHeight: 1,\n      // icon-font\n      [`&-success${iconCls}`]: {\n        color: colorSuccess\n      },\n      [`&-info${iconCls}`]: {\n        color: colorInfo\n      },\n      [`&-warning${iconCls}`]: {\n        color: colorWarning\n      },\n      [`&-error${iconCls}`]: {\n        color: colorError\n      }\n    },\n    [`${noticeCls}-close`]: Object.assign({\n      position: 'absolute',\n      top: token.notificationPaddingVertical,\n      insetInlineEnd: token.notificationPaddingHorizontal,\n      color: token.colorIcon,\n      outline: 'none',\n      width: token.notificationCloseButtonSize,\n      height: token.notificationCloseButtonSize,\n      borderRadius: token.borderRadiusSM,\n      transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&:hover': {\n        color: token.colorIconHover,\n        backgroundColor: token.colorBgTextHover\n      },\n      '&:active': {\n        backgroundColor: token.colorBgTextActive\n      }\n    }, genFocusStyle(token)),\n    [`${noticeCls}-btn`]: {\n      float: 'right',\n      marginTop: token.marginSM\n    }\n  };\n};\n\nconst genNotificationStyle = token => {\n  const {\n    componentCls,\n    // .ant-notification\n    notificationMarginBottom,\n    notificationMarginEdge,\n    motionDurationMid,\n    motionEaseInOut\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  const fadeOut = new Keyframes('antNotificationFadeOut', {\n    '0%': {\n      maxHeight: token.animationMaxHeight,\n      marginBottom: notificationMarginBottom\n    },\n    '100%': {\n      maxHeight: 0,\n      marginBottom: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      opacity: 0\n    }\n  });\n  return [// ============================ Holder ============================\n  {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'fixed',\n      zIndex: token.zIndexPopup,\n      marginRight: {\n        value: notificationMarginEdge,\n        _skip_check_: true\n      },\n      [`${componentCls}-hook-holder`]: {\n        position: 'relative'\n      },\n      //  animation\n      [`${componentCls}-fade-appear-prepare`]: {\n        opacity: '0 !important'\n      },\n      [`${componentCls}-fade-enter, ${componentCls}-fade-appear`]: {\n        animationDuration: token.motionDurationMid,\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        opacity: 0,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-leave`]: {\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        animationDuration: motionDurationMid,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n        animationPlayState: 'running'\n      },\n      [`${componentCls}-fade-leave${componentCls}-fade-leave-active`]: {\n        animationName: fadeOut,\n        animationPlayState: 'running'\n      },\n      // RTL\n      '&-rtl': {\n        direction: 'rtl',\n        [`${noticeCls}-btn`]: {\n          float: 'left'\n        }\n      }\n    })\n  }, // ============================ Notice ============================\n  {\n    [componentCls]: {\n      [`${noticeCls}-wrapper`]: Object.assign({}, genNoticeStyle(token))\n    }\n  }];\n}; // ============================== Export ==============================\n\n\nexport const prepareComponentToken = token => ({\n  zIndexPopup: token.zIndexPopupBase + CONTAINER_MAX_OFFSET + 50,\n  width: 384\n});\nexport const prepareNotificationToken = token => {\n  const notificationPaddingVertical = token.paddingMD;\n  const notificationPaddingHorizontal = token.paddingLG;\n  const notificationToken = mergeToken(token, {\n    notificationBg: token.colorBgElevated,\n    notificationPaddingVertical,\n    notificationPaddingHorizontal,\n    notificationIconSize: token.calc(token.fontSizeLG).mul(token.lineHeightLG).equal(),\n    notificationCloseButtonSize: token.calc(token.controlHeightLG).mul(0.55).equal(),\n    notificationMarginBottom: token.margin,\n    notificationPadding: `${unit(token.paddingMD)} ${unit(token.paddingContentHorizontalLG)}`,\n    notificationMarginEdge: token.marginLG,\n    animationMaxHeight: 150,\n    notificationStackLayer: 3\n  });\n  return notificationToken;\n};\nexport default genStyleHooks('Notification', token => {\n  const notificationToken = prepareNotificationToken(token);\n  return [genNotificationStyle(notificationToken), genNotificationPlacementStyle(notificationToken), genStackStyle(notificationToken)];\n}, prepareComponentToken);","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/notification/style/index.js"],"names":["Keyframes","unit","CONTAINER_MAX_OFFSET","resetComponent","genFocusStyle","genStyleHooks","mergeToken","genNotificationPlacementStyle","genStackStyle","genNoticeStyle","token","iconCls","componentCls","boxShadow","fontSizeLG","notificationMarginBottom","borderRadiusLG","colorSuccess","colorInfo","colorWarning","colorError","colorTextHeading","notificationBg","notificationPadding","notificationMarginEdge","fontSize","lineHeight","width","notificationIconSize","colorText","noticeCls","position","marginBottom","marginInlineStart","background","borderRadius","padding","maxWidth","calc","mul","equal","overflow","wordWrap","marginXS","color","lineHeightLG","paddingInlineEnd","paddingLG","marginSM","add","Object","assign","top","notificationPaddingVertical","insetInlineEnd","notificationPaddingHorizontal","colorIcon","outline","notificationCloseButtonSize","height","borderRadiusSM","transition","motionDurationMid","display","alignItems","justifyContent","colorIconHover","backgroundColor","colorBgTextHover","colorBgTextActive","float","marginTop","genNotificationStyle","motionEaseInOut","fadeOut","maxHeight","animationMaxHeight","paddingTop","paddingBottom","opacity","zIndex","zIndexPopup","marginRight","value","_skip_check_","animationDuration","animationTimingFunction","animationFillMode","animationPlayState","animationName","direction","prepareComponentToken","zIndexPopupBase","prepareNotificationToken","paddingMD","notificationToken","colorBgElevated","controlHeightLG","margin","paddingContentHorizontalLG","marginLG","notificationStackLayer"],"mappings":"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","sourcesContent":["import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { CONTAINER_MAX_OFFSET } from '../../_util/hooks/useZIndex';\nimport { resetComponent, genFocusStyle } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport genNotificationPlacementStyle from './placement';\nimport genStackStyle from './stack';\nexport const genNoticeStyle = token => {\n  const {\n    iconCls,\n    componentCls,\n    // .ant-notification\n    boxShadow,\n    fontSizeLG,\n    notificationMarginBottom,\n    borderRadiusLG,\n    colorSuccess,\n    colorInfo,\n    colorWarning,\n    colorError,\n    colorTextHeading,\n    notificationBg,\n    notificationPadding,\n    notificationMarginEdge,\n    fontSize,\n    lineHeight,\n    width,\n    notificationIconSize,\n    colorText\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  return {\n    position: 'relative',\n    marginBottom: notificationMarginBottom,\n    marginInlineStart: 'auto',\n    background: notificationBg,\n    borderRadius: borderRadiusLG,\n    boxShadow,\n    [noticeCls]: {\n      padding: notificationPadding,\n      width,\n      maxWidth: `calc(100vw - ${unit(token.calc(notificationMarginEdge).mul(2).equal())})`,\n      overflow: 'hidden',\n      lineHeight,\n      wordWrap: 'break-word'\n    },\n    [`${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      color: colorTextHeading,\n      fontSize: fontSizeLG,\n      lineHeight: token.lineHeightLG\n    },\n    [`${noticeCls}-description`]: {\n      fontSize,\n      color: colorText\n    },\n    [`${noticeCls}-closable ${noticeCls}-message`]: {\n      paddingInlineEnd: token.paddingLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      marginInlineStart: token.calc(token.marginSM).add(notificationIconSize).equal(),\n      fontSize: fontSizeLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-description`]: {\n      marginInlineStart: token.calc(token.marginSM).add(notificationIconSize).equal(),\n      fontSize\n    },\n    // Icon & color style in different selector level\n    // https://github.com/ant-design/ant-design/issues/16503\n    // https://github.com/ant-design/ant-design/issues/15512\n    [`${noticeCls}-icon`]: {\n      position: 'absolute',\n      fontSize: notificationIconSize,\n      lineHeight: 1,\n      // icon-font\n      [`&-success${iconCls}`]: {\n        color: colorSuccess\n      },\n      [`&-info${iconCls}`]: {\n        color: colorInfo\n      },\n      [`&-warning${iconCls}`]: {\n        color: colorWarning\n      },\n      [`&-error${iconCls}`]: {\n        color: colorError\n      }\n    },\n    [`${noticeCls}-close`]: Object.assign({\n      position: 'absolute',\n      top: token.notificationPaddingVertical,\n      insetInlineEnd: token.notificationPaddingHorizontal,\n      color: token.colorIcon,\n      outline: 'none',\n      width: token.notificationCloseButtonSize,\n      height: token.notificationCloseButtonSize,\n      borderRadius: token.borderRadiusSM,\n      transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&:hover': {\n        color: token.colorIconHover,\n        backgroundColor: token.colorBgTextHover\n      },\n      '&:active': {\n        backgroundColor: token.colorBgTextActive\n      }\n    }, genFocusStyle(token)),\n    [`${noticeCls}-btn`]: {\n      float: 'right',\n      marginTop: token.marginSM\n    }\n  };\n};\nconst genNotificationStyle = token => {\n  const {\n    componentCls,\n    // .ant-notification\n    notificationMarginBottom,\n    notificationMarginEdge,\n    motionDurationMid,\n    motionEaseInOut\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  const fadeOut = new Keyframes('antNotificationFadeOut', {\n    '0%': {\n      maxHeight: token.animationMaxHeight,\n      marginBottom: notificationMarginBottom\n    },\n    '100%': {\n      maxHeight: 0,\n      marginBottom: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      opacity: 0\n    }\n  });\n  return [\n  // ============================ Holder ============================\n  {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'fixed',\n      zIndex: token.zIndexPopup,\n      marginRight: {\n        value: notificationMarginEdge,\n        _skip_check_: true\n      },\n      [`${componentCls}-hook-holder`]: {\n        position: 'relative'\n      },\n      //  animation\n      [`${componentCls}-fade-appear-prepare`]: {\n        opacity: '0 !important'\n      },\n      [`${componentCls}-fade-enter, ${componentCls}-fade-appear`]: {\n        animationDuration: token.motionDurationMid,\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        opacity: 0,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-leave`]: {\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        animationDuration: motionDurationMid,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n        animationPlayState: 'running'\n      },\n      [`${componentCls}-fade-leave${componentCls}-fade-leave-active`]: {\n        animationName: fadeOut,\n        animationPlayState: 'running'\n      },\n      // RTL\n      '&-rtl': {\n        direction: 'rtl',\n        [`${noticeCls}-btn`]: {\n          float: 'left'\n        }\n      }\n    })\n  },\n  // ============================ Notice ============================\n  {\n    [componentCls]: {\n      [`${noticeCls}-wrapper`]: Object.assign({}, genNoticeStyle(token))\n    }\n  }];\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = token => ({\n  zIndexPopup: token.zIndexPopupBase + CONTAINER_MAX_OFFSET + 50,\n  width: 384\n});\nexport const prepareNotificationToken = token => {\n  const notificationPaddingVertical = token.paddingMD;\n  const notificationPaddingHorizontal = token.paddingLG;\n  const notificationToken = mergeToken(token, {\n    notificationBg: token.colorBgElevated,\n    notificationPaddingVertical,\n    notificationPaddingHorizontal,\n    notificationIconSize: token.calc(token.fontSizeLG).mul(token.lineHeightLG).equal(),\n    notificationCloseButtonSize: token.calc(token.controlHeightLG).mul(0.55).equal(),\n    notificationMarginBottom: token.margin,\n    notificationPadding: `${unit(token.paddingMD)} ${unit(token.paddingContentHorizontalLG)}`,\n    notificationMarginEdge: token.marginLG,\n    animationMaxHeight: 150,\n    notificationStackLayer: 3\n  });\n  return notificationToken;\n};\nexport default genStyleHooks('Notification', token => {\n  const notificationToken = prepareNotificationToken(token);\n  return [genNotificationStyle(notificationToken), genNotificationPlacementStyle(notificationToken), genStackStyle(notificationToken)];\n}, prepareComponentToken);"]},"metadata":{},"sourceType":"module"}