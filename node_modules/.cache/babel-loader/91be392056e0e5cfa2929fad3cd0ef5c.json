{"ast":null,"code":"export var WEEK_DAY_COUNT = 7;\n/**\n * Wrap the compare logic.\n * This will compare the each of value is empty first.\n * 1. All is empty, return true.\n * 2. One is empty, return false.\n * 3. return customize compare logic.\n */\n\nfunction nullableCompare(value1, value2, oriCompareFn) {\n  if (!value1 && !value2 || value1 === value2) {\n    return true;\n  }\n\n  if (!value1 || !value2) {\n    return false;\n  }\n\n  return oriCompareFn();\n}\n\nexport function isSameDecade(generateConfig, decade1, decade2) {\n  return nullableCompare(decade1, decade2, function () {\n    var num1 = Math.floor(generateConfig.getYear(decade1) / 10);\n    var num2 = Math.floor(generateConfig.getYear(decade2) / 10);\n    return num1 === num2;\n  });\n}\nexport function isSameYear(generateConfig, year1, year2) {\n  return nullableCompare(year1, year2, function () {\n    return generateConfig.getYear(year1) === generateConfig.getYear(year2);\n  });\n}\nexport function getQuarter(generateConfig, date) {\n  var quota = Math.floor(generateConfig.getMonth(date) / 3);\n  return quota + 1;\n}\nexport function isSameQuarter(generateConfig, quarter1, quarter2) {\n  return nullableCompare(quarter1, quarter2, function () {\n    return isSameYear(generateConfig, quarter1, quarter2) && getQuarter(generateConfig, quarter1) === getQuarter(generateConfig, quarter2);\n  });\n}\nexport function isSameMonth(generateConfig, month1, month2) {\n  return nullableCompare(month1, month2, function () {\n    return isSameYear(generateConfig, month1, month2) && generateConfig.getMonth(month1) === generateConfig.getMonth(month2);\n  });\n}\nexport function isSameDate(generateConfig, date1, date2) {\n  return nullableCompare(date1, date2, function () {\n    return isSameYear(generateConfig, date1, date2) && isSameMonth(generateConfig, date1, date2) && generateConfig.getDate(date1) === generateConfig.getDate(date2);\n  });\n}\nexport function isSameTime(generateConfig, time1, time2) {\n  return nullableCompare(time1, time2, function () {\n    return generateConfig.getHour(time1) === generateConfig.getHour(time2) && generateConfig.getMinute(time1) === generateConfig.getMinute(time2) && generateConfig.getSecond(time1) === generateConfig.getSecond(time2);\n  });\n}\n/**\n * Check if the Date is all the same of timestamp\n */\n\nexport function isSameTimestamp(generateConfig, time1, time2) {\n  return nullableCompare(time1, time2, function () {\n    return isSameDate(generateConfig, time1, time2) && isSameTime(generateConfig, time1, time2) && generateConfig.getMillisecond(time1) === generateConfig.getMillisecond(time2);\n  });\n}\nexport function isSameWeek(generateConfig, locale, date1, date2) {\n  return nullableCompare(date1, date2, function () {\n    var weekStartDate1 = generateConfig.locale.getWeekFirstDate(locale, date1);\n    var weekStartDate2 = generateConfig.locale.getWeekFirstDate(locale, date2);\n    return isSameYear(generateConfig, weekStartDate1, weekStartDate2) && generateConfig.locale.getWeek(locale, date1) === generateConfig.locale.getWeek(locale, date2);\n  });\n}\nexport function isSame(generateConfig, locale, source, target, type) {\n  switch (type) {\n    case 'date':\n      return isSameDate(generateConfig, source, target);\n\n    case 'week':\n      return isSameWeek(generateConfig, locale.locale, source, target);\n\n    case 'month':\n      return isSameMonth(generateConfig, source, target);\n\n    case 'quarter':\n      return isSameQuarter(generateConfig, source, target);\n\n    case 'year':\n      return isSameYear(generateConfig, source, target);\n\n    case 'decade':\n      return isSameDecade(generateConfig, source, target);\n\n    case 'time':\n      return isSameTime(generateConfig, source, target);\n\n    default:\n      return isSameTimestamp(generateConfig, source, target);\n  }\n}\n/** Between in date but not equal of date */\n\nexport function isInRange(generateConfig, startDate, endDate, current) {\n  if (!startDate || !endDate || !current) {\n    return false;\n  }\n\n  return generateConfig.isAfter(current, startDate) && generateConfig.isAfter(endDate, current);\n}\nexport function isSameOrAfter(generateConfig, locale, date1, date2, type) {\n  if (isSame(generateConfig, locale, date1, date2, type)) {\n    return true;\n  }\n\n  return generateConfig.isAfter(date1, date2);\n}\nexport function getWeekStartDate(locale, generateConfig, value) {\n  var weekFirstDay = generateConfig.locale.getWeekFirstDay(locale);\n  var monthStartDate = generateConfig.setDate(value, 1);\n  var startDateWeekDay = generateConfig.getWeekDay(monthStartDate);\n  var alignStartDate = generateConfig.addDate(monthStartDate, weekFirstDay - startDateWeekDay);\n\n  if (generateConfig.getMonth(alignStartDate) === generateConfig.getMonth(value) && generateConfig.getDate(alignStartDate) > 1) {\n    alignStartDate = generateConfig.addDate(alignStartDate, -7);\n  }\n\n  return alignStartDate;\n}\nexport function formatValue(value, _ref) {\n  var generateConfig = _ref.generateConfig,\n      locale = _ref.locale,\n      format = _ref.format;\n\n  if (!value) {\n    return '';\n  }\n\n  return typeof format === 'function' ? format(value) : generateConfig.locale.format(locale.locale, value, format);\n}\n/**\n * Fill the time info into Date if provided.\n */\n\nexport function fillTime(generateConfig, date, time) {\n  var tmpDate = date;\n  var getFn = ['getHour', 'getMinute', 'getSecond', 'getMillisecond'];\n  var setFn = ['setHour', 'setMinute', 'setSecond', 'setMillisecond'];\n  setFn.forEach(function (fn, index) {\n    if (time) {\n      tmpDate = generateConfig[fn](tmpDate, generateConfig[getFn[index]](time));\n    } else {\n      tmpDate = generateConfig[fn](tmpDate, 0);\n    }\n  });\n  return tmpDate;\n}","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-picker/es/utils/dateUtil.js"],"names":["WEEK_DAY_COUNT","nullableCompare","value1","value2","oriCompareFn","isSameDecade","generateConfig","decade1","decade2","num1","Math","floor","getYear","num2","isSameYear","year1","year2","getQuarter","date","quota","getMonth","isSameQuarter","quarter1","quarter2","isSameMonth","month1","month2","isSameDate","date1","date2","getDate","isSameTime","time1","time2","getHour","getMinute","getSecond","isSameTimestamp","getMillisecond","isSameWeek","locale","weekStartDate1","getWeekFirstDate","weekStartDate2","getWeek","isSame","source","target","type","isInRange","startDate","endDate","current","isAfter","isSameOrAfter","getWeekStartDate","value","weekFirstDay","getWeekFirstDay","monthStartDate","setDate","startDateWeekDay","getWeekDay","alignStartDate","addDate","formatValue","_ref","format","fillTime","time","tmpDate","getFn","setFn","forEach","fn","index"],"mappings":"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","sourcesContent":["export var WEEK_DAY_COUNT = 7;\n\n/**\n * Wrap the compare logic.\n * This will compare the each of value is empty first.\n * 1. All is empty, return true.\n * 2. One is empty, return false.\n * 3. return customize compare logic.\n */\nfunction nullableCompare(value1, value2, oriCompareFn) {\n  if (!value1 && !value2 || value1 === value2) {\n    return true;\n  }\n  if (!value1 || !value2) {\n    return false;\n  }\n  return oriCompareFn();\n}\nexport function isSameDecade(generateConfig, decade1, decade2) {\n  return nullableCompare(decade1, decade2, function () {\n    var num1 = Math.floor(generateConfig.getYear(decade1) / 10);\n    var num2 = Math.floor(generateConfig.getYear(decade2) / 10);\n    return num1 === num2;\n  });\n}\nexport function isSameYear(generateConfig, year1, year2) {\n  return nullableCompare(year1, year2, function () {\n    return generateConfig.getYear(year1) === generateConfig.getYear(year2);\n  });\n}\nexport function getQuarter(generateConfig, date) {\n  var quota = Math.floor(generateConfig.getMonth(date) / 3);\n  return quota + 1;\n}\nexport function isSameQuarter(generateConfig, quarter1, quarter2) {\n  return nullableCompare(quarter1, quarter2, function () {\n    return isSameYear(generateConfig, quarter1, quarter2) && getQuarter(generateConfig, quarter1) === getQuarter(generateConfig, quarter2);\n  });\n}\nexport function isSameMonth(generateConfig, month1, month2) {\n  return nullableCompare(month1, month2, function () {\n    return isSameYear(generateConfig, month1, month2) && generateConfig.getMonth(month1) === generateConfig.getMonth(month2);\n  });\n}\nexport function isSameDate(generateConfig, date1, date2) {\n  return nullableCompare(date1, date2, function () {\n    return isSameYear(generateConfig, date1, date2) && isSameMonth(generateConfig, date1, date2) && generateConfig.getDate(date1) === generateConfig.getDate(date2);\n  });\n}\nexport function isSameTime(generateConfig, time1, time2) {\n  return nullableCompare(time1, time2, function () {\n    return generateConfig.getHour(time1) === generateConfig.getHour(time2) && generateConfig.getMinute(time1) === generateConfig.getMinute(time2) && generateConfig.getSecond(time1) === generateConfig.getSecond(time2);\n  });\n}\n\n/**\n * Check if the Date is all the same of timestamp\n */\nexport function isSameTimestamp(generateConfig, time1, time2) {\n  return nullableCompare(time1, time2, function () {\n    return isSameDate(generateConfig, time1, time2) && isSameTime(generateConfig, time1, time2) && generateConfig.getMillisecond(time1) === generateConfig.getMillisecond(time2);\n  });\n}\nexport function isSameWeek(generateConfig, locale, date1, date2) {\n  return nullableCompare(date1, date2, function () {\n    var weekStartDate1 = generateConfig.locale.getWeekFirstDate(locale, date1);\n    var weekStartDate2 = generateConfig.locale.getWeekFirstDate(locale, date2);\n    return isSameYear(generateConfig, weekStartDate1, weekStartDate2) && generateConfig.locale.getWeek(locale, date1) === generateConfig.locale.getWeek(locale, date2);\n  });\n}\nexport function isSame(generateConfig, locale, source, target, type) {\n  switch (type) {\n    case 'date':\n      return isSameDate(generateConfig, source, target);\n    case 'week':\n      return isSameWeek(generateConfig, locale.locale, source, target);\n    case 'month':\n      return isSameMonth(generateConfig, source, target);\n    case 'quarter':\n      return isSameQuarter(generateConfig, source, target);\n    case 'year':\n      return isSameYear(generateConfig, source, target);\n    case 'decade':\n      return isSameDecade(generateConfig, source, target);\n    case 'time':\n      return isSameTime(generateConfig, source, target);\n    default:\n      return isSameTimestamp(generateConfig, source, target);\n  }\n}\n\n/** Between in date but not equal of date */\nexport function isInRange(generateConfig, startDate, endDate, current) {\n  if (!startDate || !endDate || !current) {\n    return false;\n  }\n  return generateConfig.isAfter(current, startDate) && generateConfig.isAfter(endDate, current);\n}\nexport function isSameOrAfter(generateConfig, locale, date1, date2, type) {\n  if (isSame(generateConfig, locale, date1, date2, type)) {\n    return true;\n  }\n  return generateConfig.isAfter(date1, date2);\n}\nexport function getWeekStartDate(locale, generateConfig, value) {\n  var weekFirstDay = generateConfig.locale.getWeekFirstDay(locale);\n  var monthStartDate = generateConfig.setDate(value, 1);\n  var startDateWeekDay = generateConfig.getWeekDay(monthStartDate);\n  var alignStartDate = generateConfig.addDate(monthStartDate, weekFirstDay - startDateWeekDay);\n  if (generateConfig.getMonth(alignStartDate) === generateConfig.getMonth(value) && generateConfig.getDate(alignStartDate) > 1) {\n    alignStartDate = generateConfig.addDate(alignStartDate, -7);\n  }\n  return alignStartDate;\n}\nexport function formatValue(value, _ref) {\n  var generateConfig = _ref.generateConfig,\n    locale = _ref.locale,\n    format = _ref.format;\n  if (!value) {\n    return '';\n  }\n  return typeof format === 'function' ? format(value) : generateConfig.locale.format(locale.locale, value, format);\n}\n\n/**\n * Fill the time info into Date if provided.\n */\nexport function fillTime(generateConfig, date, time) {\n  var tmpDate = date;\n  var getFn = ['getHour', 'getMinute', 'getSecond', 'getMillisecond'];\n  var setFn = ['setHour', 'setMinute', 'setSecond', 'setMillisecond'];\n  setFn.forEach(function (fn, index) {\n    if (time) {\n      tmpDate = generateConfig[fn](tmpDate, generateConfig[getFn[index]](time));\n    } else {\n      tmpDate = generateConfig[fn](tmpDate, 0);\n    }\n  });\n  return tmpDate;\n}"]},"metadata":{},"sourceType":"module"}