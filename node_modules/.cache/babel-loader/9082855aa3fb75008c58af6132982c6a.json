{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport { fillLegacyProps } from \"../utils/legacyUtil\";\nexport default (function (treeData, searchValue, _ref) {\n  var treeNodeFilterProp = _ref.treeNodeFilterProp,\n      filterTreeNode = _ref.filterTreeNode,\n      fieldNames = _ref.fieldNames;\n  var fieldChildren = fieldNames.children;\n  return React.useMemo(function () {\n    if (!searchValue || filterTreeNode === false) {\n      return treeData;\n    }\n\n    var filterOptionFunc;\n\n    if (typeof filterTreeNode === 'function') {\n      filterOptionFunc = filterTreeNode;\n    } else {\n      var upperStr = searchValue.toUpperCase();\n\n      filterOptionFunc = function filterOptionFunc(_, dataNode) {\n        var value = dataNode[treeNodeFilterProp];\n        return String(value).toUpperCase().includes(upperStr);\n      };\n    }\n\n    function dig(list) {\n      var keepAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return list.reduce(function (total, dataNode) {\n        var children = dataNode[fieldChildren];\n        var match = keepAll || filterOptionFunc(searchValue, fillLegacyProps(dataNode));\n        var childList = dig(children || [], match);\n\n        if (match || childList.length) {\n          total.push(_objectSpread(_objectSpread({}, dataNode), {}, _defineProperty({\n            isLeaf: undefined\n          }, fieldChildren, childList)));\n        }\n\n        return total;\n      }, []);\n    }\n\n    return dig(treeData);\n  }, [treeData, searchValue, fieldChildren, treeNodeFilterProp, filterTreeNode]);\n});","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/rc-tree-select/es/hooks/useFilterTreeData.js"],"names":["_defineProperty","_objectSpread","React","fillLegacyProps","treeData","searchValue","_ref","treeNodeFilterProp","filterTreeNode","fieldNames","fieldChildren","children","useMemo","filterOptionFunc","upperStr","toUpperCase","_","dataNode","value","String","includes","dig","list","keepAll","arguments","length","undefined","reduce","total","match","childList","push","isLeaf"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,gBAAgB,UAAUC,QAAV,EAAoBC,WAApB,EAAiCC,IAAjC,EAAuC;AACrD,MAAIC,kBAAkB,GAAGD,IAAI,CAACC,kBAA9B;AAAA,MACEC,cAAc,GAAGF,IAAI,CAACE,cADxB;AAAA,MAEEC,UAAU,GAAGH,IAAI,CAACG,UAFpB;AAGA,MAAIC,aAAa,GAAGD,UAAU,CAACE,QAA/B;AACA,SAAOT,KAAK,CAACU,OAAN,CAAc,YAAY;AAC/B,QAAI,CAACP,WAAD,IAAgBG,cAAc,KAAK,KAAvC,EAA8C;AAC5C,aAAOJ,QAAP;AACD;;AACD,QAAIS,gBAAJ;;AACA,QAAI,OAAOL,cAAP,KAA0B,UAA9B,EAA0C;AACxCK,MAAAA,gBAAgB,GAAGL,cAAnB;AACD,KAFD,MAEO;AACL,UAAIM,QAAQ,GAAGT,WAAW,CAACU,WAAZ,EAAf;;AACAF,MAAAA,gBAAgB,GAAG,SAASA,gBAAT,CAA0BG,CAA1B,EAA6BC,QAA7B,EAAuC;AACxD,YAAIC,KAAK,GAAGD,QAAQ,CAACV,kBAAD,CAApB;AACA,eAAOY,MAAM,CAACD,KAAD,CAAN,CAAcH,WAAd,GAA4BK,QAA5B,CAAqCN,QAArC,CAAP;AACD,OAHD;AAID;;AACD,aAASO,GAAT,CAAaC,IAAb,EAAmB;AACjB,UAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAlF;AACA,aAAOF,IAAI,CAACK,MAAL,CAAY,UAAUC,KAAV,EAAiBX,QAAjB,EAA2B;AAC5C,YAAIN,QAAQ,GAAGM,QAAQ,CAACP,aAAD,CAAvB;AACA,YAAImB,KAAK,GAAGN,OAAO,IAAIV,gBAAgB,CAACR,WAAD,EAAcF,eAAe,CAACc,QAAD,CAA7B,CAAvC;AACA,YAAIa,SAAS,GAAGT,GAAG,CAACV,QAAQ,IAAI,EAAb,EAAiBkB,KAAjB,CAAnB;;AACA,YAAIA,KAAK,IAAIC,SAAS,CAACL,MAAvB,EAA+B;AAC7BG,UAAAA,KAAK,CAACG,IAAN,CAAW9B,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKgB,QAAL,CAAd,EAA8B,EAA9B,EAAkCjB,eAAe,CAAC;AACxEgC,YAAAA,MAAM,EAAEN;AADgE,WAAD,EAEtEhB,aAFsE,EAEvDoB,SAFuD,CAAjD,CAAxB;AAGD;;AACD,eAAOF,KAAP;AACD,OAVM,EAUJ,EAVI,CAAP;AAWD;;AACD,WAAOP,GAAG,CAACjB,QAAD,CAAV;AACD,GA7BM,EA6BJ,CAACA,QAAD,EAAWC,WAAX,EAAwBK,aAAxB,EAAuCH,kBAAvC,EAA2DC,cAA3D,CA7BI,CAAP;AA8BD,CAnCD","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport { fillLegacyProps } from \"../utils/legacyUtil\";\nexport default (function (treeData, searchValue, _ref) {\n  var treeNodeFilterProp = _ref.treeNodeFilterProp,\n    filterTreeNode = _ref.filterTreeNode,\n    fieldNames = _ref.fieldNames;\n  var fieldChildren = fieldNames.children;\n  return React.useMemo(function () {\n    if (!searchValue || filterTreeNode === false) {\n      return treeData;\n    }\n    var filterOptionFunc;\n    if (typeof filterTreeNode === 'function') {\n      filterOptionFunc = filterTreeNode;\n    } else {\n      var upperStr = searchValue.toUpperCase();\n      filterOptionFunc = function filterOptionFunc(_, dataNode) {\n        var value = dataNode[treeNodeFilterProp];\n        return String(value).toUpperCase().includes(upperStr);\n      };\n    }\n    function dig(list) {\n      var keepAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return list.reduce(function (total, dataNode) {\n        var children = dataNode[fieldChildren];\n        var match = keepAll || filterOptionFunc(searchValue, fillLegacyProps(dataNode));\n        var childList = dig(children || [], match);\n        if (match || childList.length) {\n          total.push(_objectSpread(_objectSpread({}, dataNode), {}, _defineProperty({\n            isLeaf: undefined\n          }, fieldChildren, childList)));\n        }\n        return total;\n      }, []);\n    }\n    return dig(treeData);\n  }, [treeData, searchValue, fieldChildren, treeNodeFilterProp, filterTreeNode]);\n});"]},"metadata":{},"sourceType":"module"}