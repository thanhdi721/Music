{"ast":null,"code":"\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useCallback, useContext } from 'react';\nimport classNames from 'classnames';\nimport useMultipleSelect from '../_util/hooks/useMultipleSelect';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { groupDisabledKeysMap, groupKeysMap } from '../_util/transKeys';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport { FormItemInputContext } from '../form/context';\nimport { useLocale } from '../locale';\nimport defaultLocale from '../locale/en_US';\nimport useData from './hooks/useData';\nimport useSelection from './hooks/useSelection';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport useStyle from './style';\n\nconst Transfer = props => {\n  const {\n    dataSource,\n    targetKeys = [],\n    selectedKeys,\n    selectAllLabels = [],\n    operations = [],\n    style = {},\n    listStyle = {},\n    locale = {},\n    titles,\n    disabled,\n    showSearch = false,\n    operationStyle,\n    showSelectAll,\n    oneWay,\n    pagination,\n    status: customStatus,\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    selectionsIcon,\n    filterOption,\n    render,\n    footer,\n    children,\n    rowKey,\n    onScroll,\n    onChange,\n    onSearch,\n    onSelectChange\n  } = props;\n  const {\n    getPrefixCls,\n    renderEmpty,\n    direction: dir,\n    transfer\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('transfer', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls); // Fill record with `key`\n\n  const [mergedDataSource, leftDataSource, rightDataSource] = useData(dataSource, rowKey, targetKeys); // Get direction selected keys\n\n  const [// Keys\n  sourceSelectedKeys, targetSelectedKeys, // Setters\n  setSourceSelectedKeys, setTargetSelectedKeys] = useSelection(leftDataSource, rightDataSource, selectedKeys);\n  const [leftMultipleSelect, updateLeftPrevSelectedIndex] = useMultipleSelect(item => item.key);\n  const [rightMultipleSelect, updateRightPrevSelectedIndex] = useMultipleSelect(item => item.key);\n\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Transfer');\n    process.env.NODE_ENV !== \"production\" ? warning(!pagination || !children, 'usage', '`pagination` not support customize render list.') : void 0;\n  }\n\n  const setStateKeys = useCallback((direction, keys) => {\n    if (direction === 'left') {\n      const nextKeys = typeof keys === 'function' ? keys(sourceSelectedKeys || []) : keys;\n      setSourceSelectedKeys(nextKeys);\n    } else {\n      const nextKeys = typeof keys === 'function' ? keys(targetSelectedKeys || []) : keys;\n      setTargetSelectedKeys(nextKeys);\n    }\n  }, [sourceSelectedKeys, targetSelectedKeys]);\n\n  const setPrevSelectedIndex = (direction, value) => {\n    const isLeftDirection = direction === 'left';\n    const updatePrevSelectedIndex = isLeftDirection ? updateLeftPrevSelectedIndex : updateRightPrevSelectedIndex;\n    updatePrevSelectedIndex(value);\n  };\n\n  const handleSelectChange = useCallback((direction, holder) => {\n    if (direction === 'left') {\n      onSelectChange === null || onSelectChange === void 0 ? void 0 : onSelectChange(holder, targetSelectedKeys);\n    } else {\n      onSelectChange === null || onSelectChange === void 0 ? void 0 : onSelectChange(sourceSelectedKeys, holder);\n    }\n  }, [sourceSelectedKeys, targetSelectedKeys]);\n\n  const getTitles = transferLocale => {\n    var _a;\n\n    return (_a = titles !== null && titles !== void 0 ? titles : transferLocale.titles) !== null && _a !== void 0 ? _a : [];\n  };\n\n  const handleLeftScroll = e => {\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll('left', e);\n  };\n\n  const handleRightScroll = e => {\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll('right', e);\n  };\n\n  const moveTo = direction => {\n    const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n    const dataSourceDisabledKeysMap = groupDisabledKeysMap(mergedDataSource); // filter the disabled options\n\n    const newMoveKeys = moveKeys.filter(key => !dataSourceDisabledKeysMap.has(key));\n    const newMoveKeysMap = groupKeysMap(newMoveKeys); // move items to target box\n\n    const newTargetKeys = direction === 'right' ? newMoveKeys.concat(targetKeys) : targetKeys.filter(targetKey => !newMoveKeysMap.has(targetKey)); // empty checked keys\n\n    const oppositeDirection = direction === 'right' ? 'left' : 'right';\n    setStateKeys(oppositeDirection, []);\n    handleSelectChange(oppositeDirection, []);\n    onChange === null || onChange === void 0 ? void 0 : onChange(newTargetKeys, direction, newMoveKeys);\n  };\n\n  const moveToLeft = () => {\n    moveTo('left');\n    setPrevSelectedIndex('left', null);\n  };\n\n  const moveToRight = () => {\n    moveTo('right');\n    setPrevSelectedIndex('right', null);\n  };\n\n  const onItemSelectAll = (direction, keys, checkAll) => {\n    setStateKeys(direction, prevKeys => {\n      let mergedCheckedKeys = [];\n\n      if (checkAll === 'replace') {\n        mergedCheckedKeys = keys;\n      } else if (checkAll) {\n        // Merge current keys with origin key\n        mergedCheckedKeys = Array.from(new Set([].concat(_toConsumableArray(prevKeys), _toConsumableArray(keys))));\n      } else {\n        const selectedKeysMap = groupKeysMap(keys); // Remove current keys from origin keys\n\n        mergedCheckedKeys = prevKeys.filter(key => !selectedKeysMap.has(key));\n      }\n\n      handleSelectChange(direction, mergedCheckedKeys);\n      return mergedCheckedKeys;\n    });\n    setPrevSelectedIndex(direction, null);\n  };\n\n  const onLeftItemSelectAll = (keys, checkAll) => {\n    onItemSelectAll('left', keys, checkAll);\n  };\n\n  const onRightItemSelectAll = (keys, checkAll) => {\n    onItemSelectAll('right', keys, checkAll);\n  };\n\n  const leftFilter = e => onSearch === null || onSearch === void 0 ? void 0 : onSearch('left', e.target.value);\n\n  const rightFilter = e => onSearch === null || onSearch === void 0 ? void 0 : onSearch('right', e.target.value);\n\n  const handleLeftClear = () => onSearch === null || onSearch === void 0 ? void 0 : onSearch('left', '');\n\n  const handleRightClear = () => onSearch === null || onSearch === void 0 ? void 0 : onSearch('right', '');\n\n  const handleSingleSelect = (direction, holder, selectedKey, checked, currentSelectedIndex) => {\n    const isSelected = holder.has(selectedKey);\n\n    if (isSelected) {\n      holder.delete(selectedKey);\n      setPrevSelectedIndex(direction, null);\n    }\n\n    if (checked) {\n      holder.add(selectedKey);\n      setPrevSelectedIndex(direction, currentSelectedIndex);\n    }\n  };\n\n  const handleMultipleSelect = (direction, data, holder, currentSelectedIndex) => {\n    const isLeftDirection = direction === 'left';\n    const multipleSelect = isLeftDirection ? leftMultipleSelect : rightMultipleSelect;\n    multipleSelect(currentSelectedIndex, data, holder);\n  };\n\n  const onItemSelect = (direction, selectedKey, checked, multiple) => {\n    const isLeftDirection = direction === 'left';\n\n    const holder = _toConsumableArray(isLeftDirection ? sourceSelectedKeys : targetSelectedKeys);\n\n    const holderSet = new Set(holder);\n\n    const data = _toConsumableArray(isLeftDirection ? leftDataSource : rightDataSource).filter(item => !item.disabled);\n\n    const currentSelectedIndex = data.findIndex(item => item.key === selectedKey); // multiple select by hold down the shift key\n\n    if (multiple && holder.length > 0) {\n      handleMultipleSelect(direction, data, holderSet, currentSelectedIndex);\n    } else {\n      handleSingleSelect(direction, holderSet, selectedKey, checked, currentSelectedIndex);\n    }\n\n    const holderArr = Array.from(holderSet);\n    handleSelectChange(direction, holderArr);\n\n    if (!props.selectedKeys) {\n      setStateKeys(direction, holderArr);\n    }\n  };\n\n  const onLeftItemSelect = (selectedKey, checked, e) => {\n    onItemSelect('left', selectedKey, checked, e === null || e === void 0 ? void 0 : e.shiftKey);\n  };\n\n  const onRightItemSelect = (selectedKey, checked, e) => {\n    onItemSelect('right', selectedKey, checked, e === null || e === void 0 ? void 0 : e.shiftKey);\n  };\n\n  const onRightItemRemove = keys => {\n    setStateKeys('right', []);\n    onChange === null || onChange === void 0 ? void 0 : onChange(targetKeys.filter(key => !keys.includes(key)), 'left', _toConsumableArray(keys));\n  };\n\n  const handleListStyle = direction => {\n    if (typeof listStyle === 'function') {\n      return listStyle({\n        direction\n      });\n    }\n\n    return listStyle || {};\n  };\n\n  const formItemContext = useContext(FormItemInputContext);\n  const {\n    hasFeedback,\n    status\n  } = formItemContext;\n\n  const getLocale = transferLocale => Object.assign(Object.assign(Object.assign({}, transferLocale), {\n    notFoundContent: (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Transfer')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n      componentName: \"Transfer\"\n    })\n  }), locale);\n\n  const mergedStatus = getMergedStatus(status, customStatus);\n  const mergedPagination = !children && pagination;\n  const leftActive = targetSelectedKeys.length > 0;\n  const rightActive = sourceSelectedKeys.length > 0;\n  const cls = classNames(prefixCls, {\n    [`${prefixCls}-disabled`]: disabled,\n    [`${prefixCls}-customize-list`]: !!children,\n    [`${prefixCls}-rtl`]: dir === 'rtl'\n  }, getStatusClassNames(prefixCls, mergedStatus, hasFeedback), transfer === null || transfer === void 0 ? void 0 : transfer.className, className, rootClassName, hashId, cssVarCls);\n  const [contextLocale] = useLocale('Transfer', defaultLocale.Transfer);\n  const listLocale = getLocale(contextLocale);\n  const [leftTitle, rightTitle] = getTitles(listLocale);\n  const mergedSelectionsIcon = selectionsIcon !== null && selectionsIcon !== void 0 ? selectionsIcon : transfer === null || transfer === void 0 ? void 0 : transfer.selectionsIcon;\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: Object.assign(Object.assign({}, transfer === null || transfer === void 0 ? void 0 : transfer.style), style)\n  }, /*#__PURE__*/React.createElement(List, Object.assign({\n    prefixCls: `${prefixCls}-list`,\n    titleText: leftTitle,\n    dataSource: leftDataSource,\n    filterOption: filterOption,\n    style: handleListStyle('left'),\n    checkedKeys: sourceSelectedKeys,\n    handleFilter: leftFilter,\n    handleClear: handleLeftClear,\n    onItemSelect: onLeftItemSelect,\n    onItemSelectAll: onLeftItemSelectAll,\n    render: render,\n    showSearch: showSearch,\n    renderList: children,\n    footer: footer,\n    onScroll: handleLeftScroll,\n    disabled: disabled,\n    direction: dir === 'rtl' ? 'right' : 'left',\n    showSelectAll: showSelectAll,\n    selectAllLabel: selectAllLabels[0],\n    pagination: mergedPagination,\n    selectionsIcon: mergedSelectionsIcon\n  }, listLocale)), /*#__PURE__*/React.createElement(Operation, {\n    className: `${prefixCls}-operation`,\n    rightActive: rightActive,\n    rightArrowText: operations[0],\n    moveToRight: moveToRight,\n    leftActive: leftActive,\n    leftArrowText: operations[1],\n    moveToLeft: moveToLeft,\n    style: operationStyle,\n    disabled: disabled,\n    direction: dir,\n    oneWay: oneWay\n  }), /*#__PURE__*/React.createElement(List, Object.assign({\n    prefixCls: `${prefixCls}-list`,\n    titleText: rightTitle,\n    dataSource: rightDataSource,\n    filterOption: filterOption,\n    style: handleListStyle('right'),\n    checkedKeys: targetSelectedKeys,\n    handleFilter: rightFilter,\n    handleClear: handleRightClear,\n    onItemSelect: onRightItemSelect,\n    onItemSelectAll: onRightItemSelectAll,\n    onItemRemove: onRightItemRemove,\n    render: render,\n    showSearch: showSearch,\n    renderList: children,\n    footer: footer,\n    onScroll: handleRightScroll,\n    disabled: disabled,\n    direction: dir === 'rtl' ? 'left' : 'right',\n    showSelectAll: showSelectAll,\n    selectAllLabel: selectAllLabels[1],\n    showRemove: oneWay,\n    pagination: mergedPagination,\n    selectionsIcon: mergedSelectionsIcon\n  }, listLocale))));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Transfer.displayName = 'Transfer';\n}\n\nTransfer.List = List;\nTransfer.Search = Search;\nTransfer.Operation = Operation;\nexport default Transfer;","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/transfer/index.js"],"names":["_toConsumableArray","React","useCallback","useContext","classNames","useMultipleSelect","getMergedStatus","getStatusClassNames","groupDisabledKeysMap","groupKeysMap","devUseWarning","ConfigContext","DefaultRenderEmpty","FormItemInputContext","useLocale","defaultLocale","useData","useSelection","List","Operation","Search","useStyle","Transfer","props","dataSource","targetKeys","selectedKeys","selectAllLabels","operations","style","listStyle","locale","titles","disabled","showSearch","operationStyle","showSelectAll","oneWay","pagination","status","customStatus","prefixCls","customizePrefixCls","className","rootClassName","selectionsIcon","filterOption","render","footer","children","rowKey","onScroll","onChange","onSearch","onSelectChange","getPrefixCls","renderEmpty","direction","dir","transfer","wrapCSSVar","hashId","cssVarCls","mergedDataSource","leftDataSource","rightDataSource","sourceSelectedKeys","targetSelectedKeys","setSourceSelectedKeys","setTargetSelectedKeys","leftMultipleSelect","updateLeftPrevSelectedIndex","item","key","rightMultipleSelect","updateRightPrevSelectedIndex","process","env","NODE_ENV","warning","setStateKeys","keys","nextKeys","setPrevSelectedIndex","value","isLeftDirection","updatePrevSelectedIndex","handleSelectChange","holder","getTitles","transferLocale","_a","handleLeftScroll","e","handleRightScroll","moveTo","moveKeys","dataSourceDisabledKeysMap","newMoveKeys","filter","has","newMoveKeysMap","newTargetKeys","concat","targetKey","oppositeDirection","moveToLeft","moveToRight","onItemSelectAll","checkAll","prevKeys","mergedCheckedKeys","Array","from","Set","selectedKeysMap","onLeftItemSelectAll","onRightItemSelectAll","leftFilter","target","rightFilter","handleLeftClear","handleRightClear","handleSingleSelect","selectedKey","checked","currentSelectedIndex","isSelected","delete","add","handleMultipleSelect","data","multipleSelect","onItemSelect","multiple","holderSet","findIndex","length","holderArr","onLeftItemSelect","shiftKey","onRightItemSelect","onRightItemRemove","includes","handleListStyle","formItemContext","hasFeedback","getLocale","Object","assign","notFoundContent","createElement","componentName","mergedStatus","mergedPagination","leftActive","rightActive","cls","contextLocale","listLocale","leftTitle","rightTitle","mergedSelectionsIcon","titleText","checkedKeys","handleFilter","handleClear","renderList","selectAllLabel","rightArrowText","leftArrowText","onItemRemove","showRemove","displayName"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useCallback, useContext } from 'react';\nimport classNames from 'classnames';\nimport useMultipleSelect from '../_util/hooks/useMultipleSelect';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { groupDisabledKeysMap, groupKeysMap } from '../_util/transKeys';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport { FormItemInputContext } from '../form/context';\nimport { useLocale } from '../locale';\nimport defaultLocale from '../locale/en_US';\nimport useData from './hooks/useData';\nimport useSelection from './hooks/useSelection';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport useStyle from './style';\nconst Transfer = props => {\n  const {\n    dataSource,\n    targetKeys = [],\n    selectedKeys,\n    selectAllLabels = [],\n    operations = [],\n    style = {},\n    listStyle = {},\n    locale = {},\n    titles,\n    disabled,\n    showSearch = false,\n    operationStyle,\n    showSelectAll,\n    oneWay,\n    pagination,\n    status: customStatus,\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    selectionsIcon,\n    filterOption,\n    render,\n    footer,\n    children,\n    rowKey,\n    onScroll,\n    onChange,\n    onSearch,\n    onSelectChange\n  } = props;\n  const {\n    getPrefixCls,\n    renderEmpty,\n    direction: dir,\n    transfer\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('transfer', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  // Fill record with `key`\n  const [mergedDataSource, leftDataSource, rightDataSource] = useData(dataSource, rowKey, targetKeys);\n  // Get direction selected keys\n  const [\n  // Keys\n  sourceSelectedKeys, targetSelectedKeys,\n  // Setters\n  setSourceSelectedKeys, setTargetSelectedKeys] = useSelection(leftDataSource, rightDataSource, selectedKeys);\n  const [leftMultipleSelect, updateLeftPrevSelectedIndex] = useMultipleSelect(item => item.key);\n  const [rightMultipleSelect, updateRightPrevSelectedIndex] = useMultipleSelect(item => item.key);\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Transfer');\n    process.env.NODE_ENV !== \"production\" ? warning(!pagination || !children, 'usage', '`pagination` not support customize render list.') : void 0;\n  }\n  const setStateKeys = useCallback((direction, keys) => {\n    if (direction === 'left') {\n      const nextKeys = typeof keys === 'function' ? keys(sourceSelectedKeys || []) : keys;\n      setSourceSelectedKeys(nextKeys);\n    } else {\n      const nextKeys = typeof keys === 'function' ? keys(targetSelectedKeys || []) : keys;\n      setTargetSelectedKeys(nextKeys);\n    }\n  }, [sourceSelectedKeys, targetSelectedKeys]);\n  const setPrevSelectedIndex = (direction, value) => {\n    const isLeftDirection = direction === 'left';\n    const updatePrevSelectedIndex = isLeftDirection ? updateLeftPrevSelectedIndex : updateRightPrevSelectedIndex;\n    updatePrevSelectedIndex(value);\n  };\n  const handleSelectChange = useCallback((direction, holder) => {\n    if (direction === 'left') {\n      onSelectChange === null || onSelectChange === void 0 ? void 0 : onSelectChange(holder, targetSelectedKeys);\n    } else {\n      onSelectChange === null || onSelectChange === void 0 ? void 0 : onSelectChange(sourceSelectedKeys, holder);\n    }\n  }, [sourceSelectedKeys, targetSelectedKeys]);\n  const getTitles = transferLocale => {\n    var _a;\n    return (_a = titles !== null && titles !== void 0 ? titles : transferLocale.titles) !== null && _a !== void 0 ? _a : [];\n  };\n  const handleLeftScroll = e => {\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll('left', e);\n  };\n  const handleRightScroll = e => {\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll('right', e);\n  };\n  const moveTo = direction => {\n    const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n    const dataSourceDisabledKeysMap = groupDisabledKeysMap(mergedDataSource);\n    // filter the disabled options\n    const newMoveKeys = moveKeys.filter(key => !dataSourceDisabledKeysMap.has(key));\n    const newMoveKeysMap = groupKeysMap(newMoveKeys);\n    // move items to target box\n    const newTargetKeys = direction === 'right' ? newMoveKeys.concat(targetKeys) : targetKeys.filter(targetKey => !newMoveKeysMap.has(targetKey));\n    // empty checked keys\n    const oppositeDirection = direction === 'right' ? 'left' : 'right';\n    setStateKeys(oppositeDirection, []);\n    handleSelectChange(oppositeDirection, []);\n    onChange === null || onChange === void 0 ? void 0 : onChange(newTargetKeys, direction, newMoveKeys);\n  };\n  const moveToLeft = () => {\n    moveTo('left');\n    setPrevSelectedIndex('left', null);\n  };\n  const moveToRight = () => {\n    moveTo('right');\n    setPrevSelectedIndex('right', null);\n  };\n  const onItemSelectAll = (direction, keys, checkAll) => {\n    setStateKeys(direction, prevKeys => {\n      let mergedCheckedKeys = [];\n      if (checkAll === 'replace') {\n        mergedCheckedKeys = keys;\n      } else if (checkAll) {\n        // Merge current keys with origin key\n        mergedCheckedKeys = Array.from(new Set([].concat(_toConsumableArray(prevKeys), _toConsumableArray(keys))));\n      } else {\n        const selectedKeysMap = groupKeysMap(keys);\n        // Remove current keys from origin keys\n        mergedCheckedKeys = prevKeys.filter(key => !selectedKeysMap.has(key));\n      }\n      handleSelectChange(direction, mergedCheckedKeys);\n      return mergedCheckedKeys;\n    });\n    setPrevSelectedIndex(direction, null);\n  };\n  const onLeftItemSelectAll = (keys, checkAll) => {\n    onItemSelectAll('left', keys, checkAll);\n  };\n  const onRightItemSelectAll = (keys, checkAll) => {\n    onItemSelectAll('right', keys, checkAll);\n  };\n  const leftFilter = e => onSearch === null || onSearch === void 0 ? void 0 : onSearch('left', e.target.value);\n  const rightFilter = e => onSearch === null || onSearch === void 0 ? void 0 : onSearch('right', e.target.value);\n  const handleLeftClear = () => onSearch === null || onSearch === void 0 ? void 0 : onSearch('left', '');\n  const handleRightClear = () => onSearch === null || onSearch === void 0 ? void 0 : onSearch('right', '');\n  const handleSingleSelect = (direction, holder, selectedKey, checked, currentSelectedIndex) => {\n    const isSelected = holder.has(selectedKey);\n    if (isSelected) {\n      holder.delete(selectedKey);\n      setPrevSelectedIndex(direction, null);\n    }\n    if (checked) {\n      holder.add(selectedKey);\n      setPrevSelectedIndex(direction, currentSelectedIndex);\n    }\n  };\n  const handleMultipleSelect = (direction, data, holder, currentSelectedIndex) => {\n    const isLeftDirection = direction === 'left';\n    const multipleSelect = isLeftDirection ? leftMultipleSelect : rightMultipleSelect;\n    multipleSelect(currentSelectedIndex, data, holder);\n  };\n  const onItemSelect = (direction, selectedKey, checked, multiple) => {\n    const isLeftDirection = direction === 'left';\n    const holder = _toConsumableArray(isLeftDirection ? sourceSelectedKeys : targetSelectedKeys);\n    const holderSet = new Set(holder);\n    const data = _toConsumableArray(isLeftDirection ? leftDataSource : rightDataSource).filter(item => !item.disabled);\n    const currentSelectedIndex = data.findIndex(item => item.key === selectedKey);\n    // multiple select by hold down the shift key\n    if (multiple && holder.length > 0) {\n      handleMultipleSelect(direction, data, holderSet, currentSelectedIndex);\n    } else {\n      handleSingleSelect(direction, holderSet, selectedKey, checked, currentSelectedIndex);\n    }\n    const holderArr = Array.from(holderSet);\n    handleSelectChange(direction, holderArr);\n    if (!props.selectedKeys) {\n      setStateKeys(direction, holderArr);\n    }\n  };\n  const onLeftItemSelect = (selectedKey, checked, e) => {\n    onItemSelect('left', selectedKey, checked, e === null || e === void 0 ? void 0 : e.shiftKey);\n  };\n  const onRightItemSelect = (selectedKey, checked, e) => {\n    onItemSelect('right', selectedKey, checked, e === null || e === void 0 ? void 0 : e.shiftKey);\n  };\n  const onRightItemRemove = keys => {\n    setStateKeys('right', []);\n    onChange === null || onChange === void 0 ? void 0 : onChange(targetKeys.filter(key => !keys.includes(key)), 'left', _toConsumableArray(keys));\n  };\n  const handleListStyle = direction => {\n    if (typeof listStyle === 'function') {\n      return listStyle({\n        direction\n      });\n    }\n    return listStyle || {};\n  };\n  const formItemContext = useContext(FormItemInputContext);\n  const {\n    hasFeedback,\n    status\n  } = formItemContext;\n  const getLocale = transferLocale => Object.assign(Object.assign(Object.assign({}, transferLocale), {\n    notFoundContent: (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Transfer')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n      componentName: \"Transfer\"\n    })\n  }), locale);\n  const mergedStatus = getMergedStatus(status, customStatus);\n  const mergedPagination = !children && pagination;\n  const leftActive = targetSelectedKeys.length > 0;\n  const rightActive = sourceSelectedKeys.length > 0;\n  const cls = classNames(prefixCls, {\n    [`${prefixCls}-disabled`]: disabled,\n    [`${prefixCls}-customize-list`]: !!children,\n    [`${prefixCls}-rtl`]: dir === 'rtl'\n  }, getStatusClassNames(prefixCls, mergedStatus, hasFeedback), transfer === null || transfer === void 0 ? void 0 : transfer.className, className, rootClassName, hashId, cssVarCls);\n  const [contextLocale] = useLocale('Transfer', defaultLocale.Transfer);\n  const listLocale = getLocale(contextLocale);\n  const [leftTitle, rightTitle] = getTitles(listLocale);\n  const mergedSelectionsIcon = selectionsIcon !== null && selectionsIcon !== void 0 ? selectionsIcon : transfer === null || transfer === void 0 ? void 0 : transfer.selectionsIcon;\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: Object.assign(Object.assign({}, transfer === null || transfer === void 0 ? void 0 : transfer.style), style)\n  }, /*#__PURE__*/React.createElement(List, Object.assign({\n    prefixCls: `${prefixCls}-list`,\n    titleText: leftTitle,\n    dataSource: leftDataSource,\n    filterOption: filterOption,\n    style: handleListStyle('left'),\n    checkedKeys: sourceSelectedKeys,\n    handleFilter: leftFilter,\n    handleClear: handleLeftClear,\n    onItemSelect: onLeftItemSelect,\n    onItemSelectAll: onLeftItemSelectAll,\n    render: render,\n    showSearch: showSearch,\n    renderList: children,\n    footer: footer,\n    onScroll: handleLeftScroll,\n    disabled: disabled,\n    direction: dir === 'rtl' ? 'right' : 'left',\n    showSelectAll: showSelectAll,\n    selectAllLabel: selectAllLabels[0],\n    pagination: mergedPagination,\n    selectionsIcon: mergedSelectionsIcon\n  }, listLocale)), /*#__PURE__*/React.createElement(Operation, {\n    className: `${prefixCls}-operation`,\n    rightActive: rightActive,\n    rightArrowText: operations[0],\n    moveToRight: moveToRight,\n    leftActive: leftActive,\n    leftArrowText: operations[1],\n    moveToLeft: moveToLeft,\n    style: operationStyle,\n    disabled: disabled,\n    direction: dir,\n    oneWay: oneWay\n  }), /*#__PURE__*/React.createElement(List, Object.assign({\n    prefixCls: `${prefixCls}-list`,\n    titleText: rightTitle,\n    dataSource: rightDataSource,\n    filterOption: filterOption,\n    style: handleListStyle('right'),\n    checkedKeys: targetSelectedKeys,\n    handleFilter: rightFilter,\n    handleClear: handleRightClear,\n    onItemSelect: onRightItemSelect,\n    onItemSelectAll: onRightItemSelectAll,\n    onItemRemove: onRightItemRemove,\n    render: render,\n    showSearch: showSearch,\n    renderList: children,\n    footer: footer,\n    onScroll: handleRightScroll,\n    disabled: disabled,\n    direction: dir === 'rtl' ? 'left' : 'right',\n    showSelectAll: showSelectAll,\n    selectAllLabel: selectAllLabels[1],\n    showRemove: oneWay,\n    pagination: mergedPagination,\n    selectionsIcon: mergedSelectionsIcon\n  }, listLocale))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Transfer.displayName = 'Transfer';\n}\nTransfer.List = List;\nTransfer.Search = Search;\nTransfer.Operation = Operation;\nexport default Transfer;"]},"metadata":{},"sourceType":"module"}