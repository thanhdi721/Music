{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { isPresetColor } from '../_util/colors';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style/ribbon';\n\nconst Ribbon = props => {\n  const {\n    className,\n    prefixCls: customizePrefixCls,\n    style,\n    color,\n    children,\n    text,\n    placement = 'end',\n    rootClassName\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  const wrapperCls = `${prefixCls}-wrapper`;\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, wrapperCls);\n  const colorInPreset = isPresetColor(color, false);\n  const ribbonCls = classNames(prefixCls, `${prefixCls}-placement-${placement}`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-color-${color}`]: colorInPreset\n  }, className);\n  const colorStyle = {};\n  const cornerColorStyle = {};\n\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(wrapperCls, rootClassName, hashId, cssVarCls)\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(ribbonCls, hashId),\n    style: Object.assign(Object.assign({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-text`\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-corner`,\n    style: cornerColorStyle\n  }))));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Ribbon.displayName = 'Ribbon';\n}\n\nexport default Ribbon;","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/badge/Ribbon.js"],"names":["React","classNames","isPresetColor","ConfigContext","useStyle","Ribbon","props","className","prefixCls","customizePrefixCls","style","color","children","text","placement","rootClassName","getPrefixCls","direction","useContext","wrapperCls","wrapCSSVar","hashId","cssVarCls","colorInPreset","ribbonCls","colorStyle","cornerColorStyle","background","createElement","Object","assign","process","env","NODE_ENV","displayName"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AACA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,SAAS,EAAEC,kBAFP;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,IANI;AAOJC,IAAAA,SAAS,GAAG,KAPR;AAQJC,IAAAA;AARI,MASFT,KATJ;AAUA,QAAM;AACJU,IAAAA,YADI;AAEJC,IAAAA;AAFI,MAGFjB,KAAK,CAACkB,UAAN,CAAiBf,aAAjB,CAHJ;AAIA,QAAMK,SAAS,GAAGQ,YAAY,CAAC,QAAD,EAAWP,kBAAX,CAA9B;AACA,QAAMU,UAAU,GAAI,GAAEX,SAAU,UAAhC;AACA,QAAM,CAACY,UAAD,EAAaC,MAAb,EAAqBC,SAArB,IAAkClB,QAAQ,CAACI,SAAD,EAAYW,UAAZ,CAAhD;AACA,QAAMI,aAAa,GAAGrB,aAAa,CAACS,KAAD,EAAQ,KAAR,CAAnC;AACA,QAAMa,SAAS,GAAGvB,UAAU,CAACO,SAAD,EAAa,GAAEA,SAAU,cAAaM,SAAU,EAAhD,EAAmD;AAC7E,KAAE,GAAEN,SAAU,MAAd,GAAsBS,SAAS,KAAK,KADyC;AAE7E,KAAE,GAAET,SAAU,UAASG,KAAM,EAA7B,GAAiCY;AAF4C,GAAnD,EAGzBhB,SAHyB,CAA5B;AAIA,QAAMkB,UAAU,GAAG,EAAnB;AACA,QAAMC,gBAAgB,GAAG,EAAzB;;AACA,MAAIf,KAAK,IAAI,CAACY,aAAd,EAA6B;AAC3BE,IAAAA,UAAU,CAACE,UAAX,GAAwBhB,KAAxB;AACAe,IAAAA,gBAAgB,CAACf,KAAjB,GAAyBA,KAAzB;AACD;;AACD,SAAOS,UAAU,EAAE,aAAapB,KAAK,CAAC4B,aAAN,CAAoB,KAApB,EAA2B;AACzDrB,IAAAA,SAAS,EAAEN,UAAU,CAACkB,UAAD,EAAaJ,aAAb,EAA4BM,MAA5B,EAAoCC,SAApC;AADoC,GAA3B,EAE7BV,QAF6B,EAEnB,aAAaZ,KAAK,CAAC4B,aAAN,CAAoB,KAApB,EAA2B;AACnDrB,IAAAA,SAAS,EAAEN,UAAU,CAACuB,SAAD,EAAYH,MAAZ,CAD8B;AAEnDX,IAAAA,KAAK,EAAEmB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,UAAlB,CAAd,EAA6Cf,KAA7C;AAF4C,GAA3B,EAGvB,aAAaV,KAAK,CAAC4B,aAAN,CAAoB,MAApB,EAA4B;AAC1CrB,IAAAA,SAAS,EAAG,GAAEC,SAAU;AADkB,GAA5B,EAEbK,IAFa,CAHU,EAKhB,aAAab,KAAK,CAAC4B,aAAN,CAAoB,KAApB,EAA2B;AAChDrB,IAAAA,SAAS,EAAG,GAAEC,SAAU,SADwB;AAEhDE,IAAAA,KAAK,EAAEgB;AAFyC,GAA3B,CALG,CAFM,CAAf,CAAjB;AAWD,CAxCD;;AAyCA,IAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC5B,EAAAA,MAAM,CAAC6B,WAAP,GAAqB,QAArB;AACD;;AACD,eAAe7B,MAAf","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { isPresetColor } from '../_util/colors';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style/ribbon';\nconst Ribbon = props => {\n  const {\n    className,\n    prefixCls: customizePrefixCls,\n    style,\n    color,\n    children,\n    text,\n    placement = 'end',\n    rootClassName\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  const wrapperCls = `${prefixCls}-wrapper`;\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, wrapperCls);\n  const colorInPreset = isPresetColor(color, false);\n  const ribbonCls = classNames(prefixCls, `${prefixCls}-placement-${placement}`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-color-${color}`]: colorInPreset\n  }, className);\n  const colorStyle = {};\n  const cornerColorStyle = {};\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(wrapperCls, rootClassName, hashId, cssVarCls)\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(ribbonCls, hashId),\n    style: Object.assign(Object.assign({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-text`\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-corner`,\n    style: cornerColorStyle\n  }))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Ribbon.displayName = 'Ribbon';\n}\nexport default Ribbon;"]},"metadata":{},"sourceType":"module"}