{"ast":null,"code":"import { generate } from '@ant-design/colors';\nimport { defaultPresetColors } from '../seed';\nimport genColorMapToken from '../shared/genColorMapToken';\nimport genCommonMapToken from '../shared/genCommonMapToken';\nimport genControlHeight from '../shared/genControlHeight';\nimport genFontMapToken from '../shared/genFontMapToken';\nimport genSizeMapToken from '../shared/genSizeMapToken';\nimport { generateColorPalettes, generateNeutralColorPalettes } from './colors';\nexport default function derivative(token) {\n  const colorPalettes = Object.keys(defaultPresetColors).map(colorKey => {\n    const colors = generate(token[colorKey]);\n    return new Array(10).fill(1).reduce((prev, _, i) => {\n      prev[`${colorKey}-${i + 1}`] = colors[i];\n      prev[`${colorKey}${i + 1}`] = colors[i];\n      return prev;\n    }, {});\n  }).reduce((prev, cur) => {\n    prev = Object.assign(Object.assign({}, prev), cur);\n    return prev;\n  }, {});\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, token), colorPalettes), genColorMapToken(token, {\n    generateColorPalettes,\n    generateNeutralColorPalettes\n  })), genFontMapToken(token.fontSize)), genSizeMapToken(token)), genControlHeight(token)), genCommonMapToken(token));\n}","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/theme/themes/default/index.js"],"names":["generate","defaultPresetColors","genColorMapToken","genCommonMapToken","genControlHeight","genFontMapToken","genSizeMapToken","generateColorPalettes","generateNeutralColorPalettes","derivative","token","colorPalettes","Object","keys","map","colorKey","colors","Array","fill","reduce","prev","_","i","cur","assign","fontSize"],"mappings":"AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,SAASC,mBAAT,QAAoC,SAApC;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,SAASC,qBAAT,EAAgCC,4BAAhC,QAAoE,UAApE;AACA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACxC,QAAMC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYZ,mBAAZ,EAAiCa,GAAjC,CAAqCC,QAAQ,IAAI;AACrE,UAAMC,MAAM,GAAGhB,QAAQ,CAACU,KAAK,CAACK,QAAD,CAAN,CAAvB;AACA,WAAO,IAAIE,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,EAAsBC,MAAtB,CAA6B,CAACC,IAAD,EAAOC,CAAP,EAAUC,CAAV,KAAgB;AAClDF,MAAAA,IAAI,CAAE,GAAEL,QAAS,IAAGO,CAAC,GAAG,CAAE,EAAtB,CAAJ,GAA+BN,MAAM,CAACM,CAAD,CAArC;AACAF,MAAAA,IAAI,CAAE,GAAEL,QAAS,GAAEO,CAAC,GAAG,CAAE,EAArB,CAAJ,GAA8BN,MAAM,CAACM,CAAD,CAApC;AACA,aAAOF,IAAP;AACD,KAJM,EAIJ,EAJI,CAAP;AAKD,GAPqB,EAOnBD,MAPmB,CAOZ,CAACC,IAAD,EAAOG,GAAP,KAAe;AACvBH,IAAAA,IAAI,GAAGR,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,CAAd,EAAuCG,GAAvC,CAAP;AACA,WAAOH,IAAP;AACD,GAVqB,EAUnB,EAVmB,CAAtB;AAWA,SAAOR,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAcZ,MAAM,CAACY,MAAP,CAAc,EAAd,EAAkBd,KAAlB,CAAd,EAAwCC,aAAxC,CAAd,EAAsET,gBAAgB,CAACQ,KAAD,EAAQ;AAC3JH,IAAAA,qBAD2J;AAE3JC,IAAAA;AAF2J,GAAR,CAAtF,CAAd,EAG5CH,eAAe,CAACK,KAAK,CAACe,QAAP,CAH6B,CAAd,EAGInB,eAAe,CAACI,KAAD,CAHnB,CAAd,EAG2CN,gBAAgB,CAACM,KAAD,CAH3D,CAAd,EAGmFP,iBAAiB,CAACO,KAAD,CAHpG,CAAP;AAID","sourcesContent":["import { generate } from '@ant-design/colors';\nimport { defaultPresetColors } from '../seed';\nimport genColorMapToken from '../shared/genColorMapToken';\nimport genCommonMapToken from '../shared/genCommonMapToken';\nimport genControlHeight from '../shared/genControlHeight';\nimport genFontMapToken from '../shared/genFontMapToken';\nimport genSizeMapToken from '../shared/genSizeMapToken';\nimport { generateColorPalettes, generateNeutralColorPalettes } from './colors';\nexport default function derivative(token) {\n  const colorPalettes = Object.keys(defaultPresetColors).map(colorKey => {\n    const colors = generate(token[colorKey]);\n    return new Array(10).fill(1).reduce((prev, _, i) => {\n      prev[`${colorKey}-${i + 1}`] = colors[i];\n      prev[`${colorKey}${i + 1}`] = colors[i];\n      return prev;\n    }, {});\n  }).reduce((prev, cur) => {\n    prev = Object.assign(Object.assign({}, prev), cur);\n    return prev;\n  }, {});\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, token), colorPalettes), genColorMapToken(token, {\n    generateColorPalettes,\n    generateNeutralColorPalettes\n  })), genFontMapToken(token.fontSize)), genSizeMapToken(token)), genControlHeight(token)), genCommonMapToken(token));\n}"]},"metadata":{},"sourceType":"module"}