{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"defaultValue\", \"value\", \"onFocus\", \"onBlur\", \"onChange\", \"allowClear\", \"maxLength\", \"onCompositionStart\", \"onCompositionEnd\", \"suffix\", \"prefixCls\", \"showCount\", \"count\", \"className\", \"style\", \"disabled\", \"hidden\", \"classNames\", \"styles\", \"onResize\"];\nimport clsx from 'classnames';\nimport { BaseInput } from 'rc-input';\nimport useCount from \"rc-input/es/hooks/useCount\";\nimport { resolveOnChange } from \"rc-input/es/utils/commonUtils\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useEffect, useImperativeHandle, useRef } from 'react';\nimport ResizableTextArea from \"./ResizableTextArea\";\nvar TextArea = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _countConfig$max, _clsx;\n\n  var defaultValue = _ref.defaultValue,\n      customValue = _ref.value,\n      onFocus = _ref.onFocus,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      allowClear = _ref.allowClear,\n      maxLength = _ref.maxLength,\n      onCompositionStart = _ref.onCompositionStart,\n      onCompositionEnd = _ref.onCompositionEnd,\n      suffix = _ref.suffix,\n      _ref$prefixCls = _ref.prefixCls,\n      prefixCls = _ref$prefixCls === void 0 ? 'rc-textarea' : _ref$prefixCls,\n      showCount = _ref.showCount,\n      count = _ref.count,\n      className = _ref.className,\n      style = _ref.style,\n      disabled = _ref.disabled,\n      hidden = _ref.hidden,\n      classNames = _ref.classNames,\n      styles = _ref.styles,\n      onResize = _ref.onResize,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useMergedState = useMergedState(defaultValue, {\n    value: customValue,\n    defaultValue: defaultValue\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      value = _useMergedState2[0],\n      setValue = _useMergedState2[1];\n\n  var formatValue = value === undefined || value === null ? '' : String(value);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focused = _React$useState2[0],\n      setFocused = _React$useState2[1];\n\n  var compositionRef = React.useRef(false);\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      textareaResized = _React$useState4[0],\n      setTextareaResized = _React$useState4[1]; // =============================== Ref ================================\n\n\n  var resizableTextAreaRef = useRef(null);\n\n  var getTextArea = function getTextArea() {\n    var _resizableTextAreaRef;\n\n    return (_resizableTextAreaRef = resizableTextAreaRef.current) === null || _resizableTextAreaRef === void 0 ? void 0 : _resizableTextAreaRef.textArea;\n  };\n\n  var focus = function focus() {\n    getTextArea().focus();\n  };\n\n  useImperativeHandle(ref, function () {\n    return {\n      resizableTextArea: resizableTextAreaRef.current,\n      focus: focus,\n      blur: function blur() {\n        getTextArea().blur();\n      }\n    };\n  });\n  useEffect(function () {\n    setFocused(function (prev) {\n      return !disabled && prev;\n    });\n  }, [disabled]); // =========================== Select Range ===========================\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      selection = _React$useState6[0],\n      setSelection = _React$useState6[1];\n\n  React.useEffect(function () {\n    if (selection) {\n      var _getTextArea;\n\n      (_getTextArea = getTextArea()).setSelectionRange.apply(_getTextArea, _toConsumableArray(selection));\n    }\n  }, [selection]); // ============================== Count ===============================\n\n  var countConfig = useCount(count, showCount);\n  var mergedMax = (_countConfig$max = countConfig.max) !== null && _countConfig$max !== void 0 ? _countConfig$max : maxLength; // Max length value\n\n  var hasMaxLength = Number(mergedMax) > 0;\n  var valueLength = countConfig.strategy(formatValue);\n  var isOutOfRange = !!mergedMax && valueLength > mergedMax; // ============================== Change ==============================\n\n  var triggerChange = function triggerChange(e, currentValue) {\n    var cutValue = currentValue;\n\n    if (!compositionRef.current && countConfig.exceedFormatter && countConfig.max && countConfig.strategy(currentValue) > countConfig.max) {\n      cutValue = countConfig.exceedFormatter(currentValue, {\n        max: countConfig.max\n      });\n\n      if (currentValue !== cutValue) {\n        setSelection([getTextArea().selectionStart || 0, getTextArea().selectionEnd || 0]);\n      }\n    }\n\n    setValue(cutValue);\n    resolveOnChange(e.currentTarget, e, onChange, cutValue);\n  }; // =========================== Value Update ===========================\n\n\n  var onInternalCompositionStart = function onInternalCompositionStart(e) {\n    compositionRef.current = true;\n    onCompositionStart === null || onCompositionStart === void 0 || onCompositionStart(e);\n  };\n\n  var onInternalCompositionEnd = function onInternalCompositionEnd(e) {\n    compositionRef.current = false;\n    triggerChange(e, e.currentTarget.value);\n    onCompositionEnd === null || onCompositionEnd === void 0 || onCompositionEnd(e);\n  };\n\n  var onInternalChange = function onInternalChange(e) {\n    triggerChange(e, e.target.value);\n  };\n\n  var handleKeyDown = function handleKeyDown(e) {\n    var onPressEnter = rest.onPressEnter,\n        onKeyDown = rest.onKeyDown;\n\n    if (e.key === 'Enter' && onPressEnter) {\n      onPressEnter(e);\n    }\n\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown(e);\n  };\n\n  var handleFocus = function handleFocus(e) {\n    setFocused(true);\n    onFocus === null || onFocus === void 0 || onFocus(e);\n  };\n\n  var handleBlur = function handleBlur(e) {\n    setFocused(false);\n    onBlur === null || onBlur === void 0 || onBlur(e);\n  }; // ============================== Reset ===============================\n\n\n  var handleReset = function handleReset(e) {\n    setValue('');\n    focus();\n    resolveOnChange(getTextArea(), e, onChange);\n  };\n\n  var suffixNode = suffix;\n  var dataCount;\n\n  if (countConfig.show) {\n    if (countConfig.showFormatter) {\n      dataCount = countConfig.showFormatter({\n        value: formatValue,\n        count: valueLength,\n        maxLength: mergedMax\n      });\n    } else {\n      dataCount = \"\".concat(valueLength).concat(hasMaxLength ? \" / \".concat(mergedMax) : '');\n    }\n\n    suffixNode = /*#__PURE__*/React.createElement(React.Fragment, null, suffixNode, /*#__PURE__*/React.createElement(\"span\", {\n      className: clsx(\"\".concat(prefixCls, \"-data-count\"), classNames === null || classNames === void 0 ? void 0 : classNames.count),\n      style: styles === null || styles === void 0 ? void 0 : styles.count\n    }, dataCount));\n  }\n\n  var handleResize = function handleResize(size) {\n    var _getTextArea2;\n\n    onResize === null || onResize === void 0 || onResize(size);\n\n    if ((_getTextArea2 = getTextArea()) !== null && _getTextArea2 !== void 0 && _getTextArea2.style.height) {\n      setTextareaResized(true);\n    }\n  };\n\n  var isPureTextArea = !rest.autoSize && !showCount && !allowClear;\n  return /*#__PURE__*/React.createElement(BaseInput, {\n    value: formatValue,\n    allowClear: allowClear,\n    handleReset: handleReset,\n    suffix: suffixNode,\n    prefixCls: prefixCls,\n    classNames: _objectSpread(_objectSpread({}, classNames), {}, {\n      affixWrapper: clsx(classNames === null || classNames === void 0 ? void 0 : classNames.affixWrapper, (_clsx = {}, _defineProperty(_clsx, \"\".concat(prefixCls, \"-show-count\"), showCount), _defineProperty(_clsx, \"\".concat(prefixCls, \"-textarea-allow-clear\"), allowClear), _clsx))\n    }),\n    disabled: disabled,\n    focused: focused,\n    className: clsx(className, isOutOfRange && \"\".concat(prefixCls, \"-out-of-range\")),\n    style: _objectSpread(_objectSpread({}, style), textareaResized && !isPureTextArea ? {\n      height: 'auto'\n    } : {}),\n    dataAttrs: {\n      affixWrapper: {\n        'data-count': typeof dataCount === 'string' ? dataCount : undefined\n      }\n    },\n    hidden: hidden\n  }, /*#__PURE__*/React.createElement(ResizableTextArea, _extends({}, rest, {\n    maxLength: maxLength,\n    onKeyDown: handleKeyDown,\n    onChange: onInternalChange,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onCompositionStart: onInternalCompositionStart,\n    onCompositionEnd: onInternalCompositionEnd,\n    className: clsx(classNames === null || classNames === void 0 ? void 0 : classNames.textarea),\n    style: _objectSpread(_objectSpread({}, styles === null || styles === void 0 ? void 0 : styles.textarea), {}, {\n      resize: style === null || style === void 0 ? void 0 : style.resize\n    }),\n    disabled: disabled,\n    prefixCls: prefixCls,\n    onResize: handleResize,\n    ref: resizableTextAreaRef\n  })));\n});\nexport default TextArea;","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/rc-textarea/es/TextArea.js"],"names":["_extends","_defineProperty","_objectSpread","_toConsumableArray","_slicedToArray","_objectWithoutProperties","_excluded","clsx","BaseInput","useCount","resolveOnChange","useMergedState","React","useEffect","useImperativeHandle","useRef","ResizableTextArea","TextArea","forwardRef","_ref","ref","_countConfig$max","_clsx","defaultValue","customValue","value","onFocus","onBlur","onChange","allowClear","maxLength","onCompositionStart","onCompositionEnd","suffix","_ref$prefixCls","prefixCls","showCount","count","className","style","disabled","hidden","classNames","styles","onResize","rest","_useMergedState","_useMergedState2","setValue","formatValue","undefined","String","_React$useState","useState","_React$useState2","focused","setFocused","compositionRef","_React$useState3","_React$useState4","textareaResized","setTextareaResized","resizableTextAreaRef","getTextArea","_resizableTextAreaRef","current","textArea","focus","resizableTextArea","blur","prev","_React$useState5","_React$useState6","selection","setSelection","_getTextArea","setSelectionRange","apply","countConfig","mergedMax","max","hasMaxLength","Number","valueLength","strategy","isOutOfRange","triggerChange","e","currentValue","cutValue","exceedFormatter","selectionStart","selectionEnd","currentTarget","onInternalCompositionStart","onInternalCompositionEnd","onInternalChange","target","handleKeyDown","onPressEnter","onKeyDown","key","handleFocus","handleBlur","handleReset","suffixNode","dataCount","show","showFormatter","concat","createElement","Fragment","handleResize","size","_getTextArea2","height","isPureTextArea","autoSize","affixWrapper","dataAttrs","textarea","resize"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"defaultValue\", \"value\", \"onFocus\", \"onBlur\", \"onChange\", \"allowClear\", \"maxLength\", \"onCompositionStart\", \"onCompositionEnd\", \"suffix\", \"prefixCls\", \"showCount\", \"count\", \"className\", \"style\", \"disabled\", \"hidden\", \"classNames\", \"styles\", \"onResize\"];\nimport clsx from 'classnames';\nimport { BaseInput } from 'rc-input';\nimport useCount from \"rc-input/es/hooks/useCount\";\nimport { resolveOnChange } from \"rc-input/es/utils/commonUtils\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useEffect, useImperativeHandle, useRef } from 'react';\nimport ResizableTextArea from \"./ResizableTextArea\";\nvar TextArea = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _countConfig$max, _clsx;\n  var defaultValue = _ref.defaultValue,\n    customValue = _ref.value,\n    onFocus = _ref.onFocus,\n    onBlur = _ref.onBlur,\n    onChange = _ref.onChange,\n    allowClear = _ref.allowClear,\n    maxLength = _ref.maxLength,\n    onCompositionStart = _ref.onCompositionStart,\n    onCompositionEnd = _ref.onCompositionEnd,\n    suffix = _ref.suffix,\n    _ref$prefixCls = _ref.prefixCls,\n    prefixCls = _ref$prefixCls === void 0 ? 'rc-textarea' : _ref$prefixCls,\n    showCount = _ref.showCount,\n    count = _ref.count,\n    className = _ref.className,\n    style = _ref.style,\n    disabled = _ref.disabled,\n    hidden = _ref.hidden,\n    classNames = _ref.classNames,\n    styles = _ref.styles,\n    onResize = _ref.onResize,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useMergedState = useMergedState(defaultValue, {\n      value: customValue,\n      defaultValue: defaultValue\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    value = _useMergedState2[0],\n    setValue = _useMergedState2[1];\n  var formatValue = value === undefined || value === null ? '' : String(value);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    focused = _React$useState2[0],\n    setFocused = _React$useState2[1];\n  var compositionRef = React.useRef(false);\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    textareaResized = _React$useState4[0],\n    setTextareaResized = _React$useState4[1];\n\n  // =============================== Ref ================================\n  var resizableTextAreaRef = useRef(null);\n  var getTextArea = function getTextArea() {\n    var _resizableTextAreaRef;\n    return (_resizableTextAreaRef = resizableTextAreaRef.current) === null || _resizableTextAreaRef === void 0 ? void 0 : _resizableTextAreaRef.textArea;\n  };\n  var focus = function focus() {\n    getTextArea().focus();\n  };\n  useImperativeHandle(ref, function () {\n    return {\n      resizableTextArea: resizableTextAreaRef.current,\n      focus: focus,\n      blur: function blur() {\n        getTextArea().blur();\n      }\n    };\n  });\n  useEffect(function () {\n    setFocused(function (prev) {\n      return !disabled && prev;\n    });\n  }, [disabled]);\n\n  // =========================== Select Range ===========================\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    selection = _React$useState6[0],\n    setSelection = _React$useState6[1];\n  React.useEffect(function () {\n    if (selection) {\n      var _getTextArea;\n      (_getTextArea = getTextArea()).setSelectionRange.apply(_getTextArea, _toConsumableArray(selection));\n    }\n  }, [selection]);\n\n  // ============================== Count ===============================\n  var countConfig = useCount(count, showCount);\n  var mergedMax = (_countConfig$max = countConfig.max) !== null && _countConfig$max !== void 0 ? _countConfig$max : maxLength;\n\n  // Max length value\n  var hasMaxLength = Number(mergedMax) > 0;\n  var valueLength = countConfig.strategy(formatValue);\n  var isOutOfRange = !!mergedMax && valueLength > mergedMax;\n\n  // ============================== Change ==============================\n  var triggerChange = function triggerChange(e, currentValue) {\n    var cutValue = currentValue;\n    if (!compositionRef.current && countConfig.exceedFormatter && countConfig.max && countConfig.strategy(currentValue) > countConfig.max) {\n      cutValue = countConfig.exceedFormatter(currentValue, {\n        max: countConfig.max\n      });\n      if (currentValue !== cutValue) {\n        setSelection([getTextArea().selectionStart || 0, getTextArea().selectionEnd || 0]);\n      }\n    }\n    setValue(cutValue);\n    resolveOnChange(e.currentTarget, e, onChange, cutValue);\n  };\n\n  // =========================== Value Update ===========================\n  var onInternalCompositionStart = function onInternalCompositionStart(e) {\n    compositionRef.current = true;\n    onCompositionStart === null || onCompositionStart === void 0 || onCompositionStart(e);\n  };\n  var onInternalCompositionEnd = function onInternalCompositionEnd(e) {\n    compositionRef.current = false;\n    triggerChange(e, e.currentTarget.value);\n    onCompositionEnd === null || onCompositionEnd === void 0 || onCompositionEnd(e);\n  };\n  var onInternalChange = function onInternalChange(e) {\n    triggerChange(e, e.target.value);\n  };\n  var handleKeyDown = function handleKeyDown(e) {\n    var onPressEnter = rest.onPressEnter,\n      onKeyDown = rest.onKeyDown;\n    if (e.key === 'Enter' && onPressEnter) {\n      onPressEnter(e);\n    }\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown(e);\n  };\n  var handleFocus = function handleFocus(e) {\n    setFocused(true);\n    onFocus === null || onFocus === void 0 || onFocus(e);\n  };\n  var handleBlur = function handleBlur(e) {\n    setFocused(false);\n    onBlur === null || onBlur === void 0 || onBlur(e);\n  };\n\n  // ============================== Reset ===============================\n  var handleReset = function handleReset(e) {\n    setValue('');\n    focus();\n    resolveOnChange(getTextArea(), e, onChange);\n  };\n  var suffixNode = suffix;\n  var dataCount;\n  if (countConfig.show) {\n    if (countConfig.showFormatter) {\n      dataCount = countConfig.showFormatter({\n        value: formatValue,\n        count: valueLength,\n        maxLength: mergedMax\n      });\n    } else {\n      dataCount = \"\".concat(valueLength).concat(hasMaxLength ? \" / \".concat(mergedMax) : '');\n    }\n    suffixNode = /*#__PURE__*/React.createElement(React.Fragment, null, suffixNode, /*#__PURE__*/React.createElement(\"span\", {\n      className: clsx(\"\".concat(prefixCls, \"-data-count\"), classNames === null || classNames === void 0 ? void 0 : classNames.count),\n      style: styles === null || styles === void 0 ? void 0 : styles.count\n    }, dataCount));\n  }\n  var handleResize = function handleResize(size) {\n    var _getTextArea2;\n    onResize === null || onResize === void 0 || onResize(size);\n    if ((_getTextArea2 = getTextArea()) !== null && _getTextArea2 !== void 0 && _getTextArea2.style.height) {\n      setTextareaResized(true);\n    }\n  };\n  var isPureTextArea = !rest.autoSize && !showCount && !allowClear;\n  return /*#__PURE__*/React.createElement(BaseInput, {\n    value: formatValue,\n    allowClear: allowClear,\n    handleReset: handleReset,\n    suffix: suffixNode,\n    prefixCls: prefixCls,\n    classNames: _objectSpread(_objectSpread({}, classNames), {}, {\n      affixWrapper: clsx(classNames === null || classNames === void 0 ? void 0 : classNames.affixWrapper, (_clsx = {}, _defineProperty(_clsx, \"\".concat(prefixCls, \"-show-count\"), showCount), _defineProperty(_clsx, \"\".concat(prefixCls, \"-textarea-allow-clear\"), allowClear), _clsx))\n    }),\n    disabled: disabled,\n    focused: focused,\n    className: clsx(className, isOutOfRange && \"\".concat(prefixCls, \"-out-of-range\")),\n    style: _objectSpread(_objectSpread({}, style), textareaResized && !isPureTextArea ? {\n      height: 'auto'\n    } : {}),\n    dataAttrs: {\n      affixWrapper: {\n        'data-count': typeof dataCount === 'string' ? dataCount : undefined\n      }\n    },\n    hidden: hidden\n  }, /*#__PURE__*/React.createElement(ResizableTextArea, _extends({}, rest, {\n    maxLength: maxLength,\n    onKeyDown: handleKeyDown,\n    onChange: onInternalChange,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onCompositionStart: onInternalCompositionStart,\n    onCompositionEnd: onInternalCompositionEnd,\n    className: clsx(classNames === null || classNames === void 0 ? void 0 : classNames.textarea),\n    style: _objectSpread(_objectSpread({}, styles === null || styles === void 0 ? void 0 : styles.textarea), {}, {\n      resize: style === null || style === void 0 ? void 0 : style.resize\n    }),\n    disabled: disabled,\n    prefixCls: prefixCls,\n    onResize: handleResize,\n    ref: resizableTextAreaRef\n  })));\n});\nexport default TextArea;"]},"metadata":{},"sourceType":"module"}