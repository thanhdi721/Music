{"ast":null,"code":"\"use client\";\n\nimport React, { useContext } from 'react';\nimport { token2CSSVar, useCSSVarRegister, useStyleRegister } from '@ant-design/cssinjs';\nimport { warning } from 'rc-util';\nimport { ConfigContext } from '../../config-provider/context';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport useToken, { ignore, unitless } from '../useToken';\nimport genCalc from './calc';\nimport genMaxMin from './maxmin';\nimport statisticToken, { merge as mergeToken } from './statistic';\nimport useResetIconStyle from './useResetIconStyle';\n\nconst getDefaultComponentToken = (component, token, getDefaultToken) => {\n  var _a;\n\n  if (typeof getDefaultToken === 'function') {\n    return getDefaultToken(mergeToken(token, (_a = token[component]) !== null && _a !== void 0 ? _a : {}));\n  }\n\n  return getDefaultToken !== null && getDefaultToken !== void 0 ? getDefaultToken : {};\n};\n\nconst getComponentToken = (component, token, defaultToken, options) => {\n  const customToken = Object.assign({}, token[component]);\n\n  if (options === null || options === void 0 ? void 0 : options.deprecatedTokens) {\n    const {\n      deprecatedTokens\n    } = options;\n    deprecatedTokens.forEach(_ref => {\n      let [oldTokenKey, newTokenKey] = _ref;\n\n      var _a;\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== \"production\" ? warning(!(customToken === null || customToken === void 0 ? void 0 : customToken[oldTokenKey]), `Component Token \\`${String(oldTokenKey)}\\` of ${component} is deprecated. Please use \\`${String(newTokenKey)}\\` instead.`) : void 0;\n      } // Should wrap with `if` clause, or there will be `undefined` in object.\n\n\n      if ((customToken === null || customToken === void 0 ? void 0 : customToken[oldTokenKey]) || (customToken === null || customToken === void 0 ? void 0 : customToken[newTokenKey])) {\n        (_a = customToken[newTokenKey]) !== null && _a !== void 0 ? _a : customToken[newTokenKey] = customToken === null || customToken === void 0 ? void 0 : customToken[oldTokenKey];\n      }\n    });\n  }\n\n  const mergedToken = Object.assign(Object.assign({}, defaultToken), customToken); // Remove same value as global token to minimize size\n\n  Object.keys(mergedToken).forEach(key => {\n    if (mergedToken[key] === token[key]) {\n      delete mergedToken[key];\n    }\n  });\n  return mergedToken;\n};\n\nconst getCompVarPrefix = (component, prefix) => `${[prefix, component.replace(/([A-Z]+)([A-Z][a-z]+)/g, '$1-$2').replace(/([a-z])([A-Z])/g, '$1-$2')].filter(Boolean).join('-')}`;\n\nexport default function genComponentStyleHook(componentName, styleFn, getDefaultToken) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const cells = Array.isArray(componentName) ? componentName : [componentName, componentName];\n  const [component] = cells;\n  const concatComponent = cells.join('-');\n  return function (prefixCls) {\n    let rootCls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : prefixCls;\n    const [theme, realToken, hashId, token, cssVar] = useToken();\n    const {\n      getPrefixCls,\n      iconPrefixCls,\n      csp\n    } = useContext(ConfigContext);\n    const rootPrefixCls = getPrefixCls();\n    const type = cssVar ? 'css' : 'js';\n    const calc = genCalc(type);\n    const {\n      max,\n      min\n    } = genMaxMin(type); // Shared config\n\n    const sharedConfig = {\n      theme,\n      token,\n      hashId,\n      nonce: () => csp === null || csp === void 0 ? void 0 : csp.nonce,\n      clientOnly: options.clientOnly,\n      // antd is always at top of styles\n      order: options.order || -999\n    }; // Generate style for all a tags in antd component.\n\n    useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      clientOnly: false,\n      path: ['Shared', rootPrefixCls]\n    }), () => [{\n      // Link\n      '&': genLinkStyle(token)\n    }]); // Generate style for icons\n\n    useResetIconStyle(iconPrefixCls, csp);\n    const wrapSSR = useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: [concatComponent, prefixCls, iconPrefixCls]\n    }), () => {\n      if (options.injectStyle === false) {\n        return [];\n      }\n\n      const {\n        token: proxyToken,\n        flush\n      } = statisticToken(token);\n      const defaultComponentToken = getDefaultComponentToken(component, realToken, getDefaultToken);\n      const componentCls = `.${prefixCls}`;\n      const componentToken = getComponentToken(component, realToken, defaultComponentToken, {\n        deprecatedTokens: options.deprecatedTokens\n      });\n\n      if (cssVar) {\n        Object.keys(defaultComponentToken).forEach(key => {\n          defaultComponentToken[key] = `var(${token2CSSVar(key, getCompVarPrefix(component, cssVar.prefix))})`;\n        });\n      }\n\n      const mergedToken = mergeToken(proxyToken, {\n        componentCls,\n        prefixCls,\n        iconCls: `.${iconPrefixCls}`,\n        antCls: `.${rootPrefixCls}`,\n        calc,\n        // @ts-ignore\n        max,\n        // @ts-ignore\n        min\n      }, cssVar ? defaultComponentToken : componentToken);\n      const styleInterpolation = styleFn(mergedToken, {\n        hashId,\n        prefixCls,\n        rootPrefixCls,\n        iconPrefixCls\n      });\n      flush(component, componentToken);\n      return [options.resetStyle === false ? null : genCommonStyle(mergedToken, prefixCls, rootCls), styleInterpolation];\n    });\n    return [wrapSSR, hashId];\n  };\n}\nexport const genSubStyleComponent = (componentName, styleFn, getDefaultToken, options) => {\n  const useStyle = genComponentStyleHook(componentName, styleFn, getDefaultToken, Object.assign({\n    resetStyle: false,\n    // Sub Style should default after root one\n    order: -998\n  }, options));\n\n  const StyledComponent = _ref2 => {\n    let {\n      prefixCls,\n      rootCls = prefixCls\n    } = _ref2;\n    useStyle(prefixCls, rootCls);\n    return null;\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    StyledComponent.displayName = `SubStyle_${Array.isArray(componentName) ? componentName.join('.') : componentName}`;\n  }\n\n  return StyledComponent;\n};\n\nconst genCSSVarRegister = (component, getDefaultToken, options) => {\n  function prefixToken(key) {\n    return `${component}${key.slice(0, 1).toUpperCase()}${key.slice(1)}`;\n  }\n\n  const {\n    unitless: originUnitless = {},\n    injectStyle = true\n  } = options !== null && options !== void 0 ? options : {};\n  const compUnitless = {\n    [prefixToken('zIndexPopup')]: true\n  };\n  Object.keys(originUnitless).forEach(key => {\n    compUnitless[prefixToken(key)] = originUnitless[key];\n  });\n\n  const CSSVarRegister = _ref3 => {\n    let {\n      rootCls,\n      cssVar\n    } = _ref3;\n    const [, realToken] = useToken();\n    useCSSVarRegister({\n      path: [component],\n      prefix: cssVar.prefix,\n      key: cssVar === null || cssVar === void 0 ? void 0 : cssVar.key,\n      unitless: Object.assign(Object.assign({}, unitless), compUnitless),\n      ignore,\n      token: realToken,\n      scope: rootCls\n    }, () => {\n      const defaultToken = getDefaultComponentToken(component, realToken, getDefaultToken);\n      const componentToken = getComponentToken(component, realToken, defaultToken, {\n        deprecatedTokens: options === null || options === void 0 ? void 0 : options.deprecatedTokens\n      });\n      Object.keys(defaultToken).forEach(key => {\n        componentToken[prefixToken(key)] = componentToken[key];\n        delete componentToken[key];\n      });\n      return componentToken;\n    });\n    return null;\n  };\n\n  const useCSSVar = rootCls => {\n    const [,,,, cssVar] = useToken();\n    return [node => injectStyle && cssVar ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CSSVarRegister, {\n      rootCls: rootCls,\n      cssVar: cssVar,\n      component: component\n    }), node) : node, cssVar === null || cssVar === void 0 ? void 0 : cssVar.key];\n  };\n\n  return useCSSVar;\n};\n\nexport const genStyleHooks = (component, styleFn, getDefaultToken, options) => {\n  const useStyle = genComponentStyleHook(component, styleFn, getDefaultToken, options);\n  const useCSSVar = genCSSVarRegister(Array.isArray(component) ? component[0] : component, getDefaultToken, options);\n  return function (prefixCls) {\n    let rootCls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : prefixCls;\n    const [, hashId] = useStyle(prefixCls, rootCls);\n    const [wrapCSSVar, cssVarCls] = useCSSVar(rootCls);\n    return [wrapCSSVar, hashId, cssVarCls];\n  };\n};","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/theme/util/genComponentStyleHook.js"],"names":["React","useContext","token2CSSVar","useCSSVarRegister","useStyleRegister","warning","ConfigContext","genCommonStyle","genLinkStyle","useToken","ignore","unitless","genCalc","genMaxMin","statisticToken","merge","mergeToken","useResetIconStyle","getDefaultComponentToken","component","token","getDefaultToken","_a","getComponentToken","defaultToken","options","customToken","Object","assign","deprecatedTokens","forEach","_ref","oldTokenKey","newTokenKey","process","env","NODE_ENV","String","mergedToken","keys","key","getCompVarPrefix","prefix","replace","filter","Boolean","join","genComponentStyleHook","componentName","styleFn","arguments","length","undefined","cells","Array","isArray","concatComponent","prefixCls","rootCls","theme","realToken","hashId","cssVar","getPrefixCls","iconPrefixCls","csp","rootPrefixCls","type","calc","max","min","sharedConfig","nonce","clientOnly","order","path","wrapSSR","injectStyle","proxyToken","flush","defaultComponentToken","componentCls","componentToken","iconCls","antCls","styleInterpolation","resetStyle","genSubStyleComponent","useStyle","StyledComponent","_ref2","displayName","genCSSVarRegister","prefixToken","slice","toUpperCase","originUnitless","compUnitless","CSSVarRegister","_ref3","scope","useCSSVar","node","createElement","Fragment","genStyleHooks","wrapCSSVar","cssVarCls"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React, { useContext } from 'react';\nimport { token2CSSVar, useCSSVarRegister, useStyleRegister } from '@ant-design/cssinjs';\nimport { warning } from 'rc-util';\nimport { ConfigContext } from '../../config-provider/context';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport useToken, { ignore, unitless } from '../useToken';\nimport genCalc from './calc';\nimport genMaxMin from './maxmin';\nimport statisticToken, { merge as mergeToken } from './statistic';\nimport useResetIconStyle from './useResetIconStyle';\nconst getDefaultComponentToken = (component, token, getDefaultToken) => {\n  var _a;\n  if (typeof getDefaultToken === 'function') {\n    return getDefaultToken(mergeToken(token, (_a = token[component]) !== null && _a !== void 0 ? _a : {}));\n  }\n  return getDefaultToken !== null && getDefaultToken !== void 0 ? getDefaultToken : {};\n};\nconst getComponentToken = (component, token, defaultToken, options) => {\n  const customToken = Object.assign({}, token[component]);\n  if (options === null || options === void 0 ? void 0 : options.deprecatedTokens) {\n    const {\n      deprecatedTokens\n    } = options;\n    deprecatedTokens.forEach(_ref => {\n      let [oldTokenKey, newTokenKey] = _ref;\n      var _a;\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== \"production\" ? warning(!(customToken === null || customToken === void 0 ? void 0 : customToken[oldTokenKey]), `Component Token \\`${String(oldTokenKey)}\\` of ${component} is deprecated. Please use \\`${String(newTokenKey)}\\` instead.`) : void 0;\n      }\n      // Should wrap with `if` clause, or there will be `undefined` in object.\n      if ((customToken === null || customToken === void 0 ? void 0 : customToken[oldTokenKey]) || (customToken === null || customToken === void 0 ? void 0 : customToken[newTokenKey])) {\n        (_a = customToken[newTokenKey]) !== null && _a !== void 0 ? _a : customToken[newTokenKey] = customToken === null || customToken === void 0 ? void 0 : customToken[oldTokenKey];\n      }\n    });\n  }\n  const mergedToken = Object.assign(Object.assign({}, defaultToken), customToken);\n  // Remove same value as global token to minimize size\n  Object.keys(mergedToken).forEach(key => {\n    if (mergedToken[key] === token[key]) {\n      delete mergedToken[key];\n    }\n  });\n  return mergedToken;\n};\nconst getCompVarPrefix = (component, prefix) => `${[prefix, component.replace(/([A-Z]+)([A-Z][a-z]+)/g, '$1-$2').replace(/([a-z])([A-Z])/g, '$1-$2')].filter(Boolean).join('-')}`;\nexport default function genComponentStyleHook(componentName, styleFn, getDefaultToken) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const cells = Array.isArray(componentName) ? componentName : [componentName, componentName];\n  const [component] = cells;\n  const concatComponent = cells.join('-');\n  return function (prefixCls) {\n    let rootCls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : prefixCls;\n    const [theme, realToken, hashId, token, cssVar] = useToken();\n    const {\n      getPrefixCls,\n      iconPrefixCls,\n      csp\n    } = useContext(ConfigContext);\n    const rootPrefixCls = getPrefixCls();\n    const type = cssVar ? 'css' : 'js';\n    const calc = genCalc(type);\n    const {\n      max,\n      min\n    } = genMaxMin(type);\n    // Shared config\n    const sharedConfig = {\n      theme,\n      token,\n      hashId,\n      nonce: () => csp === null || csp === void 0 ? void 0 : csp.nonce,\n      clientOnly: options.clientOnly,\n      // antd is always at top of styles\n      order: options.order || -999\n    };\n    // Generate style for all a tags in antd component.\n    useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      clientOnly: false,\n      path: ['Shared', rootPrefixCls]\n    }), () => [{\n      // Link\n      '&': genLinkStyle(token)\n    }]);\n    // Generate style for icons\n    useResetIconStyle(iconPrefixCls, csp);\n    const wrapSSR = useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: [concatComponent, prefixCls, iconPrefixCls]\n    }), () => {\n      if (options.injectStyle === false) {\n        return [];\n      }\n      const {\n        token: proxyToken,\n        flush\n      } = statisticToken(token);\n      const defaultComponentToken = getDefaultComponentToken(component, realToken, getDefaultToken);\n      const componentCls = `.${prefixCls}`;\n      const componentToken = getComponentToken(component, realToken, defaultComponentToken, {\n        deprecatedTokens: options.deprecatedTokens\n      });\n      if (cssVar) {\n        Object.keys(defaultComponentToken).forEach(key => {\n          defaultComponentToken[key] = `var(${token2CSSVar(key, getCompVarPrefix(component, cssVar.prefix))})`;\n        });\n      }\n      const mergedToken = mergeToken(proxyToken, {\n        componentCls,\n        prefixCls,\n        iconCls: `.${iconPrefixCls}`,\n        antCls: `.${rootPrefixCls}`,\n        calc,\n        // @ts-ignore\n        max,\n        // @ts-ignore\n        min\n      }, cssVar ? defaultComponentToken : componentToken);\n      const styleInterpolation = styleFn(mergedToken, {\n        hashId,\n        prefixCls,\n        rootPrefixCls,\n        iconPrefixCls\n      });\n      flush(component, componentToken);\n      return [options.resetStyle === false ? null : genCommonStyle(mergedToken, prefixCls, rootCls), styleInterpolation];\n    });\n    return [wrapSSR, hashId];\n  };\n}\nexport const genSubStyleComponent = (componentName, styleFn, getDefaultToken, options) => {\n  const useStyle = genComponentStyleHook(componentName, styleFn, getDefaultToken, Object.assign({\n    resetStyle: false,\n    // Sub Style should default after root one\n    order: -998\n  }, options));\n  const StyledComponent = _ref2 => {\n    let {\n      prefixCls,\n      rootCls = prefixCls\n    } = _ref2;\n    useStyle(prefixCls, rootCls);\n    return null;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    StyledComponent.displayName = `SubStyle_${Array.isArray(componentName) ? componentName.join('.') : componentName}`;\n  }\n  return StyledComponent;\n};\nconst genCSSVarRegister = (component, getDefaultToken, options) => {\n  function prefixToken(key) {\n    return `${component}${key.slice(0, 1).toUpperCase()}${key.slice(1)}`;\n  }\n  const {\n    unitless: originUnitless = {},\n    injectStyle = true\n  } = options !== null && options !== void 0 ? options : {};\n  const compUnitless = {\n    [prefixToken('zIndexPopup')]: true\n  };\n  Object.keys(originUnitless).forEach(key => {\n    compUnitless[prefixToken(key)] = originUnitless[key];\n  });\n  const CSSVarRegister = _ref3 => {\n    let {\n      rootCls,\n      cssVar\n    } = _ref3;\n    const [, realToken] = useToken();\n    useCSSVarRegister({\n      path: [component],\n      prefix: cssVar.prefix,\n      key: cssVar === null || cssVar === void 0 ? void 0 : cssVar.key,\n      unitless: Object.assign(Object.assign({}, unitless), compUnitless),\n      ignore,\n      token: realToken,\n      scope: rootCls\n    }, () => {\n      const defaultToken = getDefaultComponentToken(component, realToken, getDefaultToken);\n      const componentToken = getComponentToken(component, realToken, defaultToken, {\n        deprecatedTokens: options === null || options === void 0 ? void 0 : options.deprecatedTokens\n      });\n      Object.keys(defaultToken).forEach(key => {\n        componentToken[prefixToken(key)] = componentToken[key];\n        delete componentToken[key];\n      });\n      return componentToken;\n    });\n    return null;\n  };\n  const useCSSVar = rootCls => {\n    const [,,,, cssVar] = useToken();\n    return [node => injectStyle && cssVar ? ( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CSSVarRegister, {\n      rootCls: rootCls,\n      cssVar: cssVar,\n      component: component\n    }), node)) : node, cssVar === null || cssVar === void 0 ? void 0 : cssVar.key];\n  };\n  return useCSSVar;\n};\nexport const genStyleHooks = (component, styleFn, getDefaultToken, options) => {\n  const useStyle = genComponentStyleHook(component, styleFn, getDefaultToken, options);\n  const useCSSVar = genCSSVarRegister(Array.isArray(component) ? component[0] : component, getDefaultToken, options);\n  return function (prefixCls) {\n    let rootCls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : prefixCls;\n    const [, hashId] = useStyle(prefixCls, rootCls);\n    const [wrapCSSVar, cssVarCls] = useCSSVar(rootCls);\n    return [wrapCSSVar, hashId, cssVarCls];\n  };\n};"]},"metadata":{},"sourceType":"module"}