{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isDOM } from \"rc-util/es/Dom/findDOMNode\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { collectScroller, getVisibleArea, getWin, toNum } from \"../util\";\n\nfunction getUnitOffset(size) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var offsetStr = \"\".concat(offset);\n  var cells = offsetStr.match(/^(.*)\\%$/);\n\n  if (cells) {\n    return size * (parseFloat(cells[1]) / 100);\n  }\n\n  return parseFloat(offsetStr);\n}\n\nfunction getNumberOffset(rect, offset) {\n  var _ref = offset || [],\n      _ref2 = _slicedToArray(_ref, 2),\n      offsetX = _ref2[0],\n      offsetY = _ref2[1];\n\n  return [getUnitOffset(rect.width, offsetX), getUnitOffset(rect.height, offsetY)];\n}\n\nfunction splitPoints() {\n  var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return [points[0], points[1]];\n}\n\nfunction getAlignPoint(rect, points) {\n  var topBottom = points[0];\n  var leftRight = points[1];\n  var x;\n  var y; // Top & Bottom\n\n  if (topBottom === 't') {\n    y = rect.y;\n  } else if (topBottom === 'b') {\n    y = rect.y + rect.height;\n  } else {\n    y = rect.y + rect.height / 2;\n  } // Left & Right\n\n\n  if (leftRight === 'l') {\n    x = rect.x;\n  } else if (leftRight === 'r') {\n    x = rect.x + rect.width;\n  } else {\n    x = rect.x + rect.width / 2;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n\nfunction reversePoints(points, index) {\n  var reverseMap = {\n    t: 'b',\n    b: 't',\n    l: 'r',\n    r: 'l'\n  };\n  return points.map(function (point, i) {\n    if (i === index) {\n      return reverseMap[point] || 'c';\n    }\n\n    return point;\n  }).join('');\n}\n\nexport default function useAlign(open, popupEle, target, placement, builtinPlacements, popupAlign, onPopupAlign) {\n  var _React$useState = React.useState({\n    ready: false,\n    offsetX: 0,\n    offsetY: 0,\n    offsetR: 0,\n    offsetB: 0,\n    arrowX: 0,\n    arrowY: 0,\n    scaleX: 1,\n    scaleY: 1,\n    align: builtinPlacements[placement] || {}\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      offsetInfo = _React$useState2[0],\n      setOffsetInfo = _React$useState2[1];\n\n  var alignCountRef = React.useRef(0);\n  var scrollerList = React.useMemo(function () {\n    if (!popupEle) {\n      return [];\n    }\n\n    return collectScroller(popupEle);\n  }, [popupEle]); // ========================= Flip ==========================\n  // We will memo flip info.\n  // If size change to make flip, it will memo the flip info and use it in next align.\n\n  var prevFlipRef = React.useRef({});\n\n  var resetFlipCache = function resetFlipCache() {\n    prevFlipRef.current = {};\n  };\n\n  if (!open) {\n    resetFlipCache();\n  } // ========================= Align =========================\n\n\n  var onAlign = useEvent(function () {\n    if (popupEle && target && open) {\n      var _popupElement$parentE, _popupElement$parentE2;\n\n      var popupElement = popupEle;\n      var doc = popupElement.ownerDocument;\n      var win = getWin(popupElement);\n\n      var _win$getComputedStyle = win.getComputedStyle(popupElement),\n          width = _win$getComputedStyle.width,\n          height = _win$getComputedStyle.height,\n          popupPosition = _win$getComputedStyle.position;\n\n      var originLeft = popupElement.style.left;\n      var originTop = popupElement.style.top;\n      var originRight = popupElement.style.right;\n      var originBottom = popupElement.style.bottom;\n      var originOverflow = popupElement.style.overflow; // Placement\n\n      var placementInfo = _objectSpread(_objectSpread({}, builtinPlacements[placement]), popupAlign); // placeholder element\n\n\n      var placeholderElement = doc.createElement('div');\n      (_popupElement$parentE = popupElement.parentElement) === null || _popupElement$parentE === void 0 || _popupElement$parentE.appendChild(placeholderElement);\n      placeholderElement.style.left = \"\".concat(popupElement.offsetLeft, \"px\");\n      placeholderElement.style.top = \"\".concat(popupElement.offsetTop, \"px\");\n      placeholderElement.style.position = popupPosition;\n      placeholderElement.style.height = \"\".concat(popupElement.offsetHeight, \"px\");\n      placeholderElement.style.width = \"\".concat(popupElement.offsetWidth, \"px\"); // Reset first\n\n      popupElement.style.left = '0';\n      popupElement.style.top = '0';\n      popupElement.style.right = 'auto';\n      popupElement.style.bottom = 'auto';\n      popupElement.style.overflow = 'hidden'; // Calculate align style, we should consider `transform` case\n\n      var targetRect;\n\n      if (Array.isArray(target)) {\n        targetRect = {\n          x: target[0],\n          y: target[1],\n          width: 0,\n          height: 0\n        };\n      } else {\n        var rect = target.getBoundingClientRect();\n        targetRect = {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        };\n      }\n\n      var popupRect = popupElement.getBoundingClientRect();\n      var _doc$documentElement = doc.documentElement,\n          clientWidth = _doc$documentElement.clientWidth,\n          clientHeight = _doc$documentElement.clientHeight,\n          scrollWidth = _doc$documentElement.scrollWidth,\n          scrollHeight = _doc$documentElement.scrollHeight,\n          scrollTop = _doc$documentElement.scrollTop,\n          scrollLeft = _doc$documentElement.scrollLeft;\n      var popupHeight = popupRect.height;\n      var popupWidth = popupRect.width;\n      var targetHeight = targetRect.height;\n      var targetWidth = targetRect.width; // Get bounding of visible area\n\n      var visibleRegion = {\n        left: 0,\n        top: 0,\n        right: clientWidth,\n        bottom: clientHeight\n      };\n      var scrollRegion = {\n        left: -scrollLeft,\n        top: -scrollTop,\n        right: scrollWidth - scrollLeft,\n        bottom: scrollHeight - scrollTop\n      };\n      var htmlRegion = placementInfo.htmlRegion;\n      var VISIBLE = 'visible';\n      var VISIBLE_FIRST = 'visibleFirst';\n\n      if (htmlRegion !== 'scroll' && htmlRegion !== VISIBLE_FIRST) {\n        htmlRegion = VISIBLE;\n      }\n\n      var isVisibleFirst = htmlRegion === VISIBLE_FIRST;\n      var scrollRegionArea = getVisibleArea(scrollRegion, scrollerList);\n      var visibleRegionArea = getVisibleArea(visibleRegion, scrollerList);\n      var visibleArea = htmlRegion === VISIBLE ? visibleRegionArea : scrollRegionArea; // When set to `visibleFirst`,\n      // the check `adjust` logic will use `visibleRegion` for check first.\n\n      var adjustCheckVisibleArea = isVisibleFirst ? visibleRegionArea : visibleArea; // Record right & bottom align data\n\n      popupElement.style.left = 'auto';\n      popupElement.style.top = 'auto';\n      popupElement.style.right = '0';\n      popupElement.style.bottom = '0';\n      var popupMirrorRect = popupElement.getBoundingClientRect(); // Reset back\n\n      popupElement.style.left = originLeft;\n      popupElement.style.top = originTop;\n      popupElement.style.right = originRight;\n      popupElement.style.bottom = originBottom;\n      popupElement.style.overflow = originOverflow;\n      (_popupElement$parentE2 = popupElement.parentElement) === null || _popupElement$parentE2 === void 0 || _popupElement$parentE2.removeChild(placeholderElement); // Calculate scale\n\n      var _scaleX = toNum(Math.round(popupWidth / parseFloat(width) * 1000) / 1000);\n\n      var _scaleY = toNum(Math.round(popupHeight / parseFloat(height) * 1000) / 1000); // No need to align since it's not visible in view\n\n\n      if (_scaleX === 0 || _scaleY === 0 || isDOM(target) && !isVisible(target)) {\n        return;\n      } // Offset\n\n\n      var offset = placementInfo.offset,\n          targetOffset = placementInfo.targetOffset;\n\n      var _getNumberOffset = getNumberOffset(popupRect, offset),\n          _getNumberOffset2 = _slicedToArray(_getNumberOffset, 2),\n          popupOffsetX = _getNumberOffset2[0],\n          popupOffsetY = _getNumberOffset2[1];\n\n      var _getNumberOffset3 = getNumberOffset(targetRect, targetOffset),\n          _getNumberOffset4 = _slicedToArray(_getNumberOffset3, 2),\n          targetOffsetX = _getNumberOffset4[0],\n          targetOffsetY = _getNumberOffset4[1];\n\n      targetRect.x -= targetOffsetX;\n      targetRect.y -= targetOffsetY; // Points\n\n      var _ref3 = placementInfo.points || [],\n          _ref4 = _slicedToArray(_ref3, 2),\n          popupPoint = _ref4[0],\n          targetPoint = _ref4[1];\n\n      var targetPoints = splitPoints(targetPoint);\n      var popupPoints = splitPoints(popupPoint);\n      var targetAlignPoint = getAlignPoint(targetRect, targetPoints);\n      var popupAlignPoint = getAlignPoint(popupRect, popupPoints); // Real align info may not same as origin one\n\n      var nextAlignInfo = _objectSpread({}, placementInfo); // Next Offset\n\n\n      var nextOffsetX = targetAlignPoint.x - popupAlignPoint.x + popupOffsetX;\n      var nextOffsetY = targetAlignPoint.y - popupAlignPoint.y + popupOffsetY; // ============== Intersection ===============\n      // Get area by position. Used for check if flip area is better\n\n      function getIntersectionVisibleArea(offsetX, offsetY) {\n        var area = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : visibleArea;\n        var l = popupRect.x + offsetX;\n        var t = popupRect.y + offsetY;\n        var r = l + popupWidth;\n        var b = t + popupHeight;\n        var visibleL = Math.max(l, area.left);\n        var visibleT = Math.max(t, area.top);\n        var visibleR = Math.min(r, area.right);\n        var visibleB = Math.min(b, area.bottom);\n        return Math.max(0, (visibleR - visibleL) * (visibleB - visibleT));\n      }\n\n      var originIntersectionVisibleArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY); // As `visibleFirst`, we prepare this for check\n\n      var originIntersectionRecommendArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY, visibleRegionArea); // ========================== Overflow ===========================\n\n      var targetAlignPointTL = getAlignPoint(targetRect, ['t', 'l']);\n      var popupAlignPointTL = getAlignPoint(popupRect, ['t', 'l']);\n      var targetAlignPointBR = getAlignPoint(targetRect, ['b', 'r']);\n      var popupAlignPointBR = getAlignPoint(popupRect, ['b', 'r']);\n      var overflow = placementInfo.overflow || {};\n      var adjustX = overflow.adjustX,\n          adjustY = overflow.adjustY,\n          shiftX = overflow.shiftX,\n          shiftY = overflow.shiftY;\n\n      var supportAdjust = function supportAdjust(val) {\n        if (typeof val === 'boolean') {\n          return val;\n        }\n\n        return val >= 0;\n      }; // Prepare position\n\n\n      var nextPopupY;\n      var nextPopupBottom;\n      var nextPopupX;\n      var nextPopupRight;\n\n      function syncNextPopupPosition() {\n        nextPopupY = popupRect.y + nextOffsetY;\n        nextPopupBottom = nextPopupY + popupHeight;\n        nextPopupX = popupRect.x + nextOffsetX;\n        nextPopupRight = nextPopupX + popupWidth;\n      }\n\n      syncNextPopupPosition(); // >>>>>>>>>> Top & Bottom\n\n      var needAdjustY = supportAdjust(adjustY);\n      var sameTB = popupPoints[0] === targetPoints[0]; // Bottom to Top\n\n      if (needAdjustY && popupPoints[0] === 't' && (nextPopupBottom > adjustCheckVisibleArea.bottom || prevFlipRef.current.bt)) {\n        var tmpNextOffsetY = nextOffsetY;\n\n        if (sameTB) {\n          tmpNextOffsetY -= popupHeight - targetHeight;\n        } else {\n          tmpNextOffsetY = targetAlignPointTL.y - popupAlignPointBR.y - popupOffsetY;\n        }\n\n        var newVisibleArea = getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY);\n        var newVisibleRecommendArea = getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY, visibleRegionArea);\n\n        if ( // Of course use larger one\n        newVisibleArea > originIntersectionVisibleArea || newVisibleArea === originIntersectionVisibleArea && (!isVisibleFirst || // Choose recommend one\n        newVisibleRecommendArea >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.bt = true;\n          nextOffsetY = tmpNextOffsetY;\n          popupOffsetY = -popupOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.bt = false;\n        }\n      } // Top to Bottom\n\n\n      if (needAdjustY && popupPoints[0] === 'b' && (nextPopupY < adjustCheckVisibleArea.top || prevFlipRef.current.tb)) {\n        var _tmpNextOffsetY = nextOffsetY;\n\n        if (sameTB) {\n          _tmpNextOffsetY += popupHeight - targetHeight;\n        } else {\n          _tmpNextOffsetY = targetAlignPointBR.y - popupAlignPointTL.y - popupOffsetY;\n        }\n\n        var _newVisibleArea = getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY);\n\n        var _newVisibleRecommendArea = getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY, visibleRegionArea);\n\n        if ( // Of course use larger one\n        _newVisibleArea > originIntersectionVisibleArea || _newVisibleArea === originIntersectionVisibleArea && (!isVisibleFirst || // Choose recommend one\n        _newVisibleRecommendArea >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.tb = true;\n          nextOffsetY = _tmpNextOffsetY;\n          popupOffsetY = -popupOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.tb = false;\n        }\n      } // >>>>>>>>>> Left & Right\n\n\n      var needAdjustX = supportAdjust(adjustX); // >>>>> Flip\n\n      var sameLR = popupPoints[1] === targetPoints[1]; // Right to Left\n\n      if (needAdjustX && popupPoints[1] === 'l' && (nextPopupRight > adjustCheckVisibleArea.right || prevFlipRef.current.rl)) {\n        var tmpNextOffsetX = nextOffsetX;\n\n        if (sameLR) {\n          tmpNextOffsetX -= popupWidth - targetWidth;\n        } else {\n          tmpNextOffsetX = targetAlignPointTL.x - popupAlignPointBR.x - popupOffsetX;\n        }\n\n        var _newVisibleArea2 = getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY);\n\n        var _newVisibleRecommendArea2 = getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY, visibleRegionArea);\n\n        if ( // Of course use larger one\n        _newVisibleArea2 > originIntersectionVisibleArea || _newVisibleArea2 === originIntersectionVisibleArea && (!isVisibleFirst || // Choose recommend one\n        _newVisibleRecommendArea2 >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.rl = true;\n          nextOffsetX = tmpNextOffsetX;\n          popupOffsetX = -popupOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.rl = false;\n        }\n      } // Left to Right\n\n\n      if (needAdjustX && popupPoints[1] === 'r' && (nextPopupX < adjustCheckVisibleArea.left || prevFlipRef.current.lr)) {\n        var _tmpNextOffsetX = nextOffsetX;\n\n        if (sameLR) {\n          _tmpNextOffsetX += popupWidth - targetWidth;\n        } else {\n          _tmpNextOffsetX = targetAlignPointBR.x - popupAlignPointTL.x - popupOffsetX;\n        }\n\n        var _newVisibleArea3 = getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY);\n\n        var _newVisibleRecommendArea3 = getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY, visibleRegionArea);\n\n        if ( // Of course use larger one\n        _newVisibleArea3 > originIntersectionVisibleArea || _newVisibleArea3 === originIntersectionVisibleArea && (!isVisibleFirst || // Choose recommend one\n        _newVisibleRecommendArea3 >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.lr = true;\n          nextOffsetX = _tmpNextOffsetX;\n          popupOffsetX = -popupOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.lr = false;\n        }\n      } // ============================ Shift ============================\n\n\n      syncNextPopupPosition();\n      var numShiftX = shiftX === true ? 0 : shiftX;\n\n      if (typeof numShiftX === 'number') {\n        // Left\n        if (nextPopupX < visibleRegionArea.left) {\n          nextOffsetX -= nextPopupX - visibleRegionArea.left - popupOffsetX;\n\n          if (targetRect.x + targetWidth < visibleRegionArea.left + numShiftX) {\n            nextOffsetX += targetRect.x - visibleRegionArea.left + targetWidth - numShiftX;\n          }\n        } // Right\n\n\n        if (nextPopupRight > visibleRegionArea.right) {\n          nextOffsetX -= nextPopupRight - visibleRegionArea.right - popupOffsetX;\n\n          if (targetRect.x > visibleRegionArea.right - numShiftX) {\n            nextOffsetX += targetRect.x - visibleRegionArea.right + numShiftX;\n          }\n        }\n      }\n\n      var numShiftY = shiftY === true ? 0 : shiftY;\n\n      if (typeof numShiftY === 'number') {\n        // Top\n        if (nextPopupY < visibleRegionArea.top) {\n          nextOffsetY -= nextPopupY - visibleRegionArea.top - popupOffsetY; // When target if far away from visible area\n          // Stop shift\n\n          if (targetRect.y + targetHeight < visibleRegionArea.top + numShiftY) {\n            nextOffsetY += targetRect.y - visibleRegionArea.top + targetHeight - numShiftY;\n          }\n        } // Bottom\n\n\n        if (nextPopupBottom > visibleRegionArea.bottom) {\n          nextOffsetY -= nextPopupBottom - visibleRegionArea.bottom - popupOffsetY;\n\n          if (targetRect.y > visibleRegionArea.bottom - numShiftY) {\n            nextOffsetY += targetRect.y - visibleRegionArea.bottom + numShiftY;\n          }\n        }\n      } // ============================ Arrow ============================\n      // Arrow center align\n\n\n      var popupLeft = popupRect.x + nextOffsetX;\n      var popupRight = popupLeft + popupWidth;\n      var popupTop = popupRect.y + nextOffsetY;\n      var popupBottom = popupTop + popupHeight;\n      var targetLeft = targetRect.x;\n      var targetRight = targetLeft + targetWidth;\n      var targetTop = targetRect.y;\n      var targetBottom = targetTop + targetHeight;\n      var maxLeft = Math.max(popupLeft, targetLeft);\n      var minRight = Math.min(popupRight, targetRight);\n      var xCenter = (maxLeft + minRight) / 2;\n      var nextArrowX = xCenter - popupLeft;\n      var maxTop = Math.max(popupTop, targetTop);\n      var minBottom = Math.min(popupBottom, targetBottom);\n      var yCenter = (maxTop + minBottom) / 2;\n      var nextArrowY = yCenter - popupTop;\n      onPopupAlign === null || onPopupAlign === void 0 || onPopupAlign(popupEle, nextAlignInfo); // Additional calculate right & bottom position\n\n      var offsetX4Right = popupMirrorRect.right - popupRect.x - (nextOffsetX + popupRect.width);\n      var offsetY4Bottom = popupMirrorRect.bottom - popupRect.y - (nextOffsetY + popupRect.height);\n      setOffsetInfo({\n        ready: true,\n        offsetX: nextOffsetX / _scaleX,\n        offsetY: nextOffsetY / _scaleY,\n        offsetR: offsetX4Right / _scaleX,\n        offsetB: offsetY4Bottom / _scaleY,\n        arrowX: nextArrowX / _scaleX,\n        arrowY: nextArrowY / _scaleY,\n        scaleX: _scaleX,\n        scaleY: _scaleY,\n        align: nextAlignInfo\n      });\n    }\n  });\n\n  var triggerAlign = function triggerAlign() {\n    alignCountRef.current += 1;\n    var id = alignCountRef.current; // Merge all align requirement into one frame\n\n    Promise.resolve().then(function () {\n      if (alignCountRef.current === id) {\n        onAlign();\n      }\n    });\n  }; // Reset ready status when placement & open changed\n\n\n  var resetReady = function resetReady() {\n    setOffsetInfo(function (ori) {\n      return _objectSpread(_objectSpread({}, ori), {}, {\n        ready: false\n      });\n    });\n  };\n\n  useLayoutEffect(resetReady, [placement]);\n  useLayoutEffect(function () {\n    if (!open) {\n      resetReady();\n    }\n  }, [open]);\n  return [offsetInfo.ready, offsetInfo.offsetX, offsetInfo.offsetY, offsetInfo.offsetR, offsetInfo.offsetB, offsetInfo.arrowX, offsetInfo.arrowY, offsetInfo.scaleX, offsetInfo.scaleY, offsetInfo.align, triggerAlign];\n}","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/@rc-component/trigger/es/hooks/useAlign.js"],"names":["_objectSpread","_slicedToArray","isDOM","isVisible","useEvent","useLayoutEffect","React","collectScroller","getVisibleArea","getWin","toNum","getUnitOffset","size","offset","arguments","length","undefined","offsetStr","concat","cells","match","parseFloat","getNumberOffset","rect","_ref","_ref2","offsetX","offsetY","width","height","splitPoints","points","getAlignPoint","topBottom","leftRight","x","y","reversePoints","index","reverseMap","t","b","l","r","map","point","i","join","useAlign","open","popupEle","target","placement","builtinPlacements","popupAlign","onPopupAlign","_React$useState","useState","ready","offsetR","offsetB","arrowX","arrowY","scaleX","scaleY","align","_React$useState2","offsetInfo","setOffsetInfo","alignCountRef","useRef","scrollerList","useMemo","prevFlipRef","resetFlipCache","current","onAlign","_popupElement$parentE","_popupElement$parentE2","popupElement","doc","ownerDocument","win","_win$getComputedStyle","getComputedStyle","popupPosition","position","originLeft","style","left","originTop","top","originRight","right","originBottom","bottom","originOverflow","overflow","placementInfo","placeholderElement","createElement","parentElement","appendChild","offsetLeft","offsetTop","offsetHeight","offsetWidth","targetRect","Array","isArray","getBoundingClientRect","popupRect","_doc$documentElement","documentElement","clientWidth","clientHeight","scrollWidth","scrollHeight","scrollTop","scrollLeft","popupHeight","popupWidth","targetHeight","targetWidth","visibleRegion","scrollRegion","htmlRegion","VISIBLE","VISIBLE_FIRST","isVisibleFirst","scrollRegionArea","visibleRegionArea","visibleArea","adjustCheckVisibleArea","popupMirrorRect","removeChild","_scaleX","Math","round","_scaleY","targetOffset","_getNumberOffset","_getNumberOffset2","popupOffsetX","popupOffsetY","_getNumberOffset3","_getNumberOffset4","targetOffsetX","targetOffsetY","_ref3","_ref4","popupPoint","targetPoint","targetPoints","popupPoints","targetAlignPoint","popupAlignPoint","nextAlignInfo","nextOffsetX","nextOffsetY","getIntersectionVisibleArea","area","visibleL","max","visibleT","visibleR","min","visibleB","originIntersectionVisibleArea","originIntersectionRecommendArea","targetAlignPointTL","popupAlignPointTL","targetAlignPointBR","popupAlignPointBR","adjustX","adjustY","shiftX","shiftY","supportAdjust","val","nextPopupY","nextPopupBottom","nextPopupX","nextPopupRight","syncNextPopupPosition","needAdjustY","sameTB","bt","tmpNextOffsetY","newVisibleArea","newVisibleRecommendArea","tb","_tmpNextOffsetY","_newVisibleArea","_newVisibleRecommendArea","needAdjustX","sameLR","rl","tmpNextOffsetX","_newVisibleArea2","_newVisibleRecommendArea2","lr","_tmpNextOffsetX","_newVisibleArea3","_newVisibleRecommendArea3","numShiftX","numShiftY","popupLeft","popupRight","popupTop","popupBottom","targetLeft","targetRight","targetTop","targetBottom","maxLeft","minRight","xCenter","nextArrowX","maxTop","minBottom","yCenter","nextArrowY","offsetX4Right","offsetY4Bottom","triggerAlign","id","Promise","resolve","then","resetReady","ori"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isDOM } from \"rc-util/es/Dom/findDOMNode\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { collectScroller, getVisibleArea, getWin, toNum } from \"../util\";\nfunction getUnitOffset(size) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var offsetStr = \"\".concat(offset);\n  var cells = offsetStr.match(/^(.*)\\%$/);\n  if (cells) {\n    return size * (parseFloat(cells[1]) / 100);\n  }\n  return parseFloat(offsetStr);\n}\nfunction getNumberOffset(rect, offset) {\n  var _ref = offset || [],\n    _ref2 = _slicedToArray(_ref, 2),\n    offsetX = _ref2[0],\n    offsetY = _ref2[1];\n  return [getUnitOffset(rect.width, offsetX), getUnitOffset(rect.height, offsetY)];\n}\nfunction splitPoints() {\n  var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return [points[0], points[1]];\n}\nfunction getAlignPoint(rect, points) {\n  var topBottom = points[0];\n  var leftRight = points[1];\n  var x;\n  var y;\n\n  // Top & Bottom\n  if (topBottom === 't') {\n    y = rect.y;\n  } else if (topBottom === 'b') {\n    y = rect.y + rect.height;\n  } else {\n    y = rect.y + rect.height / 2;\n  }\n\n  // Left & Right\n  if (leftRight === 'l') {\n    x = rect.x;\n  } else if (leftRight === 'r') {\n    x = rect.x + rect.width;\n  } else {\n    x = rect.x + rect.width / 2;\n  }\n  return {\n    x: x,\n    y: y\n  };\n}\nfunction reversePoints(points, index) {\n  var reverseMap = {\n    t: 'b',\n    b: 't',\n    l: 'r',\n    r: 'l'\n  };\n  return points.map(function (point, i) {\n    if (i === index) {\n      return reverseMap[point] || 'c';\n    }\n    return point;\n  }).join('');\n}\nexport default function useAlign(open, popupEle, target, placement, builtinPlacements, popupAlign, onPopupAlign) {\n  var _React$useState = React.useState({\n      ready: false,\n      offsetX: 0,\n      offsetY: 0,\n      offsetR: 0,\n      offsetB: 0,\n      arrowX: 0,\n      arrowY: 0,\n      scaleX: 1,\n      scaleY: 1,\n      align: builtinPlacements[placement] || {}\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    offsetInfo = _React$useState2[0],\n    setOffsetInfo = _React$useState2[1];\n  var alignCountRef = React.useRef(0);\n  var scrollerList = React.useMemo(function () {\n    if (!popupEle) {\n      return [];\n    }\n    return collectScroller(popupEle);\n  }, [popupEle]);\n\n  // ========================= Flip ==========================\n  // We will memo flip info.\n  // If size change to make flip, it will memo the flip info and use it in next align.\n  var prevFlipRef = React.useRef({});\n  var resetFlipCache = function resetFlipCache() {\n    prevFlipRef.current = {};\n  };\n  if (!open) {\n    resetFlipCache();\n  }\n\n  // ========================= Align =========================\n  var onAlign = useEvent(function () {\n    if (popupEle && target && open) {\n      var _popupElement$parentE, _popupElement$parentE2;\n      var popupElement = popupEle;\n      var doc = popupElement.ownerDocument;\n      var win = getWin(popupElement);\n      var _win$getComputedStyle = win.getComputedStyle(popupElement),\n        width = _win$getComputedStyle.width,\n        height = _win$getComputedStyle.height,\n        popupPosition = _win$getComputedStyle.position;\n      var originLeft = popupElement.style.left;\n      var originTop = popupElement.style.top;\n      var originRight = popupElement.style.right;\n      var originBottom = popupElement.style.bottom;\n      var originOverflow = popupElement.style.overflow;\n\n      // Placement\n      var placementInfo = _objectSpread(_objectSpread({}, builtinPlacements[placement]), popupAlign);\n\n      // placeholder element\n      var placeholderElement = doc.createElement('div');\n      (_popupElement$parentE = popupElement.parentElement) === null || _popupElement$parentE === void 0 || _popupElement$parentE.appendChild(placeholderElement);\n      placeholderElement.style.left = \"\".concat(popupElement.offsetLeft, \"px\");\n      placeholderElement.style.top = \"\".concat(popupElement.offsetTop, \"px\");\n      placeholderElement.style.position = popupPosition;\n      placeholderElement.style.height = \"\".concat(popupElement.offsetHeight, \"px\");\n      placeholderElement.style.width = \"\".concat(popupElement.offsetWidth, \"px\");\n\n      // Reset first\n      popupElement.style.left = '0';\n      popupElement.style.top = '0';\n      popupElement.style.right = 'auto';\n      popupElement.style.bottom = 'auto';\n      popupElement.style.overflow = 'hidden';\n\n      // Calculate align style, we should consider `transform` case\n      var targetRect;\n      if (Array.isArray(target)) {\n        targetRect = {\n          x: target[0],\n          y: target[1],\n          width: 0,\n          height: 0\n        };\n      } else {\n        var rect = target.getBoundingClientRect();\n        targetRect = {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        };\n      }\n      var popupRect = popupElement.getBoundingClientRect();\n      var _doc$documentElement = doc.documentElement,\n        clientWidth = _doc$documentElement.clientWidth,\n        clientHeight = _doc$documentElement.clientHeight,\n        scrollWidth = _doc$documentElement.scrollWidth,\n        scrollHeight = _doc$documentElement.scrollHeight,\n        scrollTop = _doc$documentElement.scrollTop,\n        scrollLeft = _doc$documentElement.scrollLeft;\n      var popupHeight = popupRect.height;\n      var popupWidth = popupRect.width;\n      var targetHeight = targetRect.height;\n      var targetWidth = targetRect.width;\n\n      // Get bounding of visible area\n      var visibleRegion = {\n        left: 0,\n        top: 0,\n        right: clientWidth,\n        bottom: clientHeight\n      };\n      var scrollRegion = {\n        left: -scrollLeft,\n        top: -scrollTop,\n        right: scrollWidth - scrollLeft,\n        bottom: scrollHeight - scrollTop\n      };\n      var htmlRegion = placementInfo.htmlRegion;\n      var VISIBLE = 'visible';\n      var VISIBLE_FIRST = 'visibleFirst';\n      if (htmlRegion !== 'scroll' && htmlRegion !== VISIBLE_FIRST) {\n        htmlRegion = VISIBLE;\n      }\n      var isVisibleFirst = htmlRegion === VISIBLE_FIRST;\n      var scrollRegionArea = getVisibleArea(scrollRegion, scrollerList);\n      var visibleRegionArea = getVisibleArea(visibleRegion, scrollerList);\n      var visibleArea = htmlRegion === VISIBLE ? visibleRegionArea : scrollRegionArea;\n\n      // When set to `visibleFirst`,\n      // the check `adjust` logic will use `visibleRegion` for check first.\n      var adjustCheckVisibleArea = isVisibleFirst ? visibleRegionArea : visibleArea;\n\n      // Record right & bottom align data\n      popupElement.style.left = 'auto';\n      popupElement.style.top = 'auto';\n      popupElement.style.right = '0';\n      popupElement.style.bottom = '0';\n      var popupMirrorRect = popupElement.getBoundingClientRect();\n\n      // Reset back\n      popupElement.style.left = originLeft;\n      popupElement.style.top = originTop;\n      popupElement.style.right = originRight;\n      popupElement.style.bottom = originBottom;\n      popupElement.style.overflow = originOverflow;\n      (_popupElement$parentE2 = popupElement.parentElement) === null || _popupElement$parentE2 === void 0 || _popupElement$parentE2.removeChild(placeholderElement);\n\n      // Calculate scale\n      var _scaleX = toNum(Math.round(popupWidth / parseFloat(width) * 1000) / 1000);\n      var _scaleY = toNum(Math.round(popupHeight / parseFloat(height) * 1000) / 1000);\n\n      // No need to align since it's not visible in view\n      if (_scaleX === 0 || _scaleY === 0 || isDOM(target) && !isVisible(target)) {\n        return;\n      }\n\n      // Offset\n      var offset = placementInfo.offset,\n        targetOffset = placementInfo.targetOffset;\n      var _getNumberOffset = getNumberOffset(popupRect, offset),\n        _getNumberOffset2 = _slicedToArray(_getNumberOffset, 2),\n        popupOffsetX = _getNumberOffset2[0],\n        popupOffsetY = _getNumberOffset2[1];\n      var _getNumberOffset3 = getNumberOffset(targetRect, targetOffset),\n        _getNumberOffset4 = _slicedToArray(_getNumberOffset3, 2),\n        targetOffsetX = _getNumberOffset4[0],\n        targetOffsetY = _getNumberOffset4[1];\n      targetRect.x -= targetOffsetX;\n      targetRect.y -= targetOffsetY;\n\n      // Points\n      var _ref3 = placementInfo.points || [],\n        _ref4 = _slicedToArray(_ref3, 2),\n        popupPoint = _ref4[0],\n        targetPoint = _ref4[1];\n      var targetPoints = splitPoints(targetPoint);\n      var popupPoints = splitPoints(popupPoint);\n      var targetAlignPoint = getAlignPoint(targetRect, targetPoints);\n      var popupAlignPoint = getAlignPoint(popupRect, popupPoints);\n\n      // Real align info may not same as origin one\n      var nextAlignInfo = _objectSpread({}, placementInfo);\n\n      // Next Offset\n      var nextOffsetX = targetAlignPoint.x - popupAlignPoint.x + popupOffsetX;\n      var nextOffsetY = targetAlignPoint.y - popupAlignPoint.y + popupOffsetY;\n\n      // ============== Intersection ===============\n      // Get area by position. Used for check if flip area is better\n      function getIntersectionVisibleArea(offsetX, offsetY) {\n        var area = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : visibleArea;\n        var l = popupRect.x + offsetX;\n        var t = popupRect.y + offsetY;\n        var r = l + popupWidth;\n        var b = t + popupHeight;\n        var visibleL = Math.max(l, area.left);\n        var visibleT = Math.max(t, area.top);\n        var visibleR = Math.min(r, area.right);\n        var visibleB = Math.min(b, area.bottom);\n        return Math.max(0, (visibleR - visibleL) * (visibleB - visibleT));\n      }\n      var originIntersectionVisibleArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY);\n\n      // As `visibleFirst`, we prepare this for check\n      var originIntersectionRecommendArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY, visibleRegionArea);\n\n      // ========================== Overflow ===========================\n      var targetAlignPointTL = getAlignPoint(targetRect, ['t', 'l']);\n      var popupAlignPointTL = getAlignPoint(popupRect, ['t', 'l']);\n      var targetAlignPointBR = getAlignPoint(targetRect, ['b', 'r']);\n      var popupAlignPointBR = getAlignPoint(popupRect, ['b', 'r']);\n      var overflow = placementInfo.overflow || {};\n      var adjustX = overflow.adjustX,\n        adjustY = overflow.adjustY,\n        shiftX = overflow.shiftX,\n        shiftY = overflow.shiftY;\n      var supportAdjust = function supportAdjust(val) {\n        if (typeof val === 'boolean') {\n          return val;\n        }\n        return val >= 0;\n      };\n\n      // Prepare position\n      var nextPopupY;\n      var nextPopupBottom;\n      var nextPopupX;\n      var nextPopupRight;\n      function syncNextPopupPosition() {\n        nextPopupY = popupRect.y + nextOffsetY;\n        nextPopupBottom = nextPopupY + popupHeight;\n        nextPopupX = popupRect.x + nextOffsetX;\n        nextPopupRight = nextPopupX + popupWidth;\n      }\n      syncNextPopupPosition();\n\n      // >>>>>>>>>> Top & Bottom\n      var needAdjustY = supportAdjust(adjustY);\n      var sameTB = popupPoints[0] === targetPoints[0];\n\n      // Bottom to Top\n      if (needAdjustY && popupPoints[0] === 't' && (nextPopupBottom > adjustCheckVisibleArea.bottom || prevFlipRef.current.bt)) {\n        var tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          tmpNextOffsetY -= popupHeight - targetHeight;\n        } else {\n          tmpNextOffsetY = targetAlignPointTL.y - popupAlignPointBR.y - popupOffsetY;\n        }\n        var newVisibleArea = getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY);\n        var newVisibleRecommendArea = getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        newVisibleArea > originIntersectionVisibleArea || newVisibleArea === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        newVisibleRecommendArea >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.bt = true;\n          nextOffsetY = tmpNextOffsetY;\n          popupOffsetY = -popupOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.bt = false;\n        }\n      }\n\n      // Top to Bottom\n      if (needAdjustY && popupPoints[0] === 'b' && (nextPopupY < adjustCheckVisibleArea.top || prevFlipRef.current.tb)) {\n        var _tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          _tmpNextOffsetY += popupHeight - targetHeight;\n        } else {\n          _tmpNextOffsetY = targetAlignPointBR.y - popupAlignPointTL.y - popupOffsetY;\n        }\n        var _newVisibleArea = getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY);\n        var _newVisibleRecommendArea = getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        _newVisibleArea > originIntersectionVisibleArea || _newVisibleArea === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        _newVisibleRecommendArea >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.tb = true;\n          nextOffsetY = _tmpNextOffsetY;\n          popupOffsetY = -popupOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.tb = false;\n        }\n      }\n\n      // >>>>>>>>>> Left & Right\n      var needAdjustX = supportAdjust(adjustX);\n\n      // >>>>> Flip\n      var sameLR = popupPoints[1] === targetPoints[1];\n\n      // Right to Left\n      if (needAdjustX && popupPoints[1] === 'l' && (nextPopupRight > adjustCheckVisibleArea.right || prevFlipRef.current.rl)) {\n        var tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          tmpNextOffsetX -= popupWidth - targetWidth;\n        } else {\n          tmpNextOffsetX = targetAlignPointTL.x - popupAlignPointBR.x - popupOffsetX;\n        }\n        var _newVisibleArea2 = getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY);\n        var _newVisibleRecommendArea2 = getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        _newVisibleArea2 > originIntersectionVisibleArea || _newVisibleArea2 === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        _newVisibleRecommendArea2 >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.rl = true;\n          nextOffsetX = tmpNextOffsetX;\n          popupOffsetX = -popupOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.rl = false;\n        }\n      }\n\n      // Left to Right\n      if (needAdjustX && popupPoints[1] === 'r' && (nextPopupX < adjustCheckVisibleArea.left || prevFlipRef.current.lr)) {\n        var _tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          _tmpNextOffsetX += popupWidth - targetWidth;\n        } else {\n          _tmpNextOffsetX = targetAlignPointBR.x - popupAlignPointTL.x - popupOffsetX;\n        }\n        var _newVisibleArea3 = getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY);\n        var _newVisibleRecommendArea3 = getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        _newVisibleArea3 > originIntersectionVisibleArea || _newVisibleArea3 === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        _newVisibleRecommendArea3 >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.lr = true;\n          nextOffsetX = _tmpNextOffsetX;\n          popupOffsetX = -popupOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.lr = false;\n        }\n      }\n\n      // ============================ Shift ============================\n      syncNextPopupPosition();\n      var numShiftX = shiftX === true ? 0 : shiftX;\n      if (typeof numShiftX === 'number') {\n        // Left\n        if (nextPopupX < visibleRegionArea.left) {\n          nextOffsetX -= nextPopupX - visibleRegionArea.left - popupOffsetX;\n          if (targetRect.x + targetWidth < visibleRegionArea.left + numShiftX) {\n            nextOffsetX += targetRect.x - visibleRegionArea.left + targetWidth - numShiftX;\n          }\n        }\n\n        // Right\n        if (nextPopupRight > visibleRegionArea.right) {\n          nextOffsetX -= nextPopupRight - visibleRegionArea.right - popupOffsetX;\n          if (targetRect.x > visibleRegionArea.right - numShiftX) {\n            nextOffsetX += targetRect.x - visibleRegionArea.right + numShiftX;\n          }\n        }\n      }\n      var numShiftY = shiftY === true ? 0 : shiftY;\n      if (typeof numShiftY === 'number') {\n        // Top\n        if (nextPopupY < visibleRegionArea.top) {\n          nextOffsetY -= nextPopupY - visibleRegionArea.top - popupOffsetY;\n\n          // When target if far away from visible area\n          // Stop shift\n          if (targetRect.y + targetHeight < visibleRegionArea.top + numShiftY) {\n            nextOffsetY += targetRect.y - visibleRegionArea.top + targetHeight - numShiftY;\n          }\n        }\n\n        // Bottom\n        if (nextPopupBottom > visibleRegionArea.bottom) {\n          nextOffsetY -= nextPopupBottom - visibleRegionArea.bottom - popupOffsetY;\n          if (targetRect.y > visibleRegionArea.bottom - numShiftY) {\n            nextOffsetY += targetRect.y - visibleRegionArea.bottom + numShiftY;\n          }\n        }\n      }\n\n      // ============================ Arrow ============================\n      // Arrow center align\n      var popupLeft = popupRect.x + nextOffsetX;\n      var popupRight = popupLeft + popupWidth;\n      var popupTop = popupRect.y + nextOffsetY;\n      var popupBottom = popupTop + popupHeight;\n      var targetLeft = targetRect.x;\n      var targetRight = targetLeft + targetWidth;\n      var targetTop = targetRect.y;\n      var targetBottom = targetTop + targetHeight;\n      var maxLeft = Math.max(popupLeft, targetLeft);\n      var minRight = Math.min(popupRight, targetRight);\n      var xCenter = (maxLeft + minRight) / 2;\n      var nextArrowX = xCenter - popupLeft;\n      var maxTop = Math.max(popupTop, targetTop);\n      var minBottom = Math.min(popupBottom, targetBottom);\n      var yCenter = (maxTop + minBottom) / 2;\n      var nextArrowY = yCenter - popupTop;\n      onPopupAlign === null || onPopupAlign === void 0 || onPopupAlign(popupEle, nextAlignInfo);\n\n      // Additional calculate right & bottom position\n      var offsetX4Right = popupMirrorRect.right - popupRect.x - (nextOffsetX + popupRect.width);\n      var offsetY4Bottom = popupMirrorRect.bottom - popupRect.y - (nextOffsetY + popupRect.height);\n      setOffsetInfo({\n        ready: true,\n        offsetX: nextOffsetX / _scaleX,\n        offsetY: nextOffsetY / _scaleY,\n        offsetR: offsetX4Right / _scaleX,\n        offsetB: offsetY4Bottom / _scaleY,\n        arrowX: nextArrowX / _scaleX,\n        arrowY: nextArrowY / _scaleY,\n        scaleX: _scaleX,\n        scaleY: _scaleY,\n        align: nextAlignInfo\n      });\n    }\n  });\n  var triggerAlign = function triggerAlign() {\n    alignCountRef.current += 1;\n    var id = alignCountRef.current;\n\n    // Merge all align requirement into one frame\n    Promise.resolve().then(function () {\n      if (alignCountRef.current === id) {\n        onAlign();\n      }\n    });\n  };\n\n  // Reset ready status when placement & open changed\n  var resetReady = function resetReady() {\n    setOffsetInfo(function (ori) {\n      return _objectSpread(_objectSpread({}, ori), {}, {\n        ready: false\n      });\n    });\n  };\n  useLayoutEffect(resetReady, [placement]);\n  useLayoutEffect(function () {\n    if (!open) {\n      resetReady();\n    }\n  }, [open]);\n  return [offsetInfo.ready, offsetInfo.offsetX, offsetInfo.offsetY, offsetInfo.offsetR, offsetInfo.offsetB, offsetInfo.arrowX, offsetInfo.arrowY, offsetInfo.scaleX, offsetInfo.scaleY, offsetInfo.align, triggerAlign];\n}"]},"metadata":{},"sourceType":"module"}