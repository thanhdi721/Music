{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\n\nconst genVirtualStyle = token => {\n  const {\n    componentCls,\n    motionDurationMid,\n    lineWidth,\n    lineType,\n    tableBorderColor,\n    calc\n  } = token;\n  const tableBorder = `${unit(lineWidth)} ${lineType} ${tableBorderColor}`;\n  const rowCellCls = `${componentCls}-expanded-row-cell`;\n  return {\n    [`${componentCls}-wrapper`]: {\n      // ========================== Row ==========================\n      [`${componentCls}-tbody-virtual`]: {\n        [`${componentCls}-row:not(tr)`]: {\n          display: 'flex',\n          boxSizing: 'border-box',\n          width: '100%'\n        },\n        [`${componentCls}-cell`]: {\n          borderBottom: tableBorder,\n          transition: `background ${motionDurationMid}`\n        },\n        [`${componentCls}-expanded-row`]: {\n          [`${rowCellCls}${rowCellCls}-fixed`]: {\n            position: 'sticky',\n            insetInlineStart: 0,\n            overflow: 'hidden',\n            width: `calc(var(--virtual-width) - ${unit(lineWidth)})`,\n            borderInlineEnd: 'none'\n          }\n        }\n      },\n      // ======================== Border =========================\n      [`${componentCls}-bordered`]: {\n        [`${componentCls}-tbody-virtual`]: {\n          '&:after': {\n            content: '\"\"',\n            insetInline: 0,\n            bottom: 0,\n            borderBottom: tableBorder,\n            position: 'absolute'\n          },\n          [`${componentCls}-cell`]: {\n            borderInlineEnd: tableBorder,\n            [`&${componentCls}-cell-fix-right-first:before`]: {\n              content: '\"\"',\n              position: 'absolute',\n              insetBlock: 0,\n              insetInlineStart: calc(lineWidth).mul(-1).equal(),\n              borderInlineStart: tableBorder\n            }\n          }\n        },\n        // Empty placeholder\n        [`&${componentCls}-virtual`]: {\n          [`${componentCls}-placeholder ${componentCls}-cell`]: {\n            borderInlineEnd: tableBorder,\n            borderBottom: tableBorder\n          }\n        }\n      }\n    }\n  };\n};\n\nexport default genVirtualStyle;","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/table/style/virtual.js"],"names":["unit","genVirtualStyle","token","componentCls","motionDurationMid","lineWidth","lineType","tableBorderColor","calc","tableBorder","rowCellCls","display","boxSizing","width","borderBottom","transition","position","insetInlineStart","overflow","borderInlineEnd","content","insetInline","bottom","insetBlock","mul","equal","borderInlineStart"],"mappings":"AAAA,SAASA,IAAT,QAAqB,qBAArB;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,gBALI;AAMJC,IAAAA;AANI,MAOFN,KAPJ;AAQA,QAAMO,WAAW,GAAI,GAAET,IAAI,CAACK,SAAD,CAAY,IAAGC,QAAS,IAAGC,gBAAiB,EAAvE;AACA,QAAMG,UAAU,GAAI,GAAEP,YAAa,oBAAnC;AACA,SAAO;AACL,KAAE,GAAEA,YAAa,UAAjB,GAA6B;AAC3B;AACA,OAAE,GAAEA,YAAa,gBAAjB,GAAmC;AACjC,SAAE,GAAEA,YAAa,cAAjB,GAAiC;AAC/BQ,UAAAA,OAAO,EAAE,MADsB;AAE/BC,UAAAA,SAAS,EAAE,YAFoB;AAG/BC,UAAAA,KAAK,EAAE;AAHwB,SADA;AAMjC,SAAE,GAAEV,YAAa,OAAjB,GAA0B;AACxBW,UAAAA,YAAY,EAAEL,WADU;AAExBM,UAAAA,UAAU,EAAG,cAAaX,iBAAkB;AAFpB,SANO;AAUjC,SAAE,GAAED,YAAa,eAAjB,GAAkC;AAChC,WAAE,GAAEO,UAAW,GAAEA,UAAW,QAA5B,GAAsC;AACpCM,YAAAA,QAAQ,EAAE,QAD0B;AAEpCC,YAAAA,gBAAgB,EAAE,CAFkB;AAGpCC,YAAAA,QAAQ,EAAE,QAH0B;AAIpCL,YAAAA,KAAK,EAAG,+BAA8Bb,IAAI,CAACK,SAAD,CAAY,GAJlB;AAKpCc,YAAAA,eAAe,EAAE;AALmB;AADN;AAVD,OAFR;AAsB3B;AACA,OAAE,GAAEhB,YAAa,WAAjB,GAA8B;AAC5B,SAAE,GAAEA,YAAa,gBAAjB,GAAmC;AACjC,qBAAW;AACTiB,YAAAA,OAAO,EAAE,IADA;AAETC,YAAAA,WAAW,EAAE,CAFJ;AAGTC,YAAAA,MAAM,EAAE,CAHC;AAITR,YAAAA,YAAY,EAAEL,WAJL;AAKTO,YAAAA,QAAQ,EAAE;AALD,WADsB;AAQjC,WAAE,GAAEb,YAAa,OAAjB,GAA0B;AACxBgB,YAAAA,eAAe,EAAEV,WADO;AAExB,aAAE,IAAGN,YAAa,8BAAlB,GAAkD;AAChDiB,cAAAA,OAAO,EAAE,IADuC;AAEhDJ,cAAAA,QAAQ,EAAE,UAFsC;AAGhDO,cAAAA,UAAU,EAAE,CAHoC;AAIhDN,cAAAA,gBAAgB,EAAET,IAAI,CAACH,SAAD,CAAJ,CAAgBmB,GAAhB,CAAoB,CAAC,CAArB,EAAwBC,KAAxB,EAJ8B;AAKhDC,cAAAA,iBAAiB,EAAEjB;AAL6B;AAF1B;AARO,SADP;AAoB5B;AACA,SAAE,IAAGN,YAAa,UAAlB,GAA8B;AAC5B,WAAE,GAAEA,YAAa,gBAAeA,YAAa,OAA7C,GAAsD;AACpDgB,YAAAA,eAAe,EAAEV,WADmC;AAEpDK,YAAAA,YAAY,EAAEL;AAFsC;AAD1B;AArBF;AAvBH;AADxB,GAAP;AAsDD,CAjED;;AAkEA,eAAeR,eAAf","sourcesContent":["import { unit } from '@ant-design/cssinjs';\nconst genVirtualStyle = token => {\n  const {\n    componentCls,\n    motionDurationMid,\n    lineWidth,\n    lineType,\n    tableBorderColor,\n    calc\n  } = token;\n  const tableBorder = `${unit(lineWidth)} ${lineType} ${tableBorderColor}`;\n  const rowCellCls = `${componentCls}-expanded-row-cell`;\n  return {\n    [`${componentCls}-wrapper`]: {\n      // ========================== Row ==========================\n      [`${componentCls}-tbody-virtual`]: {\n        [`${componentCls}-row:not(tr)`]: {\n          display: 'flex',\n          boxSizing: 'border-box',\n          width: '100%'\n        },\n        [`${componentCls}-cell`]: {\n          borderBottom: tableBorder,\n          transition: `background ${motionDurationMid}`\n        },\n        [`${componentCls}-expanded-row`]: {\n          [`${rowCellCls}${rowCellCls}-fixed`]: {\n            position: 'sticky',\n            insetInlineStart: 0,\n            overflow: 'hidden',\n            width: `calc(var(--virtual-width) - ${unit(lineWidth)})`,\n            borderInlineEnd: 'none'\n          }\n        }\n      },\n      // ======================== Border =========================\n      [`${componentCls}-bordered`]: {\n        [`${componentCls}-tbody-virtual`]: {\n          '&:after': {\n            content: '\"\"',\n            insetInline: 0,\n            bottom: 0,\n            borderBottom: tableBorder,\n            position: 'absolute'\n          },\n          [`${componentCls}-cell`]: {\n            borderInlineEnd: tableBorder,\n            [`&${componentCls}-cell-fix-right-first:before`]: {\n              content: '\"\"',\n              position: 'absolute',\n              insetBlock: 0,\n              insetInlineStart: calc(lineWidth).mul(-1).equal(),\n              borderInlineStart: tableBorder\n            }\n          }\n        },\n        // Empty placeholder\n        [`&${componentCls}-virtual`]: {\n          [`${componentCls}-placeholder ${componentCls}-cell`]: {\n            borderInlineEnd: tableBorder,\n            borderBottom: tableBorder\n          }\n        }\n      }\n    }\n  };\n};\nexport default genVirtualStyle;"]},"metadata":{},"sourceType":"module"}