{"ast":null,"code":"// Style as confirm component\nimport { unit } from '@ant-design/cssinjs';\nimport { prepareComponentToken, prepareToken } from '.';\nimport { clearFix } from '../../style';\nimport { genSubStyleComponent } from '../../theme/internal'; // ============================= Confirm ==============================\n\nconst genModalConfirmStyle = token => {\n  const {\n    componentCls,\n    titleFontSize,\n    titleLineHeight,\n    modalConfirmIconSize,\n    fontSize,\n    lineHeight,\n    modalTitleHeight,\n    fontHeight,\n    confirmBodyPadding\n  } = token;\n  const confirmComponentCls = `${componentCls}-confirm`;\n  return {\n    [confirmComponentCls]: {\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [`${token.antCls}-modal-header`]: {\n        display: 'none'\n      },\n      [`${confirmComponentCls}-body-wrapper`]: Object.assign({}, clearFix()),\n      [`&${componentCls} ${componentCls}-body`]: {\n        padding: confirmBodyPadding\n      },\n      // ====================== Body ======================\n      [`${confirmComponentCls}-body`]: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'start',\n        [`> ${token.iconCls}`]: {\n          flex: 'none',\n          fontSize: modalConfirmIconSize,\n          marginInlineEnd: token.confirmIconMarginInlineEnd,\n          marginTop: token.calc(token.calc(fontHeight).sub(modalConfirmIconSize).equal()).div(2).equal()\n        },\n        [`&-has-title > ${token.iconCls}`]: {\n          marginTop: token.calc(token.calc(modalTitleHeight).sub(modalConfirmIconSize).equal()).div(2).equal()\n        }\n      },\n      [`${confirmComponentCls}-paragraph`]: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 'auto',\n        rowGap: token.marginXS\n      },\n      // https://github.com/ant-design/ant-design/issues/48159\n      [`${token.iconCls} + ${confirmComponentCls}-paragraph`]: {\n        maxWidth: `calc(100% - ${unit(token.calc(token.modalConfirmIconSize).add(token.marginSM).equal())})`\n      },\n      [`${confirmComponentCls}-title`]: {\n        color: token.colorTextHeading,\n        fontWeight: token.fontWeightStrong,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight\n      },\n      [`${confirmComponentCls}-content`]: {\n        color: token.colorText,\n        fontSize,\n        lineHeight\n      },\n      // ===================== Footer =====================\n      [`${confirmComponentCls}-btns`]: {\n        textAlign: 'end',\n        marginTop: token.confirmBtnsMarginTop,\n        [`${token.antCls}-btn + ${token.antCls}-btn`]: {\n          marginBottom: 0,\n          marginInlineStart: token.marginXS\n        }\n      }\n    },\n    [`${confirmComponentCls}-error ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorError\n    },\n    [`${confirmComponentCls}-warning ${confirmComponentCls}-body > ${token.iconCls},\n        ${confirmComponentCls}-confirm ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorWarning\n    },\n    [`${confirmComponentCls}-info ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorInfo\n    },\n    [`${confirmComponentCls}-success ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorSuccess\n    }\n  };\n}; // ============================== Export ==============================\n\n\nexport default genSubStyleComponent(['Modal', 'confirm'], token => {\n  const modalToken = prepareToken(token);\n  return [genModalConfirmStyle(modalToken)];\n}, prepareComponentToken, {\n  // confirm is weak than modal since no conflict here\n  order: -1000\n});","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/modal/style/confirm.js"],"names":["unit","prepareComponentToken","prepareToken","clearFix","genSubStyleComponent","genModalConfirmStyle","token","componentCls","titleFontSize","titleLineHeight","modalConfirmIconSize","fontSize","lineHeight","modalTitleHeight","fontHeight","confirmBodyPadding","confirmComponentCls","direction","antCls","display","Object","assign","padding","flexWrap","alignItems","iconCls","flex","marginInlineEnd","confirmIconMarginInlineEnd","marginTop","calc","sub","equal","div","flexDirection","rowGap","marginXS","maxWidth","add","marginSM","color","colorTextHeading","fontWeight","fontWeightStrong","colorText","textAlign","confirmBtnsMarginTop","marginBottom","marginInlineStart","colorError","colorWarning","colorInfo","colorSuccess","modalToken","order"],"mappings":"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","sourcesContent":["// Style as confirm component\nimport { unit } from '@ant-design/cssinjs';\nimport { prepareComponentToken, prepareToken } from '.';\nimport { clearFix } from '../../style';\nimport { genSubStyleComponent } from '../../theme/internal';\n// ============================= Confirm ==============================\nconst genModalConfirmStyle = token => {\n  const {\n    componentCls,\n    titleFontSize,\n    titleLineHeight,\n    modalConfirmIconSize,\n    fontSize,\n    lineHeight,\n    modalTitleHeight,\n    fontHeight,\n    confirmBodyPadding\n  } = token;\n  const confirmComponentCls = `${componentCls}-confirm`;\n  return {\n    [confirmComponentCls]: {\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [`${token.antCls}-modal-header`]: {\n        display: 'none'\n      },\n      [`${confirmComponentCls}-body-wrapper`]: Object.assign({}, clearFix()),\n      [`&${componentCls} ${componentCls}-body`]: {\n        padding: confirmBodyPadding\n      },\n      // ====================== Body ======================\n      [`${confirmComponentCls}-body`]: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'start',\n        [`> ${token.iconCls}`]: {\n          flex: 'none',\n          fontSize: modalConfirmIconSize,\n          marginInlineEnd: token.confirmIconMarginInlineEnd,\n          marginTop: token.calc(token.calc(fontHeight).sub(modalConfirmIconSize).equal()).div(2).equal()\n        },\n        [`&-has-title > ${token.iconCls}`]: {\n          marginTop: token.calc(token.calc(modalTitleHeight).sub(modalConfirmIconSize).equal()).div(2).equal()\n        }\n      },\n      [`${confirmComponentCls}-paragraph`]: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 'auto',\n        rowGap: token.marginXS\n      },\n      // https://github.com/ant-design/ant-design/issues/48159\n      [`${token.iconCls} + ${confirmComponentCls}-paragraph`]: {\n        maxWidth: `calc(100% - ${unit(token.calc(token.modalConfirmIconSize).add(token.marginSM).equal())})`\n      },\n      [`${confirmComponentCls}-title`]: {\n        color: token.colorTextHeading,\n        fontWeight: token.fontWeightStrong,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight\n      },\n      [`${confirmComponentCls}-content`]: {\n        color: token.colorText,\n        fontSize,\n        lineHeight\n      },\n      // ===================== Footer =====================\n      [`${confirmComponentCls}-btns`]: {\n        textAlign: 'end',\n        marginTop: token.confirmBtnsMarginTop,\n        [`${token.antCls}-btn + ${token.antCls}-btn`]: {\n          marginBottom: 0,\n          marginInlineStart: token.marginXS\n        }\n      }\n    },\n    [`${confirmComponentCls}-error ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorError\n    },\n    [`${confirmComponentCls}-warning ${confirmComponentCls}-body > ${token.iconCls},\n        ${confirmComponentCls}-confirm ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorWarning\n    },\n    [`${confirmComponentCls}-info ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorInfo\n    },\n    [`${confirmComponentCls}-success ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorSuccess\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genSubStyleComponent(['Modal', 'confirm'], token => {\n  const modalToken = prepareToken(token);\n  return [genModalConfirmStyle(modalToken)];\n}, prepareComponentToken, {\n  // confirm is weak than modal since no conflict here\n  order: -1000\n});"]},"metadata":{},"sourceType":"module"}