{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { INTERNAL_HOOKS } from 'rc-table';\nimport { convertChildrenToColumns } from \"rc-table/es/hooks/useColumns\";\nimport omit from \"rc-util/es/omit\";\nimport useProxyImperativeHandle from '../_util/hooks/useProxyImperativeHandle';\nimport scrollTo from '../_util/scrollTo';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider/context';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useSize from '../config-provider/hooks/useSize';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport defaultLocale from '../locale/en_US';\nimport Pagination from '../pagination';\nimport Spin from '../spin';\nimport { useToken } from '../theme/internal';\nimport renderExpandIcon from './ExpandIcon';\nimport useContainerWidth from './hooks/useContainerWidth';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useSelection from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport RcTable from './RcTable';\nimport RcVirtualTable from './RcTable/VirtualTable';\nimport useStyle from './style';\nconst EMPTY_LIST = [];\n\nconst InternalTable = (props, ref) => {\n  var _a, _b;\n\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    size: customizeSize,\n    bordered,\n    dropdownPrefixCls: customizeDropdownPrefixCls,\n    dataSource,\n    pagination,\n    rowSelection,\n    rowKey = 'key',\n    rowClassName,\n    columns,\n    children,\n    childrenColumnName: legacyChildrenColumnName,\n    onChange,\n    getPopupContainer,\n    loading,\n    expandIcon,\n    expandable,\n    expandedRowRender,\n    expandIconColumnIndex,\n    indentSize,\n    scroll,\n    sortDirections,\n    locale,\n    showSorterTooltip = {\n      target: 'full-header'\n    },\n    virtual\n  } = props;\n  const warning = devUseWarning('Table');\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof rowKey === 'function' && rowKey.length > 1), 'usage', '`index` parameter of `rowKey` function is deprecated. There is no guarantee that it will work as expected.') : void 0;\n  }\n\n  const baseColumns = React.useMemo(() => columns || convertChildrenToColumns(children), [columns, children]);\n  const needResponsive = React.useMemo(() => baseColumns.some(col => col.responsive), [baseColumns]);\n  const screens = useBreakpoint(needResponsive);\n  const mergedColumns = React.useMemo(() => {\n    const matched = new Set(Object.keys(screens).filter(m => screens[m]));\n    return baseColumns.filter(c => !c.responsive || c.responsive.some(r => matched.has(r)));\n  }, [baseColumns, screens]);\n  const tableProps = omit(props, ['className', 'style', 'columns']);\n  const {\n    locale: contextLocale = defaultLocale,\n    direction,\n    table,\n    renderEmpty,\n    getPrefixCls,\n    getPopupContainer: getContextPopupContainer\n  } = React.useContext(ConfigContext);\n  const mergedSize = useSize(customizeSize);\n  const tableLocale = Object.assign(Object.assign({}, contextLocale.Table), locale);\n  const rawData = dataSource || EMPTY_LIST;\n  const prefixCls = getPrefixCls('table', customizePrefixCls);\n  const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n  const [, token] = useToken();\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const mergedExpandable = Object.assign(Object.assign({\n    childrenColumnName: legacyChildrenColumnName,\n    expandIconColumnIndex\n  }, expandable), {\n    expandIcon: (_a = expandable === null || expandable === void 0 ? void 0 : expandable.expandIcon) !== null && _a !== void 0 ? _a : (_b = table === null || table === void 0 ? void 0 : table.expandable) === null || _b === void 0 ? void 0 : _b.expandIcon\n  });\n  const {\n    childrenColumnName = 'children'\n  } = mergedExpandable;\n  const expandType = React.useMemo(() => {\n    if (rawData.some(item => item === null || item === void 0 ? void 0 : item[childrenColumnName])) {\n      return 'nest';\n    }\n\n    if (expandedRowRender || expandable && expandable.expandedRowRender) {\n      return 'row';\n    }\n\n    return null;\n  }, [rawData]);\n  const internalRefs = {\n    body: React.useRef()\n  }; // ============================ Width =============================\n\n  const getContainerWidth = useContainerWidth(prefixCls); // ============================= Refs =============================\n\n  const rootRef = React.useRef(null);\n  const tblRef = React.useRef(null);\n  useProxyImperativeHandle(ref, () => Object.assign(Object.assign({}, tblRef.current), {\n    nativeElement: rootRef.current\n  })); // ============================ RowKey ============================\n\n  const getRowKey = React.useMemo(() => {\n    if (typeof rowKey === 'function') {\n      return rowKey;\n    }\n\n    return record => record === null || record === void 0 ? void 0 : record[rowKey];\n  }, [rowKey]);\n  const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey); // ============================ Events =============================\n\n  const changeEventInfo = {};\n\n  const triggerOnChange = function (info, action) {\n    let reset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var _a, _b, _c;\n\n    const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\n\n    if (reset) {\n      (_a = changeEventInfo.resetPagination) === null || _a === void 0 ? void 0 : _a.call(changeEventInfo); // Reset event param\n\n      if ((_b = changeInfo.pagination) === null || _b === void 0 ? void 0 : _b.current) {\n        changeInfo.pagination.current = 1;\n      } // Trigger pagination events\n\n\n      if (pagination && pagination.onChange) {\n        pagination.onChange(1, (_c = changeInfo.pagination) === null || _c === void 0 ? void 0 : _c.pageSize);\n      }\n    }\n\n    if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n      scrollTo(0, {\n        getContainer: () => internalRefs.body.current\n      });\n    }\n\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n      currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates, childrenColumnName),\n      action\n    });\n  };\n  /**\n   * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?) to read\n   * state out and then put it back to title render. Move these code into `hooks` but still too\n   * complex. We should provides Table props like `sorter` & `filter` to handle control in next big\n   * version.\n   */\n  // ============================ Sorter =============================\n\n\n  const onSorterChange = (sorter, sorterStates) => {\n    triggerOnChange({\n      sorter,\n      sorterStates\n    }, 'sort', false);\n  };\n\n  const [transformSorterColumns, sortStates, sorterTitleProps, getSorters] = useSorter({\n    prefixCls,\n    mergedColumns,\n    onSorterChange,\n    sortDirections: sortDirections || ['ascend', 'descend'],\n    tableLocale,\n    showSorterTooltip\n  });\n  const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [rawData, sortStates]);\n  changeEventInfo.sorter = getSorters();\n  changeEventInfo.sorterStates = sortStates; // ============================ Filter ============================\n\n  const onFilterChange = (filters, filterStates) => {\n    triggerOnChange({\n      filters,\n      filterStates\n    }, 'filter', true);\n  };\n\n  const [transformFilterColumns, filterStates, filters] = useFilter({\n    prefixCls,\n    locale: tableLocale,\n    dropdownPrefixCls,\n    mergedColumns,\n    onFilterChange,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    rootClassName: classNames(rootClassName, rootCls)\n  });\n  const mergedData = getFilterData(sortedData, filterStates, childrenColumnName);\n  changeEventInfo.filters = filters;\n  changeEventInfo.filterStates = filterStates; // ============================ Column ============================\n\n  const columnTitleProps = React.useMemo(() => {\n    const mergedFilters = {};\n    Object.keys(filters).forEach(filterKey => {\n      if (filters[filterKey] !== null) {\n        mergedFilters[filterKey] = filters[filterKey];\n      }\n    });\n    return Object.assign(Object.assign({}, sorterTitleProps), {\n      filters: mergedFilters\n    });\n  }, [sorterTitleProps, filters]);\n  const [transformTitleColumns] = useTitleColumns(columnTitleProps); // ========================== Pagination ==========================\n\n  const onPaginationChange = (current, pageSize) => {\n    triggerOnChange({\n      pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), {\n        current,\n        pageSize\n      })\n    }, 'paginate');\n  };\n\n  const [mergedPagination, resetPagination] = usePagination(mergedData.length, onPaginationChange, pagination);\n  changeEventInfo.pagination = pagination === false ? {} : getPaginationParam(mergedPagination, pagination);\n  changeEventInfo.resetPagination = resetPagination; // ============================= Data =============================\n\n  const pageData = React.useMemo(() => {\n    if (pagination === false || !mergedPagination.pageSize) {\n      return mergedData;\n    }\n\n    const {\n      current = 1,\n      total,\n      pageSize = DEFAULT_PAGE_SIZE\n    } = mergedPagination;\n    process.env.NODE_ENV !== \"production\" ? warning(current > 0, 'usage', '`current` should be positive number.') : void 0; // Dynamic table data\n\n    if (mergedData.length < total) {\n      if (mergedData.length > pageSize) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'usage', '`dataSource` length is less than `pagination.total` but large than `pagination.pageSize`. Please make sure your config correct data with async mode.') : void 0;\n        return mergedData.slice((current - 1) * pageSize, current * pageSize);\n      }\n\n      return mergedData;\n    }\n\n    return mergedData.slice((current - 1) * pageSize, current * pageSize);\n  }, [!!pagination, mergedData, mergedPagination && mergedPagination.current, mergedPagination && mergedPagination.pageSize, mergedPagination && mergedPagination.total]); // ========================== Selections ==========================\n\n  const [transformSelectionColumns, selectedKeySet] = useSelection({\n    prefixCls,\n    data: mergedData,\n    pageData,\n    getRowKey,\n    getRecordByKey,\n    expandType,\n    childrenColumnName,\n    locale: tableLocale,\n    getPopupContainer: getPopupContainer || getContextPopupContainer\n  }, rowSelection);\n\n  const internalRowClassName = (record, index, indent) => {\n    let mergedRowClassName;\n\n    if (typeof rowClassName === 'function') {\n      mergedRowClassName = classNames(rowClassName(record, index, indent));\n    } else {\n      mergedRowClassName = classNames(rowClassName);\n    }\n\n    return classNames({\n      [`${prefixCls}-row-selected`]: selectedKeySet.has(getRowKey(record, index))\n    }, mergedRowClassName);\n  }; // ========================== Expandable ==========================\n  // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\n\n\n  mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon; // Customize expandable icon\n\n  mergedExpandable.expandIcon = mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale); // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n\n  if (expandType === 'nest' && mergedExpandable.expandIconColumnIndex === undefined) {\n    mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n  } else if (mergedExpandable.expandIconColumnIndex > 0 && rowSelection) {\n    mergedExpandable.expandIconColumnIndex -= 1;\n  } // Indent size\n\n\n  if (typeof mergedExpandable.indentSize !== 'number') {\n    mergedExpandable.indentSize = typeof indentSize === 'number' ? indentSize : 15;\n  } // ============================ Render ============================\n\n\n  const transformColumns = React.useCallback(innerColumns => transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns)))), [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n  let topPaginationNode;\n  let bottomPaginationNode;\n\n  if (pagination !== false && (mergedPagination === null || mergedPagination === void 0 ? void 0 : mergedPagination.total)) {\n    let paginationSize;\n\n    if (mergedPagination.size) {\n      paginationSize = mergedPagination.size;\n    } else {\n      paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\n    }\n\n    const renderPagination = position => /*#__PURE__*/React.createElement(Pagination, Object.assign({}, mergedPagination, {\n      className: classNames(`${prefixCls}-pagination ${prefixCls}-pagination-${position}`, mergedPagination.className),\n      size: paginationSize\n    }));\n\n    const defaultPosition = direction === 'rtl' ? 'left' : 'right';\n    const {\n      position\n    } = mergedPagination;\n\n    if (position !== null && Array.isArray(position)) {\n      const topPos = position.find(p => p.includes('top'));\n      const bottomPos = position.find(p => p.includes('bottom'));\n      const isDisable = position.every(p => `${p}` === 'none');\n\n      if (!topPos && !bottomPos && !isDisable) {\n        bottomPaginationNode = renderPagination(defaultPosition);\n      }\n\n      if (topPos) {\n        topPaginationNode = renderPagination(topPos.toLowerCase().replace('top', ''));\n      }\n\n      if (bottomPos) {\n        bottomPaginationNode = renderPagination(bottomPos.toLowerCase().replace('bottom', ''));\n      }\n    } else {\n      bottomPaginationNode = renderPagination(defaultPosition);\n    }\n  } // >>>>>>>>> Spinning\n\n\n  let spinProps;\n\n  if (typeof loading === 'boolean') {\n    spinProps = {\n      spinning: loading\n    };\n  } else if (typeof loading === 'object') {\n    spinProps = Object.assign({\n      spinning: true\n    }, loading);\n  }\n\n  const wrapperClassNames = classNames(cssVarCls, rootCls, `${prefixCls}-wrapper`, table === null || table === void 0 ? void 0 : table.className, {\n    [`${prefixCls}-wrapper-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  const mergedStyle = Object.assign(Object.assign({}, table === null || table === void 0 ? void 0 : table.style), style);\n  const emptyText = locale && locale.emptyText || (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Table')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n    componentName: \"Table\"\n  }); // ========================== Render ==========================\n\n  const TableComponent = virtual ? RcVirtualTable : RcTable; // >>> Virtual Table props. We set height here since it will affect height collection\n\n  const virtualProps = {};\n  const listItemHeight = React.useMemo(() => {\n    const {\n      fontSize,\n      lineHeight,\n      padding,\n      paddingXS,\n      paddingSM\n    } = token;\n    const fontHeight = Math.floor(fontSize * lineHeight);\n\n    switch (mergedSize) {\n      case 'large':\n        return padding * 2 + fontHeight;\n\n      case 'small':\n        return paddingXS * 2 + fontHeight;\n\n      default:\n        return paddingSM * 2 + fontHeight;\n    }\n  }, [token, mergedSize]);\n\n  if (virtual) {\n    virtualProps.listItemHeight = listItemHeight;\n  }\n\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n    ref: rootRef,\n    className: wrapperClassNames,\n    style: mergedStyle\n  }, /*#__PURE__*/React.createElement(Spin, Object.assign({\n    spinning: false\n  }, spinProps), topPaginationNode, /*#__PURE__*/React.createElement(TableComponent, Object.assign({}, virtualProps, tableProps, {\n    ref: tblRef,\n    columns: mergedColumns,\n    direction: direction,\n    expandable: mergedExpandable,\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-middle`]: mergedSize === 'middle',\n      [`${prefixCls}-small`]: mergedSize === 'small',\n      [`${prefixCls}-bordered`]: bordered,\n      [`${prefixCls}-empty`]: rawData.length === 0\n    }, cssVarCls, rootCls, hashId),\n    data: pageData,\n    rowKey: getRowKey,\n    rowClassName: internalRowClassName,\n    emptyText: emptyText,\n    // Internal\n    internalHooks: INTERNAL_HOOKS,\n    internalRefs: internalRefs,\n    transformColumns: transformColumns,\n    getContainerWidth: getContainerWidth\n  })), bottomPaginationNode)));\n};\n\nexport default /*#__PURE__*/React.forwardRef(InternalTable);","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/table/InternalTable.js"],"names":["React","classNames","INTERNAL_HOOKS","convertChildrenToColumns","omit","useProxyImperativeHandle","scrollTo","devUseWarning","ConfigContext","DefaultRenderEmpty","useCSSVarCls","useSize","useBreakpoint","defaultLocale","Pagination","Spin","useToken","renderExpandIcon","useContainerWidth","useFilter","getFilterData","useLazyKVMap","usePagination","DEFAULT_PAGE_SIZE","getPaginationParam","useSelection","useSorter","getSortData","useTitleColumns","RcTable","RcVirtualTable","useStyle","EMPTY_LIST","InternalTable","props","ref","_a","_b","prefixCls","customizePrefixCls","className","rootClassName","style","size","customizeSize","bordered","dropdownPrefixCls","customizeDropdownPrefixCls","dataSource","pagination","rowSelection","rowKey","rowClassName","columns","children","childrenColumnName","legacyChildrenColumnName","onChange","getPopupContainer","loading","expandIcon","expandable","expandedRowRender","expandIconColumnIndex","indentSize","scroll","sortDirections","locale","showSorterTooltip","target","virtual","warning","process","env","NODE_ENV","length","baseColumns","useMemo","needResponsive","some","col","responsive","screens","mergedColumns","matched","Set","Object","keys","filter","m","c","r","has","tableProps","contextLocale","direction","table","renderEmpty","getPrefixCls","getContextPopupContainer","useContext","mergedSize","tableLocale","assign","Table","rawData","token","rootCls","wrapCSSVar","hashId","cssVarCls","mergedExpandable","expandType","item","internalRefs","body","useRef","getContainerWidth","rootRef","tblRef","current","nativeElement","getRowKey","record","getRecordByKey","changeEventInfo","triggerOnChange","info","action","reset","arguments","undefined","_c","changeInfo","resetPagination","call","pageSize","scrollToFirstRowOnChange","getContainer","filters","sorter","currentDataSource","sorterStates","filterStates","onSorterChange","transformSorterColumns","sortStates","sorterTitleProps","getSorters","sortedData","onFilterChange","transformFilterColumns","mergedData","columnTitleProps","mergedFilters","forEach","filterKey","transformTitleColumns","onPaginationChange","mergedPagination","pageData","total","slice","transformSelectionColumns","selectedKeySet","data","internalRowClassName","index","indent","mergedRowClassName","__PARENT_RENDER_ICON__","transformColumns","useCallback","innerColumns","topPaginationNode","bottomPaginationNode","paginationSize","renderPagination","position","createElement","defaultPosition","Array","isArray","topPos","find","p","includes","bottomPos","isDisable","every","toLowerCase","replace","spinProps","spinning","wrapperClassNames","mergedStyle","emptyText","componentName","TableComponent","virtualProps","listItemHeight","fontSize","lineHeight","padding","paddingXS","paddingSM","fontHeight","Math","floor","internalHooks","forwardRef"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { INTERNAL_HOOKS } from 'rc-table';\nimport { convertChildrenToColumns } from \"rc-table/es/hooks/useColumns\";\nimport omit from \"rc-util/es/omit\";\nimport useProxyImperativeHandle from '../_util/hooks/useProxyImperativeHandle';\nimport scrollTo from '../_util/scrollTo';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider/context';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useSize from '../config-provider/hooks/useSize';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport defaultLocale from '../locale/en_US';\nimport Pagination from '../pagination';\nimport Spin from '../spin';\nimport { useToken } from '../theme/internal';\nimport renderExpandIcon from './ExpandIcon';\nimport useContainerWidth from './hooks/useContainerWidth';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useSelection from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport RcTable from './RcTable';\nimport RcVirtualTable from './RcTable/VirtualTable';\nimport useStyle from './style';\nconst EMPTY_LIST = [];\nconst InternalTable = (props, ref) => {\n  var _a, _b;\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    size: customizeSize,\n    bordered,\n    dropdownPrefixCls: customizeDropdownPrefixCls,\n    dataSource,\n    pagination,\n    rowSelection,\n    rowKey = 'key',\n    rowClassName,\n    columns,\n    children,\n    childrenColumnName: legacyChildrenColumnName,\n    onChange,\n    getPopupContainer,\n    loading,\n    expandIcon,\n    expandable,\n    expandedRowRender,\n    expandIconColumnIndex,\n    indentSize,\n    scroll,\n    sortDirections,\n    locale,\n    showSorterTooltip = {\n      target: 'full-header'\n    },\n    virtual\n  } = props;\n  const warning = devUseWarning('Table');\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof rowKey === 'function' && rowKey.length > 1), 'usage', '`index` parameter of `rowKey` function is deprecated. There is no guarantee that it will work as expected.') : void 0;\n  }\n  const baseColumns = React.useMemo(() => columns || convertChildrenToColumns(children), [columns, children]);\n  const needResponsive = React.useMemo(() => baseColumns.some(col => col.responsive), [baseColumns]);\n  const screens = useBreakpoint(needResponsive);\n  const mergedColumns = React.useMemo(() => {\n    const matched = new Set(Object.keys(screens).filter(m => screens[m]));\n    return baseColumns.filter(c => !c.responsive || c.responsive.some(r => matched.has(r)));\n  }, [baseColumns, screens]);\n  const tableProps = omit(props, ['className', 'style', 'columns']);\n  const {\n    locale: contextLocale = defaultLocale,\n    direction,\n    table,\n    renderEmpty,\n    getPrefixCls,\n    getPopupContainer: getContextPopupContainer\n  } = React.useContext(ConfigContext);\n  const mergedSize = useSize(customizeSize);\n  const tableLocale = Object.assign(Object.assign({}, contextLocale.Table), locale);\n  const rawData = dataSource || EMPTY_LIST;\n  const prefixCls = getPrefixCls('table', customizePrefixCls);\n  const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n  const [, token] = useToken();\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const mergedExpandable = Object.assign(Object.assign({\n    childrenColumnName: legacyChildrenColumnName,\n    expandIconColumnIndex\n  }, expandable), {\n    expandIcon: (_a = expandable === null || expandable === void 0 ? void 0 : expandable.expandIcon) !== null && _a !== void 0 ? _a : (_b = table === null || table === void 0 ? void 0 : table.expandable) === null || _b === void 0 ? void 0 : _b.expandIcon\n  });\n  const {\n    childrenColumnName = 'children'\n  } = mergedExpandable;\n  const expandType = React.useMemo(() => {\n    if (rawData.some(item => item === null || item === void 0 ? void 0 : item[childrenColumnName])) {\n      return 'nest';\n    }\n    if (expandedRowRender || expandable && expandable.expandedRowRender) {\n      return 'row';\n    }\n    return null;\n  }, [rawData]);\n  const internalRefs = {\n    body: React.useRef()\n  };\n  // ============================ Width =============================\n  const getContainerWidth = useContainerWidth(prefixCls);\n  // ============================= Refs =============================\n  const rootRef = React.useRef(null);\n  const tblRef = React.useRef(null);\n  useProxyImperativeHandle(ref, () => Object.assign(Object.assign({}, tblRef.current), {\n    nativeElement: rootRef.current\n  }));\n  // ============================ RowKey ============================\n  const getRowKey = React.useMemo(() => {\n    if (typeof rowKey === 'function') {\n      return rowKey;\n    }\n    return record => record === null || record === void 0 ? void 0 : record[rowKey];\n  }, [rowKey]);\n  const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey);\n  // ============================ Events =============================\n  const changeEventInfo = {};\n  const triggerOnChange = function (info, action) {\n    let reset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _a, _b, _c;\n    const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\n    if (reset) {\n      (_a = changeEventInfo.resetPagination) === null || _a === void 0 ? void 0 : _a.call(changeEventInfo);\n      // Reset event param\n      if ((_b = changeInfo.pagination) === null || _b === void 0 ? void 0 : _b.current) {\n        changeInfo.pagination.current = 1;\n      }\n      // Trigger pagination events\n      if (pagination && pagination.onChange) {\n        pagination.onChange(1, (_c = changeInfo.pagination) === null || _c === void 0 ? void 0 : _c.pageSize);\n      }\n    }\n    if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n      scrollTo(0, {\n        getContainer: () => internalRefs.body.current\n      });\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n      currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates, childrenColumnName),\n      action\n    });\n  };\n  /**\n   * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?) to read\n   * state out and then put it back to title render. Move these code into `hooks` but still too\n   * complex. We should provides Table props like `sorter` & `filter` to handle control in next big\n   * version.\n   */\n  // ============================ Sorter =============================\n  const onSorterChange = (sorter, sorterStates) => {\n    triggerOnChange({\n      sorter,\n      sorterStates\n    }, 'sort', false);\n  };\n  const [transformSorterColumns, sortStates, sorterTitleProps, getSorters] = useSorter({\n    prefixCls,\n    mergedColumns,\n    onSorterChange,\n    sortDirections: sortDirections || ['ascend', 'descend'],\n    tableLocale,\n    showSorterTooltip\n  });\n  const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [rawData, sortStates]);\n  changeEventInfo.sorter = getSorters();\n  changeEventInfo.sorterStates = sortStates;\n  // ============================ Filter ============================\n  const onFilterChange = (filters, filterStates) => {\n    triggerOnChange({\n      filters,\n      filterStates\n    }, 'filter', true);\n  };\n  const [transformFilterColumns, filterStates, filters] = useFilter({\n    prefixCls,\n    locale: tableLocale,\n    dropdownPrefixCls,\n    mergedColumns,\n    onFilterChange,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    rootClassName: classNames(rootClassName, rootCls)\n  });\n  const mergedData = getFilterData(sortedData, filterStates, childrenColumnName);\n  changeEventInfo.filters = filters;\n  changeEventInfo.filterStates = filterStates;\n  // ============================ Column ============================\n  const columnTitleProps = React.useMemo(() => {\n    const mergedFilters = {};\n    Object.keys(filters).forEach(filterKey => {\n      if (filters[filterKey] !== null) {\n        mergedFilters[filterKey] = filters[filterKey];\n      }\n    });\n    return Object.assign(Object.assign({}, sorterTitleProps), {\n      filters: mergedFilters\n    });\n  }, [sorterTitleProps, filters]);\n  const [transformTitleColumns] = useTitleColumns(columnTitleProps);\n  // ========================== Pagination ==========================\n  const onPaginationChange = (current, pageSize) => {\n    triggerOnChange({\n      pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), {\n        current,\n        pageSize\n      })\n    }, 'paginate');\n  };\n  const [mergedPagination, resetPagination] = usePagination(mergedData.length, onPaginationChange, pagination);\n  changeEventInfo.pagination = pagination === false ? {} : getPaginationParam(mergedPagination, pagination);\n  changeEventInfo.resetPagination = resetPagination;\n  // ============================= Data =============================\n  const pageData = React.useMemo(() => {\n    if (pagination === false || !mergedPagination.pageSize) {\n      return mergedData;\n    }\n    const {\n      current = 1,\n      total,\n      pageSize = DEFAULT_PAGE_SIZE\n    } = mergedPagination;\n    process.env.NODE_ENV !== \"production\" ? warning(current > 0, 'usage', '`current` should be positive number.') : void 0;\n    // Dynamic table data\n    if (mergedData.length < total) {\n      if (mergedData.length > pageSize) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'usage', '`dataSource` length is less than `pagination.total` but large than `pagination.pageSize`. Please make sure your config correct data with async mode.') : void 0;\n        return mergedData.slice((current - 1) * pageSize, current * pageSize);\n      }\n      return mergedData;\n    }\n    return mergedData.slice((current - 1) * pageSize, current * pageSize);\n  }, [!!pagination, mergedData, mergedPagination && mergedPagination.current, mergedPagination && mergedPagination.pageSize, mergedPagination && mergedPagination.total]);\n  // ========================== Selections ==========================\n  const [transformSelectionColumns, selectedKeySet] = useSelection({\n    prefixCls,\n    data: mergedData,\n    pageData,\n    getRowKey,\n    getRecordByKey,\n    expandType,\n    childrenColumnName,\n    locale: tableLocale,\n    getPopupContainer: getPopupContainer || getContextPopupContainer\n  }, rowSelection);\n  const internalRowClassName = (record, index, indent) => {\n    let mergedRowClassName;\n    if (typeof rowClassName === 'function') {\n      mergedRowClassName = classNames(rowClassName(record, index, indent));\n    } else {\n      mergedRowClassName = classNames(rowClassName);\n    }\n    return classNames({\n      [`${prefixCls}-row-selected`]: selectedKeySet.has(getRowKey(record, index))\n    }, mergedRowClassName);\n  };\n  // ========================== Expandable ==========================\n  // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\n  mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon;\n  // Customize expandable icon\n  mergedExpandable.expandIcon = mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale);\n  // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n  if (expandType === 'nest' && mergedExpandable.expandIconColumnIndex === undefined) {\n    mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n  } else if (mergedExpandable.expandIconColumnIndex > 0 && rowSelection) {\n    mergedExpandable.expandIconColumnIndex -= 1;\n  }\n  // Indent size\n  if (typeof mergedExpandable.indentSize !== 'number') {\n    mergedExpandable.indentSize = typeof indentSize === 'number' ? indentSize : 15;\n  }\n  // ============================ Render ============================\n  const transformColumns = React.useCallback(innerColumns => transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns)))), [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n  let topPaginationNode;\n  let bottomPaginationNode;\n  if (pagination !== false && (mergedPagination === null || mergedPagination === void 0 ? void 0 : mergedPagination.total)) {\n    let paginationSize;\n    if (mergedPagination.size) {\n      paginationSize = mergedPagination.size;\n    } else {\n      paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\n    }\n    const renderPagination = position => ( /*#__PURE__*/React.createElement(Pagination, Object.assign({}, mergedPagination, {\n      className: classNames(`${prefixCls}-pagination ${prefixCls}-pagination-${position}`, mergedPagination.className),\n      size: paginationSize\n    })));\n    const defaultPosition = direction === 'rtl' ? 'left' : 'right';\n    const {\n      position\n    } = mergedPagination;\n    if (position !== null && Array.isArray(position)) {\n      const topPos = position.find(p => p.includes('top'));\n      const bottomPos = position.find(p => p.includes('bottom'));\n      const isDisable = position.every(p => `${p}` === 'none');\n      if (!topPos && !bottomPos && !isDisable) {\n        bottomPaginationNode = renderPagination(defaultPosition);\n      }\n      if (topPos) {\n        topPaginationNode = renderPagination(topPos.toLowerCase().replace('top', ''));\n      }\n      if (bottomPos) {\n        bottomPaginationNode = renderPagination(bottomPos.toLowerCase().replace('bottom', ''));\n      }\n    } else {\n      bottomPaginationNode = renderPagination(defaultPosition);\n    }\n  }\n  // >>>>>>>>> Spinning\n  let spinProps;\n  if (typeof loading === 'boolean') {\n    spinProps = {\n      spinning: loading\n    };\n  } else if (typeof loading === 'object') {\n    spinProps = Object.assign({\n      spinning: true\n    }, loading);\n  }\n  const wrapperClassNames = classNames(cssVarCls, rootCls, `${prefixCls}-wrapper`, table === null || table === void 0 ? void 0 : table.className, {\n    [`${prefixCls}-wrapper-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  const mergedStyle = Object.assign(Object.assign({}, table === null || table === void 0 ? void 0 : table.style), style);\n  const emptyText = locale && locale.emptyText || (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Table')) || ( /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n    componentName: \"Table\"\n  }));\n  // ========================== Render ==========================\n  const TableComponent = virtual ? RcVirtualTable : RcTable;\n  // >>> Virtual Table props. We set height here since it will affect height collection\n  const virtualProps = {};\n  const listItemHeight = React.useMemo(() => {\n    const {\n      fontSize,\n      lineHeight,\n      padding,\n      paddingXS,\n      paddingSM\n    } = token;\n    const fontHeight = Math.floor(fontSize * lineHeight);\n    switch (mergedSize) {\n      case 'large':\n        return padding * 2 + fontHeight;\n      case 'small':\n        return paddingXS * 2 + fontHeight;\n      default:\n        return paddingSM * 2 + fontHeight;\n    }\n  }, [token, mergedSize]);\n  if (virtual) {\n    virtualProps.listItemHeight = listItemHeight;\n  }\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n    ref: rootRef,\n    className: wrapperClassNames,\n    style: mergedStyle\n  }, /*#__PURE__*/React.createElement(Spin, Object.assign({\n    spinning: false\n  }, spinProps), topPaginationNode, /*#__PURE__*/React.createElement(TableComponent, Object.assign({}, virtualProps, tableProps, {\n    ref: tblRef,\n    columns: mergedColumns,\n    direction: direction,\n    expandable: mergedExpandable,\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-middle`]: mergedSize === 'middle',\n      [`${prefixCls}-small`]: mergedSize === 'small',\n      [`${prefixCls}-bordered`]: bordered,\n      [`${prefixCls}-empty`]: rawData.length === 0\n    }, cssVarCls, rootCls, hashId),\n    data: pageData,\n    rowKey: getRowKey,\n    rowClassName: internalRowClassName,\n    emptyText: emptyText,\n    // Internal\n    internalHooks: INTERNAL_HOOKS,\n    internalRefs: internalRefs,\n    transformColumns: transformColumns,\n    getContainerWidth: getContainerWidth\n  })), bottomPaginationNode)));\n};\nexport default /*#__PURE__*/React.forwardRef(InternalTable);"]},"metadata":{},"sourceType":"module"}