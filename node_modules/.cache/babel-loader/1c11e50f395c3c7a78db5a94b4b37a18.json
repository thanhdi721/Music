{"ast":null,"code":"const getMoveTranslate = direction => {\n  const value = '100%';\n  return {\n    left: `translateX(-${value})`,\n    right: `translateX(${value})`,\n    top: `translateY(-${value})`,\n    bottom: `translateY(${value})`\n  }[direction];\n};\n\nconst getEnterLeaveStyle = (startStyle, endStyle) => ({\n  '&-enter, &-appear': Object.assign(Object.assign({}, startStyle), {\n    '&-active': endStyle\n  }),\n  '&-leave': Object.assign(Object.assign({}, endStyle), {\n    '&-active': startStyle\n  })\n});\n\nconst getFadeStyle = (from, duration) => Object.assign({\n  '&-enter, &-appear, &-leave': {\n    '&-start': {\n      transition: 'none'\n    },\n    '&-active': {\n      transition: `all ${duration}`\n    }\n  }\n}, getEnterLeaveStyle({\n  opacity: from\n}, {\n  opacity: 1\n}));\n\nconst getPanelMotionStyles = (direction, duration) => [getFadeStyle(0.7, duration), getEnterLeaveStyle({\n  transform: getMoveTranslate(direction)\n}, {\n  transform: 'none'\n})];\n\nconst genMotionStyle = token => {\n  const {\n    componentCls,\n    motionDurationSlow\n  } = token;\n  return {\n    [componentCls]: {\n      // ======================== Mask ========================\n      [`${componentCls}-mask-motion`]: getFadeStyle(0, motionDurationSlow),\n      // ======================= Panel ========================\n      [`${componentCls}-panel-motion`]: ['left', 'right', 'top', 'bottom'].reduce((obj, direction) => Object.assign(Object.assign({}, obj), {\n        [`&-${direction}`]: getPanelMotionStyles(direction, motionDurationSlow)\n      }), {})\n    }\n  };\n};\n\nexport default genMotionStyle;","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/drawer/style/motion.js"],"names":["getMoveTranslate","direction","value","left","right","top","bottom","getEnterLeaveStyle","startStyle","endStyle","Object","assign","getFadeStyle","from","duration","transition","opacity","getPanelMotionStyles","transform","genMotionStyle","token","componentCls","motionDurationSlow","reduce","obj"],"mappings":"AAAA,MAAMA,gBAAgB,GAAGC,SAAS,IAAI;AACpC,QAAMC,KAAK,GAAG,MAAd;AACA,SAAO;AACLC,IAAAA,IAAI,EAAG,eAAcD,KAAM,GADtB;AAELE,IAAAA,KAAK,EAAG,cAAaF,KAAM,GAFtB;AAGLG,IAAAA,GAAG,EAAG,eAAcH,KAAM,GAHrB;AAILI,IAAAA,MAAM,EAAG,cAAaJ,KAAM;AAJvB,IAKLD,SALK,CAAP;AAMD,CARD;;AASA,MAAMM,kBAAkB,GAAG,CAACC,UAAD,EAAaC,QAAb,MAA2B;AACpD,uBAAqBC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,UAAlB,CAAd,EAA6C;AAChE,gBAAYC;AADoD,GAA7C,CAD+B;AAIpD,aAAWC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,QAAlB,CAAd,EAA2C;AACpD,gBAAYD;AADwC,GAA3C;AAJyC,CAA3B,CAA3B;;AAQA,MAAMI,YAAY,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoBJ,MAAM,CAACC,MAAP,CAAc;AACrD,gCAA8B;AAC5B,eAAW;AACTI,MAAAA,UAAU,EAAE;AADH,KADiB;AAI5B,gBAAY;AACVA,MAAAA,UAAU,EAAG,OAAMD,QAAS;AADlB;AAJgB;AADuB,CAAd,EAStCP,kBAAkB,CAAC;AACpBS,EAAAA,OAAO,EAAEH;AADW,CAAD,EAElB;AACDG,EAAAA,OAAO,EAAE;AADR,CAFkB,CAToB,CAAzC;;AAcA,MAAMC,oBAAoB,GAAG,CAAChB,SAAD,EAAYa,QAAZ,KAAyB,CAACF,YAAY,CAAC,GAAD,EAAME,QAAN,CAAb,EAA8BP,kBAAkB,CAAC;AACrGW,EAAAA,SAAS,EAAElB,gBAAgB,CAACC,SAAD;AAD0E,CAAD,EAEnG;AACDiB,EAAAA,SAAS,EAAE;AADV,CAFmG,CAAhD,CAAtD;;AAKA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC9B,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA;AAFI,MAGFF,KAHJ;AAIA,SAAO;AACL,KAACC,YAAD,GAAgB;AACd;AACA,OAAE,GAAEA,YAAa,cAAjB,GAAiCT,YAAY,CAAC,CAAD,EAAIU,kBAAJ,CAF/B;AAGd;AACA,OAAE,GAAED,YAAa,eAAjB,GAAkC,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,EAAmCE,MAAnC,CAA0C,CAACC,GAAD,EAAMvB,SAAN,KAAoBS,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBa,GAAlB,CAAd,EAAsC;AACpI,SAAE,KAAIvB,SAAU,EAAhB,GAAoBgB,oBAAoB,CAAChB,SAAD,EAAYqB,kBAAZ;AAD4F,OAAtC,CAA9D,EAE9B,EAF8B;AAJpB;AADX,GAAP;AAUD,CAfD;;AAgBA,eAAeH,cAAf","sourcesContent":["const getMoveTranslate = direction => {\n  const value = '100%';\n  return {\n    left: `translateX(-${value})`,\n    right: `translateX(${value})`,\n    top: `translateY(-${value})`,\n    bottom: `translateY(${value})`\n  }[direction];\n};\nconst getEnterLeaveStyle = (startStyle, endStyle) => ({\n  '&-enter, &-appear': Object.assign(Object.assign({}, startStyle), {\n    '&-active': endStyle\n  }),\n  '&-leave': Object.assign(Object.assign({}, endStyle), {\n    '&-active': startStyle\n  })\n});\nconst getFadeStyle = (from, duration) => Object.assign({\n  '&-enter, &-appear, &-leave': {\n    '&-start': {\n      transition: 'none'\n    },\n    '&-active': {\n      transition: `all ${duration}`\n    }\n  }\n}, getEnterLeaveStyle({\n  opacity: from\n}, {\n  opacity: 1\n}));\nconst getPanelMotionStyles = (direction, duration) => [getFadeStyle(0.7, duration), getEnterLeaveStyle({\n  transform: getMoveTranslate(direction)\n}, {\n  transform: 'none'\n})];\nconst genMotionStyle = token => {\n  const {\n    componentCls,\n    motionDurationSlow\n  } = token;\n  return {\n    [componentCls]: {\n      // ======================== Mask ========================\n      [`${componentCls}-mask-motion`]: getFadeStyle(0, motionDurationSlow),\n      // ======================= Panel ========================\n      [`${componentCls}-panel-motion`]: ['left', 'right', 'top', 'bottom'].reduce((obj, direction) => Object.assign(Object.assign({}, obj), {\n        [`&-${direction}`]: getPanelMotionStyles(direction, motionDurationSlow)\n      }), {})\n    }\n  };\n};\nexport default genMotionStyle;"]},"metadata":{},"sourceType":"module"}