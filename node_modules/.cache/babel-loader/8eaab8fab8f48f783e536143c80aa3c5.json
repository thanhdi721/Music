{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nimport { getRowFormat, toArray } from \"../../utils/miscUtil\";\nexport function useFieldFormat(picker, locale, format) {\n  return React.useMemo(function () {\n    var rawFormat = getRowFormat(picker, locale, format);\n    var formatList = toArray(rawFormat);\n    var firstFormat = formatList[0];\n    var maskFormat = _typeof(firstFormat) === 'object' && firstFormat.type === 'mask' ? firstFormat.format : null;\n    return [// Format list\n    formatList.map(function (config) {\n      return typeof config === 'string' || typeof config === 'function' ? config : config.format;\n    }), // Mask Format\n    maskFormat];\n  }, [picker, locale, format]);\n}","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-picker/es/PickerInput/hooks/useFieldFormat.js"],"names":["_typeof","React","getRowFormat","toArray","useFieldFormat","picker","locale","format","useMemo","rawFormat","formatList","firstFormat","maskFormat","type","map","config"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,mCAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,sBAAtC;AACA,OAAO,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,MAAxC,EAAgD;AACrD,SAAON,KAAK,CAACO,OAAN,CAAc,YAAY;AAC/B,QAAIC,SAAS,GAAGP,YAAY,CAACG,MAAD,EAASC,MAAT,EAAiBC,MAAjB,CAA5B;AACA,QAAIG,UAAU,GAAGP,OAAO,CAACM,SAAD,CAAxB;AACA,QAAIE,WAAW,GAAGD,UAAU,CAAC,CAAD,CAA5B;AACA,QAAIE,UAAU,GAAGZ,OAAO,CAACW,WAAD,CAAP,KAAyB,QAAzB,IAAqCA,WAAW,CAACE,IAAZ,KAAqB,MAA1D,GAAmEF,WAAW,CAACJ,MAA/E,GAAwF,IAAzG;AACA,WAAO,CACP;AACAG,IAAAA,UAAU,CAACI,GAAX,CAAe,UAAUC,MAAV,EAAkB;AAC/B,aAAO,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,OAAOA,MAAP,KAAkB,UAAhD,GAA6DA,MAA7D,GAAsEA,MAAM,CAACR,MAApF;AACD,KAFD,CAFO,EAKP;AACAK,IAAAA,UANO,CAAP;AAOD,GAZM,EAYJ,CAACP,MAAD,EAASC,MAAT,EAAiBC,MAAjB,CAZI,CAAP;AAaD","sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nimport { getRowFormat, toArray } from \"../../utils/miscUtil\";\nexport function useFieldFormat(picker, locale, format) {\n  return React.useMemo(function () {\n    var rawFormat = getRowFormat(picker, locale, format);\n    var formatList = toArray(rawFormat);\n    var firstFormat = formatList[0];\n    var maskFormat = _typeof(firstFormat) === 'object' && firstFormat.type === 'mask' ? firstFormat.format : null;\n    return [\n    // Format list\n    formatList.map(function (config) {\n      return typeof config === 'string' || typeof config === 'function' ? config : config.format;\n    }),\n    // Mask Format\n    maskFormat];\n  }, [picker, locale, format]);\n}"]},"metadata":{},"sourceType":"module"}