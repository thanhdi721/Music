{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"noData\", \"columns\", \"flattenColumns\", \"colWidths\", \"columCount\", \"stickyOffsets\", \"direction\", \"fixHeader\", \"stickyTopOffset\", \"stickyBottomOffset\", \"stickyClassName\", \"onScroll\", \"maxContentScroll\", \"children\"];\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport { fillRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport ColGroup from \"../ColGroup\";\nimport TableContext from \"../context/TableContext\";\nimport devRenderTimes from \"../hooks/useRenderTimes\";\n\nfunction useColumnWidth(colWidths, columCount) {\n  return useMemo(function () {\n    var cloneColumns = [];\n\n    for (var i = 0; i < columCount; i += 1) {\n      var val = colWidths[i];\n\n      if (val !== undefined) {\n        cloneColumns[i] = val;\n      } else {\n        return null;\n      }\n    }\n\n    return cloneColumns;\n  }, [colWidths.join('_'), columCount]);\n}\n\nvar FixedHolder = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    devRenderTimes(props);\n  }\n\n  var className = props.className,\n      noData = props.noData,\n      columns = props.columns,\n      flattenColumns = props.flattenColumns,\n      colWidths = props.colWidths,\n      columCount = props.columCount,\n      stickyOffsets = props.stickyOffsets,\n      direction = props.direction,\n      fixHeader = props.fixHeader,\n      stickyTopOffset = props.stickyTopOffset,\n      stickyBottomOffset = props.stickyBottomOffset,\n      stickyClassName = props.stickyClassName,\n      onScroll = props.onScroll,\n      maxContentScroll = props.maxContentScroll,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var _useContext = useContext(TableContext, ['prefixCls', 'scrollbarSize', 'isSticky', 'getComponent']),\n      prefixCls = _useContext.prefixCls,\n      scrollbarSize = _useContext.scrollbarSize,\n      isSticky = _useContext.isSticky,\n      getComponent = _useContext.getComponent;\n\n  var TableComponent = getComponent(['header', 'table'], 'table');\n  var combinationScrollBarSize = isSticky && !fixHeader ? 0 : scrollbarSize; // Pass wheel to scroll event\n\n  var scrollRef = React.useRef(null);\n  var setScrollRef = React.useCallback(function (element) {\n    fillRef(ref, element);\n    fillRef(scrollRef, element);\n  }, []);\n  React.useEffect(function () {\n    var _scrollRef$current;\n\n    function onWheel(e) {\n      var _ref = e,\n          currentTarget = _ref.currentTarget,\n          deltaX = _ref.deltaX;\n\n      if (deltaX) {\n        onScroll({\n          currentTarget: currentTarget,\n          scrollLeft: currentTarget.scrollLeft + deltaX\n        });\n        e.preventDefault();\n      }\n    }\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 || _scrollRef$current.addEventListener('wheel', onWheel);\n    return function () {\n      var _scrollRef$current2;\n\n      (_scrollRef$current2 = scrollRef.current) === null || _scrollRef$current2 === void 0 || _scrollRef$current2.removeEventListener('wheel', onWheel);\n    };\n  }, []); // Check if all flattenColumns has width\n\n  var allFlattenColumnsWithWidth = React.useMemo(function () {\n    return flattenColumns.every(function (column) {\n      return column.width;\n    });\n  }, [flattenColumns]); // Add scrollbar column\n\n  var lastColumn = flattenColumns[flattenColumns.length - 1];\n  var ScrollBarColumn = {\n    fixed: lastColumn ? lastColumn.fixed : null,\n    scrollbar: true,\n    onHeaderCell: function onHeaderCell() {\n      return {\n        className: \"\".concat(prefixCls, \"-cell-scrollbar\")\n      };\n    }\n  };\n  var columnsWithScrollbar = useMemo(function () {\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(columns), [ScrollBarColumn]) : columns;\n  }, [combinationScrollBarSize, columns]);\n  var flattenColumnsWithScrollbar = useMemo(function () {\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(flattenColumns), [ScrollBarColumn]) : flattenColumns;\n  }, [combinationScrollBarSize, flattenColumns]); // Calculate the sticky offsets\n\n  var headerStickyOffsets = useMemo(function () {\n    var right = stickyOffsets.right,\n        left = stickyOffsets.left;\n    return _objectSpread(_objectSpread({}, stickyOffsets), {}, {\n      left: direction === 'rtl' ? [].concat(_toConsumableArray(left.map(function (width) {\n        return width + combinationScrollBarSize;\n      })), [0]) : left,\n      right: direction === 'rtl' ? right : [].concat(_toConsumableArray(right.map(function (width) {\n        return width + combinationScrollBarSize;\n      })), [0]),\n      isSticky: isSticky\n    });\n  }, [combinationScrollBarSize, stickyOffsets, isSticky]);\n  var mergedColumnWidth = useColumnWidth(colWidths, columCount);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: _objectSpread({\n      overflow: 'hidden'\n    }, isSticky ? {\n      top: stickyTopOffset,\n      bottom: stickyBottomOffset\n    } : {}),\n    ref: setScrollRef,\n    className: classNames(className, _defineProperty({}, stickyClassName, !!stickyClassName))\n  }, /*#__PURE__*/React.createElement(TableComponent, {\n    style: {\n      tableLayout: 'fixed',\n      visibility: noData || mergedColumnWidth ? null : 'hidden'\n    }\n  }, (!noData || !maxContentScroll || allFlattenColumnsWithWidth) && /*#__PURE__*/React.createElement(ColGroup, {\n    colWidths: mergedColumnWidth ? [].concat(_toConsumableArray(mergedColumnWidth), [combinationScrollBarSize]) : [],\n    columCount: columCount + 1,\n    columns: flattenColumnsWithScrollbar\n  }), children(_objectSpread(_objectSpread({}, restProps), {}, {\n    stickyOffsets: headerStickyOffsets,\n    columns: columnsWithScrollbar,\n    flattenColumns: flattenColumnsWithScrollbar\n  }))));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  FixedHolder.displayName = 'FixedHolder';\n}\n/** Return a table in div as fixed element which contains sticky info */\n// export default responseImmutable(FixedHolder);\n\n\nexport default /*#__PURE__*/React.memo(FixedHolder);","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-table/es/FixedHolder/index.js"],"names":["_defineProperty","_objectSpread","_toConsumableArray","_objectWithoutProperties","_excluded","useContext","classNames","fillRef","React","useMemo","ColGroup","TableContext","devRenderTimes","useColumnWidth","colWidths","columCount","cloneColumns","i","val","undefined","join","FixedHolder","forwardRef","props","ref","process","env","NODE_ENV","className","noData","columns","flattenColumns","stickyOffsets","direction","fixHeader","stickyTopOffset","stickyBottomOffset","stickyClassName","onScroll","maxContentScroll","children","restProps","_useContext","prefixCls","scrollbarSize","isSticky","getComponent","TableComponent","combinationScrollBarSize","scrollRef","useRef","setScrollRef","useCallback","element","useEffect","_scrollRef$current","onWheel","e","_ref","currentTarget","deltaX","scrollLeft","preventDefault","current","addEventListener","_scrollRef$current2","removeEventListener","allFlattenColumnsWithWidth","every","column","width","lastColumn","length","ScrollBarColumn","fixed","scrollbar","onHeaderCell","concat","columnsWithScrollbar","flattenColumnsWithScrollbar","headerStickyOffsets","right","left","map","mergedColumnWidth","createElement","style","overflow","top","bottom","tableLayout","visibility","displayName","memo"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"noData\", \"columns\", \"flattenColumns\", \"colWidths\", \"columCount\", \"stickyOffsets\", \"direction\", \"fixHeader\", \"stickyTopOffset\", \"stickyBottomOffset\", \"stickyClassName\", \"onScroll\", \"maxContentScroll\", \"children\"];\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport { fillRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport ColGroup from \"../ColGroup\";\nimport TableContext from \"../context/TableContext\";\nimport devRenderTimes from \"../hooks/useRenderTimes\";\nfunction useColumnWidth(colWidths, columCount) {\n  return useMemo(function () {\n    var cloneColumns = [];\n    for (var i = 0; i < columCount; i += 1) {\n      var val = colWidths[i];\n      if (val !== undefined) {\n        cloneColumns[i] = val;\n      } else {\n        return null;\n      }\n    }\n    return cloneColumns;\n  }, [colWidths.join('_'), columCount]);\n}\nvar FixedHolder = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    devRenderTimes(props);\n  }\n  var className = props.className,\n    noData = props.noData,\n    columns = props.columns,\n    flattenColumns = props.flattenColumns,\n    colWidths = props.colWidths,\n    columCount = props.columCount,\n    stickyOffsets = props.stickyOffsets,\n    direction = props.direction,\n    fixHeader = props.fixHeader,\n    stickyTopOffset = props.stickyTopOffset,\n    stickyBottomOffset = props.stickyBottomOffset,\n    stickyClassName = props.stickyClassName,\n    onScroll = props.onScroll,\n    maxContentScroll = props.maxContentScroll,\n    children = props.children,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var _useContext = useContext(TableContext, ['prefixCls', 'scrollbarSize', 'isSticky', 'getComponent']),\n    prefixCls = _useContext.prefixCls,\n    scrollbarSize = _useContext.scrollbarSize,\n    isSticky = _useContext.isSticky,\n    getComponent = _useContext.getComponent;\n  var TableComponent = getComponent(['header', 'table'], 'table');\n  var combinationScrollBarSize = isSticky && !fixHeader ? 0 : scrollbarSize;\n\n  // Pass wheel to scroll event\n  var scrollRef = React.useRef(null);\n  var setScrollRef = React.useCallback(function (element) {\n    fillRef(ref, element);\n    fillRef(scrollRef, element);\n  }, []);\n  React.useEffect(function () {\n    var _scrollRef$current;\n    function onWheel(e) {\n      var _ref = e,\n        currentTarget = _ref.currentTarget,\n        deltaX = _ref.deltaX;\n      if (deltaX) {\n        onScroll({\n          currentTarget: currentTarget,\n          scrollLeft: currentTarget.scrollLeft + deltaX\n        });\n        e.preventDefault();\n      }\n    }\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 || _scrollRef$current.addEventListener('wheel', onWheel);\n    return function () {\n      var _scrollRef$current2;\n      (_scrollRef$current2 = scrollRef.current) === null || _scrollRef$current2 === void 0 || _scrollRef$current2.removeEventListener('wheel', onWheel);\n    };\n  }, []);\n\n  // Check if all flattenColumns has width\n  var allFlattenColumnsWithWidth = React.useMemo(function () {\n    return flattenColumns.every(function (column) {\n      return column.width;\n    });\n  }, [flattenColumns]);\n\n  // Add scrollbar column\n  var lastColumn = flattenColumns[flattenColumns.length - 1];\n  var ScrollBarColumn = {\n    fixed: lastColumn ? lastColumn.fixed : null,\n    scrollbar: true,\n    onHeaderCell: function onHeaderCell() {\n      return {\n        className: \"\".concat(prefixCls, \"-cell-scrollbar\")\n      };\n    }\n  };\n  var columnsWithScrollbar = useMemo(function () {\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(columns), [ScrollBarColumn]) : columns;\n  }, [combinationScrollBarSize, columns]);\n  var flattenColumnsWithScrollbar = useMemo(function () {\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(flattenColumns), [ScrollBarColumn]) : flattenColumns;\n  }, [combinationScrollBarSize, flattenColumns]);\n\n  // Calculate the sticky offsets\n  var headerStickyOffsets = useMemo(function () {\n    var right = stickyOffsets.right,\n      left = stickyOffsets.left;\n    return _objectSpread(_objectSpread({}, stickyOffsets), {}, {\n      left: direction === 'rtl' ? [].concat(_toConsumableArray(left.map(function (width) {\n        return width + combinationScrollBarSize;\n      })), [0]) : left,\n      right: direction === 'rtl' ? right : [].concat(_toConsumableArray(right.map(function (width) {\n        return width + combinationScrollBarSize;\n      })), [0]),\n      isSticky: isSticky\n    });\n  }, [combinationScrollBarSize, stickyOffsets, isSticky]);\n  var mergedColumnWidth = useColumnWidth(colWidths, columCount);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: _objectSpread({\n      overflow: 'hidden'\n    }, isSticky ? {\n      top: stickyTopOffset,\n      bottom: stickyBottomOffset\n    } : {}),\n    ref: setScrollRef,\n    className: classNames(className, _defineProperty({}, stickyClassName, !!stickyClassName))\n  }, /*#__PURE__*/React.createElement(TableComponent, {\n    style: {\n      tableLayout: 'fixed',\n      visibility: noData || mergedColumnWidth ? null : 'hidden'\n    }\n  }, (!noData || !maxContentScroll || allFlattenColumnsWithWidth) && /*#__PURE__*/React.createElement(ColGroup, {\n    colWidths: mergedColumnWidth ? [].concat(_toConsumableArray(mergedColumnWidth), [combinationScrollBarSize]) : [],\n    columCount: columCount + 1,\n    columns: flattenColumnsWithScrollbar\n  }), children(_objectSpread(_objectSpread({}, restProps), {}, {\n    stickyOffsets: headerStickyOffsets,\n    columns: columnsWithScrollbar,\n    flattenColumns: flattenColumnsWithScrollbar\n  }))));\n});\nif (process.env.NODE_ENV !== 'production') {\n  FixedHolder.displayName = 'FixedHolder';\n}\n\n/** Return a table in div as fixed element which contains sticky info */\n// export default responseImmutable(FixedHolder);\nexport default /*#__PURE__*/React.memo(FixedHolder);"]},"metadata":{},"sourceType":"module"}