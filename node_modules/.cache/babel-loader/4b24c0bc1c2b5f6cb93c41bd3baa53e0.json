{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genCollapseMotion, zoomIn } from '../../style/motion';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport genFormValidateMotionStyle from './explain';\n\nconst resetForm = token => ({\n  legend: {\n    display: 'block',\n    width: '100%',\n    marginBottom: token.marginLG,\n    padding: 0,\n    color: token.colorTextDescription,\n    fontSize: token.fontSizeLG,\n    lineHeight: 'inherit',\n    border: 0,\n    borderBottom: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorder}`\n  },\n  'input[type=\"search\"]': {\n    boxSizing: 'border-box'\n  },\n  // Position radios and checkboxes better\n  'input[type=\"radio\"], input[type=\"checkbox\"]': {\n    lineHeight: 'normal'\n  },\n  'input[type=\"file\"]': {\n    display: 'block'\n  },\n  // Make range inputs behave like textual form controls\n  'input[type=\"range\"]': {\n    display: 'block',\n    width: '100%'\n  },\n  // Make multiple select elements height not fixed\n  'select[multiple], select[size]': {\n    height: 'auto'\n  },\n  // Focus for file, radio, and checkbox\n  [`input[type='file']:focus,\n  input[type='radio']:focus,\n  input[type='checkbox']:focus`]: {\n    outline: 0,\n    boxShadow: `0 0 0 ${unit(token.controlOutlineWidth)} ${token.controlOutline}`\n  },\n  // Adjust output element\n  output: {\n    display: 'block',\n    paddingTop: 15,\n    color: token.colorText,\n    fontSize: token.fontSize,\n    lineHeight: token.lineHeight\n  }\n});\n\nconst genFormSize = (token, height) => {\n  const {\n    formItemCls\n  } = token;\n  return {\n    [formItemCls]: {\n      [`${formItemCls}-label > label`]: {\n        height\n      },\n      [`${formItemCls}-control-input`]: {\n        minHeight: height\n      }\n    }\n  };\n};\n\nconst genFormStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [token.componentCls]: Object.assign(Object.assign(Object.assign({}, resetComponent(token)), resetForm(token)), {\n      [`${componentCls}-text`]: {\n        display: 'inline-block',\n        paddingInlineEnd: token.paddingSM\n      },\n      // ================================================================\n      // =                             Size                             =\n      // ================================================================\n      '&-small': Object.assign({}, genFormSize(token, token.controlHeightSM)),\n      '&-large': Object.assign({}, genFormSize(token, token.controlHeightLG))\n    })\n  };\n};\n\nconst genFormItemStyle = token => {\n  const {\n    formItemCls,\n    iconCls,\n    componentCls,\n    rootPrefixCls,\n    labelRequiredMarkColor,\n    labelColor,\n    labelFontSize,\n    labelHeight,\n    labelColonMarginInlineStart,\n    labelColonMarginInlineEnd,\n    itemMarginBottom\n  } = token;\n  return {\n    [formItemCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      marginBottom: itemMarginBottom,\n      verticalAlign: 'top',\n      '&-with-help': {\n        transition: 'none'\n      },\n      [`&-hidden,\n        &-hidden.${rootPrefixCls}-row`]: {\n        // https://github.com/ant-design/ant-design/issues/26141\n        display: 'none'\n      },\n      '&-has-warning': {\n        [`${formItemCls}-split`]: {\n          color: token.colorError\n        }\n      },\n      '&-has-error': {\n        [`${formItemCls}-split`]: {\n          color: token.colorWarning\n        }\n      },\n      // ==============================================================\n      // =                            Label                           =\n      // ==============================================================\n      [`${formItemCls}-label`]: {\n        flexGrow: 0,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textAlign: 'end',\n        verticalAlign: 'middle',\n        '&-left': {\n          textAlign: 'start'\n        },\n        '&-wrap': {\n          overflow: 'unset',\n          lineHeight: token.lineHeight,\n          whiteSpace: 'unset'\n        },\n        '> label': {\n          position: 'relative',\n          display: 'inline-flex',\n          alignItems: 'center',\n          maxWidth: '100%',\n          height: labelHeight,\n          color: labelColor,\n          fontSize: labelFontSize,\n          [`> ${iconCls}`]: {\n            fontSize: token.fontSize,\n            verticalAlign: 'top'\n          },\n          // Required mark\n          [`&${formItemCls}-required:not(${formItemCls}-required-mark-optional)::before`]: {\n            display: 'inline-block',\n            marginInlineEnd: token.marginXXS,\n            color: labelRequiredMarkColor,\n            fontSize: token.fontSize,\n            fontFamily: 'SimSun, sans-serif',\n            lineHeight: 1,\n            content: '\"*\"',\n            [`${componentCls}-hide-required-mark &`]: {\n              display: 'none'\n            }\n          },\n          // Optional mark\n          [`${formItemCls}-optional`]: {\n            display: 'inline-block',\n            marginInlineStart: token.marginXXS,\n            color: token.colorTextDescription,\n            [`${componentCls}-hide-required-mark &`]: {\n              display: 'none'\n            }\n          },\n          // Optional mark\n          [`${formItemCls}-tooltip`]: {\n            color: token.colorTextDescription,\n            cursor: 'help',\n            writingMode: 'horizontal-tb',\n            marginInlineStart: token.marginXXS\n          },\n          '&::after': {\n            content: '\":\"',\n            position: 'relative',\n            marginBlock: 0,\n            marginInlineStart: labelColonMarginInlineStart,\n            marginInlineEnd: labelColonMarginInlineEnd\n          },\n          [`&${formItemCls}-no-colon::after`]: {\n            content: '\"\\\\a0\"'\n          }\n        }\n      },\n      // ==============================================================\n      // =                            Input                           =\n      // ==============================================================\n      [`${formItemCls}-control`]: {\n        ['--ant-display']: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        [`&:first-child:not([class^=\"'${rootPrefixCls}-col-'\"]):not([class*=\"' ${rootPrefixCls}-col-'\"])`]: {\n          width: '100%'\n        },\n        '&-input': {\n          position: 'relative',\n          display: 'flex',\n          alignItems: 'center',\n          minHeight: token.controlHeight,\n          '&-content': {\n            flex: 'auto',\n            maxWidth: '100%'\n          }\n        }\n      },\n      // ==============================================================\n      // =                           Explain                          =\n      // ==============================================================\n      [formItemCls]: {\n        '&-explain, &-extra': {\n          clear: 'both',\n          color: token.colorTextDescription,\n          fontSize: token.fontSize,\n          lineHeight: token.lineHeight\n        },\n        '&-explain-connected': {\n          width: '100%'\n        },\n        '&-extra': {\n          minHeight: token.controlHeightSM,\n          transition: `color ${token.motionDurationMid} ${token.motionEaseOut}` // sync input color transition\n\n        },\n        '&-explain': {\n          '&-error': {\n            color: token.colorError\n          },\n          '&-warning': {\n            color: token.colorWarning\n          }\n        }\n      },\n      [`&-with-help ${formItemCls}-explain`]: {\n        height: 'auto',\n        opacity: 1\n      },\n      // ==============================================================\n      // =                        Feedback Icon                       =\n      // ==============================================================\n      [`${formItemCls}-feedback-icon`]: {\n        fontSize: token.fontSize,\n        textAlign: 'center',\n        visibility: 'visible',\n        animationName: zoomIn,\n        animationDuration: token.motionDurationMid,\n        animationTimingFunction: token.motionEaseOutBack,\n        pointerEvents: 'none',\n        '&-success': {\n          color: token.colorSuccess\n        },\n        '&-error': {\n          color: token.colorError\n        },\n        '&-warning': {\n          color: token.colorWarning\n        },\n        '&-validating': {\n          color: token.colorPrimary\n        }\n      }\n    })\n  };\n};\n\nconst genHorizontalStyle = token => {\n  const {\n    componentCls,\n    formItemCls\n  } = token;\n  return {\n    [`${componentCls}-horizontal`]: {\n      [`${formItemCls}-label`]: {\n        flexGrow: 0\n      },\n      [`${formItemCls}-control`]: {\n        flex: '1 1 0',\n        // https://github.com/ant-design/ant-design/issues/32777\n        // https://github.com/ant-design/ant-design/issues/33773\n        minWidth: 0\n      },\n      // Do not change this to `ant-col-24`! `-24` match all the responsive rules\n      // https://github.com/ant-design/ant-design/issues/32980\n      // https://github.com/ant-design/ant-design/issues/34903\n      // https://github.com/ant-design/ant-design/issues/44538\n      [`${formItemCls}-label[class$='-24'], ${formItemCls}-label[class*='-24 ']`]: {\n        [`& + ${formItemCls}-control`]: {\n          minWidth: 'unset'\n        }\n      }\n    }\n  };\n};\n\nconst genInlineStyle = token => {\n  const {\n    componentCls,\n    formItemCls\n  } = token;\n  return {\n    [`${componentCls}-inline`]: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      [formItemCls]: {\n        flex: 'none',\n        marginInlineEnd: token.margin,\n        marginBottom: 0,\n        '&-row': {\n          flexWrap: 'nowrap'\n        },\n        [`> ${formItemCls}-label,\n        > ${formItemCls}-control`]: {\n          display: 'inline-block',\n          verticalAlign: 'top'\n        },\n        [`> ${formItemCls}-label`]: {\n          flex: 'none'\n        },\n        [`${componentCls}-text`]: {\n          display: 'inline-block'\n        },\n        [`${formItemCls}-has-feedback`]: {\n          display: 'inline-block'\n        }\n      }\n    }\n  };\n};\n\nconst makeVerticalLayoutLabel = token => ({\n  padding: token.verticalLabelPadding,\n  margin: token.verticalLabelMargin,\n  whiteSpace: 'initial',\n  textAlign: 'start',\n  '> label': {\n    margin: 0,\n    '&::after': {\n      // https://github.com/ant-design/ant-design/issues/43538\n      visibility: 'hidden'\n    }\n  }\n});\n\nconst makeVerticalLayout = token => {\n  const {\n    componentCls,\n    formItemCls,\n    rootPrefixCls\n  } = token;\n  return {\n    [`${formItemCls} ${formItemCls}-label`]: makeVerticalLayoutLabel(token),\n    // ref: https://github.com/ant-design/ant-design/issues/45122\n    [`${componentCls}:not(${componentCls}-inline)`]: {\n      [formItemCls]: {\n        flexWrap: 'wrap',\n        [`${formItemCls}-label, ${formItemCls}-control`]: {\n          // When developer pass `xs: { span }`,\n          // It should follow the `xs` screen config\n          // ref: https://github.com/ant-design/ant-design/issues/44386\n          [`&:not([class*=\" ${rootPrefixCls}-col-xs\"])`]: {\n            flex: '0 0 100%',\n            maxWidth: '100%'\n          }\n        }\n      }\n    }\n  };\n};\n\nconst genVerticalStyle = token => {\n  const {\n    componentCls,\n    formItemCls,\n    rootPrefixCls\n  } = token;\n  return {\n    [`${componentCls}-vertical`]: {\n      [formItemCls]: {\n        '&-row': {\n          flexDirection: 'column'\n        },\n        '&-label > label': {\n          height: 'auto'\n        },\n        [`${componentCls}-item-control`]: {\n          width: '100%'\n        }\n      }\n    },\n    [`${componentCls}-vertical ${formItemCls}-label,\n      .${rootPrefixCls}-col-24${formItemCls}-label,\n      .${rootPrefixCls}-col-xl-24${formItemCls}-label`]: makeVerticalLayoutLabel(token),\n    [`@media (max-width: ${unit(token.screenXSMax)})`]: [makeVerticalLayout(token), {\n      [componentCls]: {\n        [`.${rootPrefixCls}-col-xs-24${formItemCls}-label`]: makeVerticalLayoutLabel(token)\n      }\n    }],\n    [`@media (max-width: ${unit(token.screenSMMax)})`]: {\n      [componentCls]: {\n        [`.${rootPrefixCls}-col-sm-24${formItemCls}-label`]: makeVerticalLayoutLabel(token)\n      }\n    },\n    [`@media (max-width: ${unit(token.screenMDMax)})`]: {\n      [componentCls]: {\n        [`.${rootPrefixCls}-col-md-24${formItemCls}-label`]: makeVerticalLayoutLabel(token)\n      }\n    },\n    [`@media (max-width: ${unit(token.screenLGMax)})`]: {\n      [componentCls]: {\n        [`.${rootPrefixCls}-col-lg-24${formItemCls}-label`]: makeVerticalLayoutLabel(token)\n      }\n    }\n  };\n}; // ============================== Export ==============================\n\n\nexport const prepareComponentToken = token => ({\n  labelRequiredMarkColor: token.colorError,\n  labelColor: token.colorTextHeading,\n  labelFontSize: token.fontSize,\n  labelHeight: token.controlHeight,\n  labelColonMarginInlineStart: token.marginXXS / 2,\n  labelColonMarginInlineEnd: token.marginXS,\n  itemMarginBottom: token.marginLG,\n  verticalLabelPadding: `0 0 ${token.paddingXS}px`,\n  verticalLabelMargin: 0\n});\nexport const prepareToken = (token, rootPrefixCls) => {\n  const formToken = mergeToken(token, {\n    formItemCls: `${token.componentCls}-item`,\n    rootPrefixCls\n  });\n  return formToken;\n};\nexport default genStyleHooks('Form', (token, _ref) => {\n  let {\n    rootPrefixCls\n  } = _ref;\n  const formToken = prepareToken(token, rootPrefixCls);\n  return [genFormStyle(formToken), genFormItemStyle(formToken), genFormValidateMotionStyle(formToken), genHorizontalStyle(formToken), genInlineStyle(formToken), genVerticalStyle(formToken), genCollapseMotion(formToken), zoomIn];\n}, prepareComponentToken, {\n  // Let From style before the Grid\n  // ref https://github.com/ant-design/ant-design/issues/44386\n  order: -1000\n});","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/form/style/index.js"],"names":["unit","resetComponent","genCollapseMotion","zoomIn","genStyleHooks","mergeToken","genFormValidateMotionStyle","resetForm","token","legend","display","width","marginBottom","marginLG","padding","color","colorTextDescription","fontSize","fontSizeLG","lineHeight","border","borderBottom","lineWidth","lineType","colorBorder","boxSizing","height","outline","boxShadow","controlOutlineWidth","controlOutline","output","paddingTop","colorText","genFormSize","formItemCls","minHeight","genFormStyle","componentCls","Object","assign","paddingInlineEnd","paddingSM","controlHeightSM","controlHeightLG","genFormItemStyle","iconCls","rootPrefixCls","labelRequiredMarkColor","labelColor","labelFontSize","labelHeight","labelColonMarginInlineStart","labelColonMarginInlineEnd","itemMarginBottom","verticalAlign","transition","colorError","colorWarning","flexGrow","overflow","whiteSpace","textAlign","position","alignItems","maxWidth","marginInlineEnd","marginXXS","fontFamily","content","marginInlineStart","cursor","writingMode","marginBlock","flexDirection","controlHeight","flex","clear","motionDurationMid","motionEaseOut","opacity","visibility","animationName","animationDuration","animationTimingFunction","motionEaseOutBack","pointerEvents","colorSuccess","colorPrimary","genHorizontalStyle","minWidth","genInlineStyle","flexWrap","margin","makeVerticalLayoutLabel","verticalLabelPadding","verticalLabelMargin","makeVerticalLayout","genVerticalStyle","screenXSMax","screenSMMax","screenMDMax","screenLGMax","prepareComponentToken","colorTextHeading","marginXS","paddingXS","prepareToken","formToken","_ref","order"],"mappings":"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","sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genCollapseMotion, zoomIn } from '../../style/motion';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport genFormValidateMotionStyle from './explain';\nconst resetForm = token => ({\n  legend: {\n    display: 'block',\n    width: '100%',\n    marginBottom: token.marginLG,\n    padding: 0,\n    color: token.colorTextDescription,\n    fontSize: token.fontSizeLG,\n    lineHeight: 'inherit',\n    border: 0,\n    borderBottom: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorder}`\n  },\n  'input[type=\"search\"]': {\n    boxSizing: 'border-box'\n  },\n  // Position radios and checkboxes better\n  'input[type=\"radio\"], input[type=\"checkbox\"]': {\n    lineHeight: 'normal'\n  },\n  'input[type=\"file\"]': {\n    display: 'block'\n  },\n  // Make range inputs behave like textual form controls\n  'input[type=\"range\"]': {\n    display: 'block',\n    width: '100%'\n  },\n  // Make multiple select elements height not fixed\n  'select[multiple], select[size]': {\n    height: 'auto'\n  },\n  // Focus for file, radio, and checkbox\n  [`input[type='file']:focus,\n  input[type='radio']:focus,\n  input[type='checkbox']:focus`]: {\n    outline: 0,\n    boxShadow: `0 0 0 ${unit(token.controlOutlineWidth)} ${token.controlOutline}`\n  },\n  // Adjust output element\n  output: {\n    display: 'block',\n    paddingTop: 15,\n    color: token.colorText,\n    fontSize: token.fontSize,\n    lineHeight: token.lineHeight\n  }\n});\nconst genFormSize = (token, height) => {\n  const {\n    formItemCls\n  } = token;\n  return {\n    [formItemCls]: {\n      [`${formItemCls}-label > label`]: {\n        height\n      },\n      [`${formItemCls}-control-input`]: {\n        minHeight: height\n      }\n    }\n  };\n};\nconst genFormStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [token.componentCls]: Object.assign(Object.assign(Object.assign({}, resetComponent(token)), resetForm(token)), {\n      [`${componentCls}-text`]: {\n        display: 'inline-block',\n        paddingInlineEnd: token.paddingSM\n      },\n      // ================================================================\n      // =                             Size                             =\n      // ================================================================\n      '&-small': Object.assign({}, genFormSize(token, token.controlHeightSM)),\n      '&-large': Object.assign({}, genFormSize(token, token.controlHeightLG))\n    })\n  };\n};\nconst genFormItemStyle = token => {\n  const {\n    formItemCls,\n    iconCls,\n    componentCls,\n    rootPrefixCls,\n    labelRequiredMarkColor,\n    labelColor,\n    labelFontSize,\n    labelHeight,\n    labelColonMarginInlineStart,\n    labelColonMarginInlineEnd,\n    itemMarginBottom\n  } = token;\n  return {\n    [formItemCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      marginBottom: itemMarginBottom,\n      verticalAlign: 'top',\n      '&-with-help': {\n        transition: 'none'\n      },\n      [`&-hidden,\n        &-hidden.${rootPrefixCls}-row`]: {\n        // https://github.com/ant-design/ant-design/issues/26141\n        display: 'none'\n      },\n      '&-has-warning': {\n        [`${formItemCls}-split`]: {\n          color: token.colorError\n        }\n      },\n      '&-has-error': {\n        [`${formItemCls}-split`]: {\n          color: token.colorWarning\n        }\n      },\n      // ==============================================================\n      // =                            Label                           =\n      // ==============================================================\n      [`${formItemCls}-label`]: {\n        flexGrow: 0,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textAlign: 'end',\n        verticalAlign: 'middle',\n        '&-left': {\n          textAlign: 'start'\n        },\n        '&-wrap': {\n          overflow: 'unset',\n          lineHeight: token.lineHeight,\n          whiteSpace: 'unset'\n        },\n        '> label': {\n          position: 'relative',\n          display: 'inline-flex',\n          alignItems: 'center',\n          maxWidth: '100%',\n          height: labelHeight,\n          color: labelColor,\n          fontSize: labelFontSize,\n          [`> ${iconCls}`]: {\n            fontSize: token.fontSize,\n            verticalAlign: 'top'\n          },\n          // Required mark\n          [`&${formItemCls}-required:not(${formItemCls}-required-mark-optional)::before`]: {\n            display: 'inline-block',\n            marginInlineEnd: token.marginXXS,\n            color: labelRequiredMarkColor,\n            fontSize: token.fontSize,\n            fontFamily: 'SimSun, sans-serif',\n            lineHeight: 1,\n            content: '\"*\"',\n            [`${componentCls}-hide-required-mark &`]: {\n              display: 'none'\n            }\n          },\n          // Optional mark\n          [`${formItemCls}-optional`]: {\n            display: 'inline-block',\n            marginInlineStart: token.marginXXS,\n            color: token.colorTextDescription,\n            [`${componentCls}-hide-required-mark &`]: {\n              display: 'none'\n            }\n          },\n          // Optional mark\n          [`${formItemCls}-tooltip`]: {\n            color: token.colorTextDescription,\n            cursor: 'help',\n            writingMode: 'horizontal-tb',\n            marginInlineStart: token.marginXXS\n          },\n          '&::after': {\n            content: '\":\"',\n            position: 'relative',\n            marginBlock: 0,\n            marginInlineStart: labelColonMarginInlineStart,\n            marginInlineEnd: labelColonMarginInlineEnd\n          },\n          [`&${formItemCls}-no-colon::after`]: {\n            content: '\"\\\\a0\"'\n          }\n        }\n      },\n      // ==============================================================\n      // =                            Input                           =\n      // ==============================================================\n      [`${formItemCls}-control`]: {\n        ['--ant-display']: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        [`&:first-child:not([class^=\"'${rootPrefixCls}-col-'\"]):not([class*=\"' ${rootPrefixCls}-col-'\"])`]: {\n          width: '100%'\n        },\n        '&-input': {\n          position: 'relative',\n          display: 'flex',\n          alignItems: 'center',\n          minHeight: token.controlHeight,\n          '&-content': {\n            flex: 'auto',\n            maxWidth: '100%'\n          }\n        }\n      },\n      // ==============================================================\n      // =                           Explain                          =\n      // ==============================================================\n      [formItemCls]: {\n        '&-explain, &-extra': {\n          clear: 'both',\n          color: token.colorTextDescription,\n          fontSize: token.fontSize,\n          lineHeight: token.lineHeight\n        },\n        '&-explain-connected': {\n          width: '100%'\n        },\n        '&-extra': {\n          minHeight: token.controlHeightSM,\n          transition: `color ${token.motionDurationMid} ${token.motionEaseOut}` // sync input color transition\n        },\n        '&-explain': {\n          '&-error': {\n            color: token.colorError\n          },\n          '&-warning': {\n            color: token.colorWarning\n          }\n        }\n      },\n      [`&-with-help ${formItemCls}-explain`]: {\n        height: 'auto',\n        opacity: 1\n      },\n      // ==============================================================\n      // =                        Feedback Icon                       =\n      // ==============================================================\n      [`${formItemCls}-feedback-icon`]: {\n        fontSize: token.fontSize,\n        textAlign: 'center',\n        visibility: 'visible',\n        animationName: zoomIn,\n        animationDuration: token.motionDurationMid,\n        animationTimingFunction: token.motionEaseOutBack,\n        pointerEvents: 'none',\n        '&-success': {\n          color: token.colorSuccess\n        },\n        '&-error': {\n          color: token.colorError\n        },\n        '&-warning': {\n          color: token.colorWarning\n        },\n        '&-validating': {\n          color: token.colorPrimary\n        }\n      }\n    })\n  };\n};\nconst genHorizontalStyle = token => {\n  const {\n    componentCls,\n    formItemCls\n  } = token;\n  return {\n    [`${componentCls}-horizontal`]: {\n      [`${formItemCls}-label`]: {\n        flexGrow: 0\n      },\n      [`${formItemCls}-control`]: {\n        flex: '1 1 0',\n        // https://github.com/ant-design/ant-design/issues/32777\n        // https://github.com/ant-design/ant-design/issues/33773\n        minWidth: 0\n      },\n      // Do not change this to `ant-col-24`! `-24` match all the responsive rules\n      // https://github.com/ant-design/ant-design/issues/32980\n      // https://github.com/ant-design/ant-design/issues/34903\n      // https://github.com/ant-design/ant-design/issues/44538\n      [`${formItemCls}-label[class$='-24'], ${formItemCls}-label[class*='-24 ']`]: {\n        [`& + ${formItemCls}-control`]: {\n          minWidth: 'unset'\n        }\n      }\n    }\n  };\n};\nconst genInlineStyle = token => {\n  const {\n    componentCls,\n    formItemCls\n  } = token;\n  return {\n    [`${componentCls}-inline`]: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      [formItemCls]: {\n        flex: 'none',\n        marginInlineEnd: token.margin,\n        marginBottom: 0,\n        '&-row': {\n          flexWrap: 'nowrap'\n        },\n        [`> ${formItemCls}-label,\n        > ${formItemCls}-control`]: {\n          display: 'inline-block',\n          verticalAlign: 'top'\n        },\n        [`> ${formItemCls}-label`]: {\n          flex: 'none'\n        },\n        [`${componentCls}-text`]: {\n          display: 'inline-block'\n        },\n        [`${formItemCls}-has-feedback`]: {\n          display: 'inline-block'\n        }\n      }\n    }\n  };\n};\nconst makeVerticalLayoutLabel = token => ({\n  padding: token.verticalLabelPadding,\n  margin: token.verticalLabelMargin,\n  whiteSpace: 'initial',\n  textAlign: 'start',\n  '> label': {\n    margin: 0,\n    '&::after': {\n      // https://github.com/ant-design/ant-design/issues/43538\n      visibility: 'hidden'\n    }\n  }\n});\nconst makeVerticalLayout = token => {\n  const {\n    componentCls,\n    formItemCls,\n    rootPrefixCls\n  } = token;\n  return {\n    [`${formItemCls} ${formItemCls}-label`]: makeVerticalLayoutLabel(token),\n    // ref: https://github.com/ant-design/ant-design/issues/45122\n    [`${componentCls}:not(${componentCls}-inline)`]: {\n      [formItemCls]: {\n        flexWrap: 'wrap',\n        [`${formItemCls}-label, ${formItemCls}-control`]: {\n          // When developer pass `xs: { span }`,\n          // It should follow the `xs` screen config\n          // ref: https://github.com/ant-design/ant-design/issues/44386\n          [`&:not([class*=\" ${rootPrefixCls}-col-xs\"])`]: {\n            flex: '0 0 100%',\n            maxWidth: '100%'\n          }\n        }\n      }\n    }\n  };\n};\nconst genVerticalStyle = token => {\n  const {\n    componentCls,\n    formItemCls,\n    rootPrefixCls\n  } = token;\n  return {\n    [`${componentCls}-vertical`]: {\n      [formItemCls]: {\n        '&-row': {\n          flexDirection: 'column'\n        },\n        '&-label > label': {\n          height: 'auto'\n        },\n        [`${componentCls}-item-control`]: {\n          width: '100%'\n        }\n      }\n    },\n    [`${componentCls}-vertical ${formItemCls}-label,\n      .${rootPrefixCls}-col-24${formItemCls}-label,\n      .${rootPrefixCls}-col-xl-24${formItemCls}-label`]: makeVerticalLayoutLabel(token),\n    [`@media (max-width: ${unit(token.screenXSMax)})`]: [makeVerticalLayout(token), {\n      [componentCls]: {\n        [`.${rootPrefixCls}-col-xs-24${formItemCls}-label`]: makeVerticalLayoutLabel(token)\n      }\n    }],\n    [`@media (max-width: ${unit(token.screenSMMax)})`]: {\n      [componentCls]: {\n        [`.${rootPrefixCls}-col-sm-24${formItemCls}-label`]: makeVerticalLayoutLabel(token)\n      }\n    },\n    [`@media (max-width: ${unit(token.screenMDMax)})`]: {\n      [componentCls]: {\n        [`.${rootPrefixCls}-col-md-24${formItemCls}-label`]: makeVerticalLayoutLabel(token)\n      }\n    },\n    [`@media (max-width: ${unit(token.screenLGMax)})`]: {\n      [componentCls]: {\n        [`.${rootPrefixCls}-col-lg-24${formItemCls}-label`]: makeVerticalLayoutLabel(token)\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = token => ({\n  labelRequiredMarkColor: token.colorError,\n  labelColor: token.colorTextHeading,\n  labelFontSize: token.fontSize,\n  labelHeight: token.controlHeight,\n  labelColonMarginInlineStart: token.marginXXS / 2,\n  labelColonMarginInlineEnd: token.marginXS,\n  itemMarginBottom: token.marginLG,\n  verticalLabelPadding: `0 0 ${token.paddingXS}px`,\n  verticalLabelMargin: 0\n});\nexport const prepareToken = (token, rootPrefixCls) => {\n  const formToken = mergeToken(token, {\n    formItemCls: `${token.componentCls}-item`,\n    rootPrefixCls\n  });\n  return formToken;\n};\nexport default genStyleHooks('Form', (token, _ref) => {\n  let {\n    rootPrefixCls\n  } = _ref;\n  const formToken = prepareToken(token, rootPrefixCls);\n  return [genFormStyle(formToken), genFormItemStyle(formToken), genFormValidateMotionStyle(formToken), genHorizontalStyle(formToken), genInlineStyle(formToken), genVerticalStyle(formToken), genCollapseMotion(formToken), zoomIn];\n}, prepareComponentToken, {\n  // Let From style before the Grid\n  // ref https://github.com/ant-design/ant-design/issues/44386\n  order: -1000\n});"]},"metadata":{},"sourceType":"module"}