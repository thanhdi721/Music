{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEvent, useMergedState } from 'rc-util';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport omit from \"rc-util/es/omit\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport PickerTrigger from \"../PickerTrigger\";\nimport { pickTriggerProps } from \"../PickerTrigger/util\";\nimport { fillIndex, toArray } from \"../utils/miscUtil\";\nimport PickerContext from \"./context\";\nimport useCellRender from \"./hooks/useCellRender\";\nimport useFieldsInvalidate from \"./hooks/useFieldsInvalidate\";\nimport useFilledProps from \"./hooks/useFilledProps\";\nimport useOpen from \"./hooks/useOpen\";\nimport usePickerRef from \"./hooks/usePickerRef\";\nimport usePresets from \"./hooks/usePresets\";\nimport useRangeActive from \"./hooks/useRangeActive\";\nimport useRangeDisabledDate from \"./hooks/useRangeDisabledDate\";\nimport useRangePickerValue from \"./hooks/useRangePickerValue\";\nimport useRangeValue, { useInnerValue } from \"./hooks/useRangeValue\";\nimport useShowNow from \"./hooks/useShowNow\";\nimport Popup from \"./Popup\";\nimport RangeSelector from \"./Selector/RangeSelector\";\n\nfunction separateConfig(config, defaultConfig) {\n  var singleConfig = config !== null && config !== void 0 ? config : defaultConfig;\n\n  if (Array.isArray(singleConfig)) {\n    return singleConfig;\n  }\n\n  return [singleConfig, singleConfig];\n}\n/** Used for change event, it should always be not undefined */\n\n\nfunction getActiveRange(activeIndex) {\n  return activeIndex === 1 ? 'end' : 'start';\n}\n\nfunction RangePicker(props, ref) {\n  // ========================= Prop =========================\n  var _useFilledProps = useFilledProps(props, function () {\n    var disabled = props.disabled,\n        allowEmpty = props.allowEmpty;\n    var mergedDisabled = separateConfig(disabled, false);\n    var mergedAllowEmpty = separateConfig(allowEmpty, false);\n    return {\n      disabled: mergedDisabled,\n      allowEmpty: mergedAllowEmpty\n    };\n  }),\n      _useFilledProps2 = _slicedToArray(_useFilledProps, 6),\n      filledProps = _useFilledProps2[0],\n      internalPicker = _useFilledProps2[1],\n      complexPicker = _useFilledProps2[2],\n      formatList = _useFilledProps2[3],\n      maskFormat = _useFilledProps2[4],\n      isInvalidateDate = _useFilledProps2[5];\n\n  var prefixCls = filledProps.prefixCls,\n      styles = filledProps.styles,\n      classNames = filledProps.classNames,\n      defaultValue = filledProps.defaultValue,\n      value = filledProps.value,\n      needConfirm = filledProps.needConfirm,\n      onKeyDown = filledProps.onKeyDown,\n      disabled = filledProps.disabled,\n      allowEmpty = filledProps.allowEmpty,\n      disabledDate = filledProps.disabledDate,\n      minDate = filledProps.minDate,\n      maxDate = filledProps.maxDate,\n      defaultOpen = filledProps.defaultOpen,\n      open = filledProps.open,\n      onOpenChange = filledProps.onOpenChange,\n      locale = filledProps.locale,\n      generateConfig = filledProps.generateConfig,\n      picker = filledProps.picker,\n      showNow = filledProps.showNow,\n      showToday = filledProps.showToday,\n      showTime = filledProps.showTime,\n      mode = filledProps.mode,\n      onPanelChange = filledProps.onPanelChange,\n      onCalendarChange = filledProps.onCalendarChange,\n      onOk = filledProps.onOk,\n      defaultPickerValue = filledProps.defaultPickerValue,\n      pickerValue = filledProps.pickerValue,\n      onPickerValueChange = filledProps.onPickerValueChange,\n      inputReadOnly = filledProps.inputReadOnly,\n      suffixIcon = filledProps.suffixIcon,\n      onFocus = filledProps.onFocus,\n      onBlur = filledProps.onBlur,\n      presets = filledProps.presets,\n      ranges = filledProps.ranges,\n      components = filledProps.components,\n      cellRender = filledProps.cellRender,\n      dateRender = filledProps.dateRender,\n      monthCellRender = filledProps.monthCellRender,\n      onClick = filledProps.onClick; // ========================= Refs =========================\n\n  var selectorRef = usePickerRef(ref); // ========================= Open =========================\n\n  var _useOpen = useOpen(open, defaultOpen, disabled, onOpenChange),\n      _useOpen2 = _slicedToArray(_useOpen, 2),\n      mergedOpen = _useOpen2[0],\n      setMergeOpen = _useOpen2[1];\n\n  var triggerOpen = function triggerOpen(nextOpen, config) {\n    // No need to open if all disabled\n    if (disabled.some(function (fieldDisabled) {\n      return !fieldDisabled;\n    }) || !nextOpen) {\n      setMergeOpen(nextOpen, config);\n    }\n  }; // ======================== Values ========================\n\n\n  var _useInnerValue = useInnerValue(generateConfig, locale, formatList, true, false, defaultValue, value, onCalendarChange, onOk),\n      _useInnerValue2 = _slicedToArray(_useInnerValue, 5),\n      mergedValue = _useInnerValue2[0],\n      setInnerValue = _useInnerValue2[1],\n      getCalendarValue = _useInnerValue2[2],\n      triggerCalendarChange = _useInnerValue2[3],\n      triggerOk = _useInnerValue2[4];\n\n  var calendarValue = getCalendarValue(); // ======================== Active ========================\n\n  var _useRangeActive = useRangeActive(disabled, allowEmpty),\n      _useRangeActive2 = _slicedToArray(_useRangeActive, 7),\n      focused = _useRangeActive2[0],\n      triggerFocus = _useRangeActive2[1],\n      lastOperation = _useRangeActive2[2],\n      activeIndex = _useRangeActive2[3],\n      setActiveIndex = _useRangeActive2[4],\n      nextActiveIndex = _useRangeActive2[5],\n      activeIndexList = _useRangeActive2[6];\n\n  var onSharedFocus = function onSharedFocus(event, index) {\n    triggerFocus(true);\n    onFocus === null || onFocus === void 0 || onFocus(event, {\n      range: getActiveRange(index !== null && index !== void 0 ? index : activeIndex)\n    });\n  };\n\n  var onSharedBlur = function onSharedBlur(event, index) {\n    triggerFocus(false);\n    onBlur === null || onBlur === void 0 || onBlur(event, {\n      range: getActiveRange(index !== null && index !== void 0 ? index : activeIndex)\n    });\n  }; // ======================= ShowTime =======================\n\n\n  var mergedShowTime = React.useMemo(function () {\n    if (!showTime) {\n      return null;\n    }\n\n    var disabledTime = showTime.disabledTime;\n    var proxyDisabledTime = disabledTime ? function (date) {\n      var range = getActiveRange(activeIndex);\n      return disabledTime(date, range);\n    } : undefined;\n    return _objectSpread(_objectSpread({}, showTime), {}, {\n      disabledTime: proxyDisabledTime\n    });\n  }, [showTime, activeIndex]); // ========================= Mode =========================\n\n  var _useMergedState = useMergedState([picker, picker], {\n    value: mode\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      modes = _useMergedState2[0],\n      setModes = _useMergedState2[1];\n\n  var mergedMode = modes[activeIndex] || picker;\n  /** Extends from `mergedMode` to patch `datetime` mode */\n\n  var internalMode = mergedMode === 'date' && mergedShowTime ? 'datetime' : mergedMode; // ====================== PanelCount ======================\n\n  var multiplePanel = internalMode === picker && internalMode !== 'time'; // ======================= Show Now =======================\n\n  var mergedShowNow = useShowNow(picker, mergedMode, showNow, showToday, true); // ======================== Value =========================\n\n  var _useRangeValue = useRangeValue(filledProps, mergedValue, setInnerValue, getCalendarValue, triggerCalendarChange, disabled, formatList, focused, mergedOpen, isInvalidateDate),\n      _useRangeValue2 = _slicedToArray(_useRangeValue, 2),\n\n  /** Trigger `onChange` by check `disabledDate` */\n  flushSubmit = _useRangeValue2[0],\n\n  /** Trigger `onChange` directly without check `disabledDate` */\n  triggerSubmitChange = _useRangeValue2[1]; // ===================== DisabledDate =====================\n\n\n  var mergedDisabledDate = useRangeDisabledDate(calendarValue, disabled, activeIndexList, generateConfig, locale, disabledDate); // ======================= Validate =======================\n\n  var _useFieldsInvalidate = useFieldsInvalidate(calendarValue, isInvalidateDate, allowEmpty),\n      _useFieldsInvalidate2 = _slicedToArray(_useFieldsInvalidate, 2),\n      submitInvalidates = _useFieldsInvalidate2[0],\n      onSelectorInvalid = _useFieldsInvalidate2[1]; // ===================== Picker Value =====================\n\n\n  var _useRangePickerValue = useRangePickerValue(generateConfig, locale, calendarValue, modes, mergedOpen, activeIndex, internalPicker, multiplePanel, defaultPickerValue, pickerValue, mergedShowTime === null || mergedShowTime === void 0 ? void 0 : mergedShowTime.defaultOpenValue, onPickerValueChange, minDate, maxDate),\n      _useRangePickerValue2 = _slicedToArray(_useRangePickerValue, 2),\n      currentPickerValue = _useRangePickerValue2[0],\n      setCurrentPickerValue = _useRangePickerValue2[1]; // >>> Mode need wait for `pickerValue`\n\n\n  var triggerModeChange = useEvent(function (nextPickerValue, nextMode, triggerEvent) {\n    var clone = fillIndex(modes, activeIndex, nextMode);\n\n    if (clone[0] !== modes[0] || clone[1] !== modes[1]) {\n      setModes(clone);\n    } // Compatible with `onPanelChange`\n\n\n    if (onPanelChange && triggerEvent !== false) {\n      var clonePickerValue = _toConsumableArray(calendarValue);\n\n      if (nextPickerValue) {\n        clonePickerValue[activeIndex] = nextPickerValue;\n      }\n\n      onPanelChange(clonePickerValue, clone);\n    }\n  }); // ======================== Change ========================\n\n  var fillCalendarValue = function fillCalendarValue(date, index) {\n    return (// Trigger change only when date changed\n      fillIndex(calendarValue, index, date)\n    );\n  }; // ======================== Submit ========================\n\n  /**\n   * Trigger by confirm operation.\n   * This function has already handle the `needConfirm` check logic.\n   * - Selector: enter key\n   * - Panel: OK button\n   */\n\n\n  var triggerPartConfirm = function triggerPartConfirm(date, skipFocus) {\n    var nextValue = calendarValue;\n\n    if (date) {\n      nextValue = fillCalendarValue(date, activeIndex);\n    } // Get next focus index\n\n\n    var nextIndex = nextActiveIndex(nextValue); // Change calendar value and tell flush it\n\n    triggerCalendarChange(nextValue);\n    flushSubmit(activeIndex, nextIndex === null);\n\n    if (nextIndex === null) {\n      triggerOpen(false, {\n        force: true\n      });\n    } else if (!skipFocus) {\n      selectorRef.current.focus({\n        index: nextIndex\n      });\n    }\n  }; // ======================== Click =========================\n\n\n  var onSelectorClick = function onSelectorClick(event) {\n    if (!selectorRef.current.nativeElement.contains(document.activeElement)) {\n      // Click to focus the enabled input\n      var enabledIndex = disabled.findIndex(function (d) {\n        return !d;\n      });\n\n      if (enabledIndex >= 0) {\n        selectorRef.current.focus({\n          index: enabledIndex\n        });\n      }\n    }\n\n    triggerOpen(true);\n    onClick === null || onClick === void 0 || onClick(event);\n  };\n\n  var onSelectorClear = function onSelectorClear() {\n    triggerSubmitChange(null);\n    triggerOpen(false, {\n      force: true\n    });\n  }; // ======================== Hover =========================\n\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hoverSource = _React$useState2[0],\n      setHoverSource = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      internalHoverValues = _React$useState4[0],\n      setInternalHoverValues = _React$useState4[1];\n\n  var hoverValues = React.useMemo(function () {\n    return internalHoverValues || calendarValue;\n  }, [calendarValue, internalHoverValues]); // Clean up `internalHoverValues` when closed\n\n  React.useEffect(function () {\n    if (!mergedOpen) {\n      setInternalHoverValues(null);\n    }\n  }, [mergedOpen]); // ========================================================\n  // ==                       Panels                       ==\n  // ========================================================\n  // Save the offset with active bar position\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      activeOffset = _React$useState6[0],\n      setActiveOffset = _React$useState6[1]; // ======================= Presets ========================\n\n\n  var presetList = usePresets(presets, ranges);\n\n  var onPresetHover = function onPresetHover(nextValues) {\n    setInternalHoverValues(nextValues);\n    setHoverSource('preset');\n  };\n\n  var onPresetSubmit = function onPresetSubmit(nextValues) {\n    var passed = triggerSubmitChange(nextValues);\n\n    if (passed) {\n      triggerOpen(false, {\n        force: true\n      });\n    }\n  };\n\n  var onNow = function onNow(now) {\n    triggerPartConfirm(now);\n  }; // ======================== Panel =========================\n\n\n  var onPanelHover = function onPanelHover(date) {\n    setInternalHoverValues(date ? fillCalendarValue(date, activeIndex) : null);\n    setHoverSource('cell');\n  }; // >>> Focus\n\n\n  var onPanelFocus = function onPanelFocus(event) {\n    triggerOpen(true);\n    onSharedFocus(event);\n  }; // >>> Calendar\n\n\n  var onPanelSelect = function onPanelSelect(date) {\n    lastOperation('panel');\n    var clone = fillIndex(calendarValue, activeIndex, date); // Only trigger calendar event but not update internal `calendarValue` state\n\n    triggerCalendarChange(clone); // >>> Trigger next active if !needConfirm\n    // Fully logic check `useRangeValue` hook\n\n    if (!needConfirm && !complexPicker && internalPicker === internalMode) {\n      triggerPartConfirm(date);\n    }\n  }; // >>> Close\n\n\n  var onPopupClose = function onPopupClose() {\n    // Close popup\n    triggerOpen(false);\n  }; // >>> cellRender\n\n\n  var onInternalCellRender = useCellRender(cellRender, dateRender, monthCellRender, getActiveRange(activeIndex)); // >>> Value\n\n  var panelValue = calendarValue[activeIndex] || null; // >>> invalid\n\n  var isPopupInvalidateDate = useEvent(function (date) {\n    return isInvalidateDate(date, {\n      activeIndex: activeIndex\n    });\n  });\n  var panelProps = React.useMemo(function () {\n    var domProps = pickAttrs(filledProps, false);\n    var restProps = omit(filledProps, [].concat(_toConsumableArray(Object.keys(domProps)), ['onChange', 'onCalendarChange', 'style', 'className', 'onPanelChange']));\n    return restProps;\n  }, [filledProps]); // >>> Render\n\n  var panel = /*#__PURE__*/React.createElement(Popup, _extends({}, panelProps, {\n    showNow: mergedShowNow,\n    showTime: mergedShowTime // Range\n    ,\n    range: true,\n    multiplePanel: multiplePanel,\n    activeOffset: activeOffset // Disabled\n    ,\n    disabledDate: mergedDisabledDate // Focus\n    ,\n    onFocus: onPanelFocus,\n    onBlur: onSharedBlur // Mode\n    ,\n    picker: picker,\n    mode: mergedMode,\n    internalMode: internalMode,\n    onPanelChange: triggerModeChange // Value\n    ,\n    format: maskFormat,\n    value: panelValue,\n    isInvalid: isPopupInvalidateDate,\n    onChange: null,\n    onSelect: onPanelSelect // PickerValue\n    ,\n    pickerValue: currentPickerValue,\n    defaultOpenValue: toArray(showTime === null || showTime === void 0 ? void 0 : showTime.defaultOpenValue)[activeIndex],\n    onPickerValueChange: setCurrentPickerValue // Hover\n    ,\n    hoverValue: hoverValues,\n    onHover: onPanelHover // Submit\n    ,\n    needConfirm: needConfirm,\n    onSubmit: triggerPartConfirm,\n    onOk: triggerOk // Preset\n    ,\n    presets: presetList,\n    onPresetHover: onPresetHover,\n    onPresetSubmit: onPresetSubmit // Now\n    ,\n    onNow: onNow // Render\n    ,\n    cellRender: onInternalCellRender\n  })); // ========================================================\n  // ==                      Selector                      ==\n  // ========================================================\n  // ======================== Change ========================\n\n  var onSelectorChange = function onSelectorChange(date, index) {\n    var clone = fillCalendarValue(date, index);\n    triggerCalendarChange(clone);\n  };\n\n  var onSelectorInputChange = function onSelectorInputChange() {\n    lastOperation('input');\n  }; // ======================= Selector =======================\n\n\n  var onSelectorFocus = function onSelectorFocus(event, index) {\n    lastOperation('input');\n    triggerOpen(true, {\n      inherit: true\n    });\n    setActiveIndex(index);\n    onSharedFocus(event, index);\n  };\n\n  var onSelectorBlur = function onSelectorBlur(event, index) {\n    triggerOpen(false);\n    onSharedBlur(event, index);\n  };\n\n  var onSelectorKeyDown = function onSelectorKeyDown(event, preventDefault) {\n    if (event.key === 'Tab') {\n      triggerPartConfirm(null, true);\n    }\n\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown(event, preventDefault);\n  }; // ======================= Context ========================\n\n\n  var context = React.useMemo(function () {\n    return {\n      prefixCls: prefixCls,\n      locale: locale,\n      generateConfig: generateConfig,\n      button: components.button,\n      input: components.input\n    };\n  }, [prefixCls, locale, generateConfig, components.button, components.input]); // ======================== Effect ========================\n  // >>> Mode\n  // Reset for every active\n\n  useLayoutEffect(function () {\n    if (mergedOpen && activeIndex !== undefined) {\n      // Legacy compatible. This effect update should not trigger `onPanelChange`\n      triggerModeChange(null, picker, false);\n    }\n  }, [mergedOpen, activeIndex, picker]); // >>> For complex picker, we need check if need to focus next one\n\n  useLayoutEffect(function () {\n    var lastOp = lastOperation(); // Trade as confirm on field leave\n\n    if (!mergedOpen && lastOp === 'input') {\n      triggerOpen(false);\n      triggerPartConfirm(null, true);\n    } // Submit with complex picker\n\n\n    if (!mergedOpen && complexPicker && !needConfirm && lastOp === 'panel') {\n      triggerOpen(true);\n      triggerPartConfirm();\n    }\n  }, [mergedOpen]); // ====================== DevWarning ======================\n\n  if (process.env.NODE_ENV !== 'production') {\n    var isIndexEmpty = function isIndexEmpty(index) {\n      return (// Value is empty\n        !(value !== null && value !== void 0 && value[index]) && // DefaultValue is empty\n        !(defaultValue !== null && defaultValue !== void 0 && defaultValue[index])\n      );\n    };\n\n    if (disabled.some(function (fieldDisabled, index) {\n      return fieldDisabled && isIndexEmpty(index) && !allowEmpty[index];\n    })) {\n      warning(false, '`disabled` should not set with empty `value`. You should set `allowEmpty` or `value` instead.');\n    }\n  } // ======================== Render ========================\n\n\n  return /*#__PURE__*/React.createElement(PickerContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(PickerTrigger, _extends({}, pickTriggerProps(filledProps), {\n    popupElement: panel,\n    popupStyle: styles.popup,\n    popupClassName: classNames.popup // Visible\n    ,\n    visible: mergedOpen,\n    onClose: onPopupClose // Range\n    ,\n    range: true\n  }), /*#__PURE__*/React.createElement(RangeSelector // Shared\n  , _extends({}, filledProps, {\n    // Ref\n    ref: selectorRef // Icon\n    ,\n    suffixIcon: suffixIcon // Active\n    ,\n    activeIndex: focused || mergedOpen ? activeIndex : null,\n    activeHelp: !!internalHoverValues,\n    allHelp: !!internalHoverValues && hoverSource === 'preset',\n    focused: focused,\n    onFocus: onSelectorFocus,\n    onBlur: onSelectorBlur,\n    onKeyDown: onSelectorKeyDown,\n    onSubmit: triggerPartConfirm // Change\n    ,\n    value: hoverValues,\n    maskFormat: maskFormat,\n    onChange: onSelectorChange,\n    onInputChange: onSelectorInputChange // Format\n    ,\n    format: formatList,\n    inputReadOnly: inputReadOnly // Disabled\n    ,\n    disabled: disabled // Open\n    ,\n    open: mergedOpen,\n    onOpenChange: triggerOpen // Click\n    ,\n    onClick: onSelectorClick,\n    onClear: onSelectorClear // Invalid\n    ,\n    invalid: submitInvalidates,\n    onInvalid: onSelectorInvalid // Offset\n    ,\n    onActiveOffset: setActiveOffset\n  }))));\n}\n\nvar RefRangePicker = /*#__PURE__*/React.forwardRef(RangePicker);\n\nif (process.env.NODE_ENV !== 'production') {\n  RefRangePicker.displayName = 'RefRangePicker';\n}\n\nexport default RefRangePicker;","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-picker/es/PickerInput/RangePicker.js"],"names":["_extends","_toConsumableArray","_objectSpread","_slicedToArray","useEvent","useMergedState","useLayoutEffect","omit","pickAttrs","warning","React","PickerTrigger","pickTriggerProps","fillIndex","toArray","PickerContext","useCellRender","useFieldsInvalidate","useFilledProps","useOpen","usePickerRef","usePresets","useRangeActive","useRangeDisabledDate","useRangePickerValue","useRangeValue","useInnerValue","useShowNow","Popup","RangeSelector","separateConfig","config","defaultConfig","singleConfig","Array","isArray","getActiveRange","activeIndex","RangePicker","props","ref","_useFilledProps","disabled","allowEmpty","mergedDisabled","mergedAllowEmpty","_useFilledProps2","filledProps","internalPicker","complexPicker","formatList","maskFormat","isInvalidateDate","prefixCls","styles","classNames","defaultValue","value","needConfirm","onKeyDown","disabledDate","minDate","maxDate","defaultOpen","open","onOpenChange","locale","generateConfig","picker","showNow","showToday","showTime","mode","onPanelChange","onCalendarChange","onOk","defaultPickerValue","pickerValue","onPickerValueChange","inputReadOnly","suffixIcon","onFocus","onBlur","presets","ranges","components","cellRender","dateRender","monthCellRender","onClick","selectorRef","_useOpen","_useOpen2","mergedOpen","setMergeOpen","triggerOpen","nextOpen","some","fieldDisabled","_useInnerValue","_useInnerValue2","mergedValue","setInnerValue","getCalendarValue","triggerCalendarChange","triggerOk","calendarValue","_useRangeActive","_useRangeActive2","focused","triggerFocus","lastOperation","setActiveIndex","nextActiveIndex","activeIndexList","onSharedFocus","event","index","range","onSharedBlur","mergedShowTime","useMemo","disabledTime","proxyDisabledTime","date","undefined","_useMergedState","_useMergedState2","modes","setModes","mergedMode","internalMode","multiplePanel","mergedShowNow","_useRangeValue","_useRangeValue2","flushSubmit","triggerSubmitChange","mergedDisabledDate","_useFieldsInvalidate","_useFieldsInvalidate2","submitInvalidates","onSelectorInvalid","_useRangePickerValue","defaultOpenValue","_useRangePickerValue2","currentPickerValue","setCurrentPickerValue","triggerModeChange","nextPickerValue","nextMode","triggerEvent","clone","clonePickerValue","fillCalendarValue","triggerPartConfirm","skipFocus","nextValue","nextIndex","force","current","focus","onSelectorClick","nativeElement","contains","document","activeElement","enabledIndex","findIndex","d","onSelectorClear","_React$useState","useState","_React$useState2","hoverSource","setHoverSource","_React$useState3","_React$useState4","internalHoverValues","setInternalHoverValues","hoverValues","useEffect","_React$useState5","_React$useState6","activeOffset","setActiveOffset","presetList","onPresetHover","nextValues","onPresetSubmit","passed","onNow","now","onPanelHover","onPanelFocus","onPanelSelect","onPopupClose","onInternalCellRender","panelValue","isPopupInvalidateDate","panelProps","domProps","restProps","concat","Object","keys","panel","createElement","format","isInvalid","onChange","onSelect","hoverValue","onHover","onSubmit","onSelectorChange","onSelectorInputChange","onSelectorFocus","inherit","onSelectorBlur","onSelectorKeyDown","preventDefault","key","context","button","input","lastOp","process","env","NODE_ENV","isIndexEmpty","Provider","popupElement","popupStyle","popup","popupClassName","visible","onClose","activeHelp","allHelp","onInputChange","onClear","invalid","onInvalid","onActiveOffset","RefRangePicker","forwardRef","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEvent, useMergedState } from 'rc-util';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport omit from \"rc-util/es/omit\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport PickerTrigger from \"../PickerTrigger\";\nimport { pickTriggerProps } from \"../PickerTrigger/util\";\nimport { fillIndex, toArray } from \"../utils/miscUtil\";\nimport PickerContext from \"./context\";\nimport useCellRender from \"./hooks/useCellRender\";\nimport useFieldsInvalidate from \"./hooks/useFieldsInvalidate\";\nimport useFilledProps from \"./hooks/useFilledProps\";\nimport useOpen from \"./hooks/useOpen\";\nimport usePickerRef from \"./hooks/usePickerRef\";\nimport usePresets from \"./hooks/usePresets\";\nimport useRangeActive from \"./hooks/useRangeActive\";\nimport useRangeDisabledDate from \"./hooks/useRangeDisabledDate\";\nimport useRangePickerValue from \"./hooks/useRangePickerValue\";\nimport useRangeValue, { useInnerValue } from \"./hooks/useRangeValue\";\nimport useShowNow from \"./hooks/useShowNow\";\nimport Popup from \"./Popup\";\nimport RangeSelector from \"./Selector/RangeSelector\";\nfunction separateConfig(config, defaultConfig) {\n  var singleConfig = config !== null && config !== void 0 ? config : defaultConfig;\n  if (Array.isArray(singleConfig)) {\n    return singleConfig;\n  }\n  return [singleConfig, singleConfig];\n}\n\n/** Used for change event, it should always be not undefined */\n\nfunction getActiveRange(activeIndex) {\n  return activeIndex === 1 ? 'end' : 'start';\n}\nfunction RangePicker(props, ref) {\n  // ========================= Prop =========================\n  var _useFilledProps = useFilledProps(props, function () {\n      var disabled = props.disabled,\n        allowEmpty = props.allowEmpty;\n      var mergedDisabled = separateConfig(disabled, false);\n      var mergedAllowEmpty = separateConfig(allowEmpty, false);\n      return {\n        disabled: mergedDisabled,\n        allowEmpty: mergedAllowEmpty\n      };\n    }),\n    _useFilledProps2 = _slicedToArray(_useFilledProps, 6),\n    filledProps = _useFilledProps2[0],\n    internalPicker = _useFilledProps2[1],\n    complexPicker = _useFilledProps2[2],\n    formatList = _useFilledProps2[3],\n    maskFormat = _useFilledProps2[4],\n    isInvalidateDate = _useFilledProps2[5];\n  var prefixCls = filledProps.prefixCls,\n    styles = filledProps.styles,\n    classNames = filledProps.classNames,\n    defaultValue = filledProps.defaultValue,\n    value = filledProps.value,\n    needConfirm = filledProps.needConfirm,\n    onKeyDown = filledProps.onKeyDown,\n    disabled = filledProps.disabled,\n    allowEmpty = filledProps.allowEmpty,\n    disabledDate = filledProps.disabledDate,\n    minDate = filledProps.minDate,\n    maxDate = filledProps.maxDate,\n    defaultOpen = filledProps.defaultOpen,\n    open = filledProps.open,\n    onOpenChange = filledProps.onOpenChange,\n    locale = filledProps.locale,\n    generateConfig = filledProps.generateConfig,\n    picker = filledProps.picker,\n    showNow = filledProps.showNow,\n    showToday = filledProps.showToday,\n    showTime = filledProps.showTime,\n    mode = filledProps.mode,\n    onPanelChange = filledProps.onPanelChange,\n    onCalendarChange = filledProps.onCalendarChange,\n    onOk = filledProps.onOk,\n    defaultPickerValue = filledProps.defaultPickerValue,\n    pickerValue = filledProps.pickerValue,\n    onPickerValueChange = filledProps.onPickerValueChange,\n    inputReadOnly = filledProps.inputReadOnly,\n    suffixIcon = filledProps.suffixIcon,\n    onFocus = filledProps.onFocus,\n    onBlur = filledProps.onBlur,\n    presets = filledProps.presets,\n    ranges = filledProps.ranges,\n    components = filledProps.components,\n    cellRender = filledProps.cellRender,\n    dateRender = filledProps.dateRender,\n    monthCellRender = filledProps.monthCellRender,\n    onClick = filledProps.onClick;\n\n  // ========================= Refs =========================\n  var selectorRef = usePickerRef(ref);\n\n  // ========================= Open =========================\n  var _useOpen = useOpen(open, defaultOpen, disabled, onOpenChange),\n    _useOpen2 = _slicedToArray(_useOpen, 2),\n    mergedOpen = _useOpen2[0],\n    setMergeOpen = _useOpen2[1];\n  var triggerOpen = function triggerOpen(nextOpen, config) {\n    // No need to open if all disabled\n    if (disabled.some(function (fieldDisabled) {\n      return !fieldDisabled;\n    }) || !nextOpen) {\n      setMergeOpen(nextOpen, config);\n    }\n  };\n\n  // ======================== Values ========================\n  var _useInnerValue = useInnerValue(generateConfig, locale, formatList, true, false, defaultValue, value, onCalendarChange, onOk),\n    _useInnerValue2 = _slicedToArray(_useInnerValue, 5),\n    mergedValue = _useInnerValue2[0],\n    setInnerValue = _useInnerValue2[1],\n    getCalendarValue = _useInnerValue2[2],\n    triggerCalendarChange = _useInnerValue2[3],\n    triggerOk = _useInnerValue2[4];\n  var calendarValue = getCalendarValue();\n\n  // ======================== Active ========================\n  var _useRangeActive = useRangeActive(disabled, allowEmpty),\n    _useRangeActive2 = _slicedToArray(_useRangeActive, 7),\n    focused = _useRangeActive2[0],\n    triggerFocus = _useRangeActive2[1],\n    lastOperation = _useRangeActive2[2],\n    activeIndex = _useRangeActive2[3],\n    setActiveIndex = _useRangeActive2[4],\n    nextActiveIndex = _useRangeActive2[5],\n    activeIndexList = _useRangeActive2[6];\n  var onSharedFocus = function onSharedFocus(event, index) {\n    triggerFocus(true);\n    onFocus === null || onFocus === void 0 || onFocus(event, {\n      range: getActiveRange(index !== null && index !== void 0 ? index : activeIndex)\n    });\n  };\n  var onSharedBlur = function onSharedBlur(event, index) {\n    triggerFocus(false);\n    onBlur === null || onBlur === void 0 || onBlur(event, {\n      range: getActiveRange(index !== null && index !== void 0 ? index : activeIndex)\n    });\n  };\n\n  // ======================= ShowTime =======================\n  var mergedShowTime = React.useMemo(function () {\n    if (!showTime) {\n      return null;\n    }\n    var disabledTime = showTime.disabledTime;\n    var proxyDisabledTime = disabledTime ? function (date) {\n      var range = getActiveRange(activeIndex);\n      return disabledTime(date, range);\n    } : undefined;\n    return _objectSpread(_objectSpread({}, showTime), {}, {\n      disabledTime: proxyDisabledTime\n    });\n  }, [showTime, activeIndex]);\n\n  // ========================= Mode =========================\n  var _useMergedState = useMergedState([picker, picker], {\n      value: mode\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    modes = _useMergedState2[0],\n    setModes = _useMergedState2[1];\n  var mergedMode = modes[activeIndex] || picker;\n\n  /** Extends from `mergedMode` to patch `datetime` mode */\n  var internalMode = mergedMode === 'date' && mergedShowTime ? 'datetime' : mergedMode;\n\n  // ====================== PanelCount ======================\n  var multiplePanel = internalMode === picker && internalMode !== 'time';\n\n  // ======================= Show Now =======================\n  var mergedShowNow = useShowNow(picker, mergedMode, showNow, showToday, true);\n\n  // ======================== Value =========================\n  var _useRangeValue = useRangeValue(filledProps, mergedValue, setInnerValue, getCalendarValue, triggerCalendarChange, disabled, formatList, focused, mergedOpen, isInvalidateDate),\n    _useRangeValue2 = _slicedToArray(_useRangeValue, 2),\n    /** Trigger `onChange` by check `disabledDate` */\n    flushSubmit = _useRangeValue2[0],\n    /** Trigger `onChange` directly without check `disabledDate` */\n    triggerSubmitChange = _useRangeValue2[1];\n\n  // ===================== DisabledDate =====================\n  var mergedDisabledDate = useRangeDisabledDate(calendarValue, disabled, activeIndexList, generateConfig, locale, disabledDate);\n\n  // ======================= Validate =======================\n  var _useFieldsInvalidate = useFieldsInvalidate(calendarValue, isInvalidateDate, allowEmpty),\n    _useFieldsInvalidate2 = _slicedToArray(_useFieldsInvalidate, 2),\n    submitInvalidates = _useFieldsInvalidate2[0],\n    onSelectorInvalid = _useFieldsInvalidate2[1];\n\n  // ===================== Picker Value =====================\n  var _useRangePickerValue = useRangePickerValue(generateConfig, locale, calendarValue, modes, mergedOpen, activeIndex, internalPicker, multiplePanel, defaultPickerValue, pickerValue, mergedShowTime === null || mergedShowTime === void 0 ? void 0 : mergedShowTime.defaultOpenValue, onPickerValueChange, minDate, maxDate),\n    _useRangePickerValue2 = _slicedToArray(_useRangePickerValue, 2),\n    currentPickerValue = _useRangePickerValue2[0],\n    setCurrentPickerValue = _useRangePickerValue2[1];\n\n  // >>> Mode need wait for `pickerValue`\n  var triggerModeChange = useEvent(function (nextPickerValue, nextMode, triggerEvent) {\n    var clone = fillIndex(modes, activeIndex, nextMode);\n    if (clone[0] !== modes[0] || clone[1] !== modes[1]) {\n      setModes(clone);\n    }\n\n    // Compatible with `onPanelChange`\n    if (onPanelChange && triggerEvent !== false) {\n      var clonePickerValue = _toConsumableArray(calendarValue);\n      if (nextPickerValue) {\n        clonePickerValue[activeIndex] = nextPickerValue;\n      }\n      onPanelChange(clonePickerValue, clone);\n    }\n  });\n\n  // ======================== Change ========================\n  var fillCalendarValue = function fillCalendarValue(date, index) {\n    return (\n      // Trigger change only when date changed\n      fillIndex(calendarValue, index, date)\n    );\n  };\n\n  // ======================== Submit ========================\n  /**\n   * Trigger by confirm operation.\n   * This function has already handle the `needConfirm` check logic.\n   * - Selector: enter key\n   * - Panel: OK button\n   */\n  var triggerPartConfirm = function triggerPartConfirm(date, skipFocus) {\n    var nextValue = calendarValue;\n    if (date) {\n      nextValue = fillCalendarValue(date, activeIndex);\n    }\n\n    // Get next focus index\n    var nextIndex = nextActiveIndex(nextValue);\n\n    // Change calendar value and tell flush it\n    triggerCalendarChange(nextValue);\n    flushSubmit(activeIndex, nextIndex === null);\n    if (nextIndex === null) {\n      triggerOpen(false, {\n        force: true\n      });\n    } else if (!skipFocus) {\n      selectorRef.current.focus({\n        index: nextIndex\n      });\n    }\n  };\n\n  // ======================== Click =========================\n  var onSelectorClick = function onSelectorClick(event) {\n    if (!selectorRef.current.nativeElement.contains(document.activeElement)) {\n      // Click to focus the enabled input\n      var enabledIndex = disabled.findIndex(function (d) {\n        return !d;\n      });\n      if (enabledIndex >= 0) {\n        selectorRef.current.focus({\n          index: enabledIndex\n        });\n      }\n    }\n    triggerOpen(true);\n    onClick === null || onClick === void 0 || onClick(event);\n  };\n  var onSelectorClear = function onSelectorClear() {\n    triggerSubmitChange(null);\n    triggerOpen(false, {\n      force: true\n    });\n  };\n\n  // ======================== Hover =========================\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    hoverSource = _React$useState2[0],\n    setHoverSource = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    internalHoverValues = _React$useState4[0],\n    setInternalHoverValues = _React$useState4[1];\n  var hoverValues = React.useMemo(function () {\n    return internalHoverValues || calendarValue;\n  }, [calendarValue, internalHoverValues]);\n\n  // Clean up `internalHoverValues` when closed\n  React.useEffect(function () {\n    if (!mergedOpen) {\n      setInternalHoverValues(null);\n    }\n  }, [mergedOpen]);\n\n  // ========================================================\n  // ==                       Panels                       ==\n  // ========================================================\n  // Save the offset with active bar position\n  var _React$useState5 = React.useState(0),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    activeOffset = _React$useState6[0],\n    setActiveOffset = _React$useState6[1];\n\n  // ======================= Presets ========================\n  var presetList = usePresets(presets, ranges);\n  var onPresetHover = function onPresetHover(nextValues) {\n    setInternalHoverValues(nextValues);\n    setHoverSource('preset');\n  };\n  var onPresetSubmit = function onPresetSubmit(nextValues) {\n    var passed = triggerSubmitChange(nextValues);\n    if (passed) {\n      triggerOpen(false, {\n        force: true\n      });\n    }\n  };\n  var onNow = function onNow(now) {\n    triggerPartConfirm(now);\n  };\n\n  // ======================== Panel =========================\n  var onPanelHover = function onPanelHover(date) {\n    setInternalHoverValues(date ? fillCalendarValue(date, activeIndex) : null);\n    setHoverSource('cell');\n  };\n\n  // >>> Focus\n  var onPanelFocus = function onPanelFocus(event) {\n    triggerOpen(true);\n    onSharedFocus(event);\n  };\n\n  // >>> Calendar\n  var onPanelSelect = function onPanelSelect(date) {\n    lastOperation('panel');\n    var clone = fillIndex(calendarValue, activeIndex, date);\n\n    // Only trigger calendar event but not update internal `calendarValue` state\n    triggerCalendarChange(clone);\n\n    // >>> Trigger next active if !needConfirm\n    // Fully logic check `useRangeValue` hook\n    if (!needConfirm && !complexPicker && internalPicker === internalMode) {\n      triggerPartConfirm(date);\n    }\n  };\n\n  // >>> Close\n  var onPopupClose = function onPopupClose() {\n    // Close popup\n    triggerOpen(false);\n  };\n\n  // >>> cellRender\n  var onInternalCellRender = useCellRender(cellRender, dateRender, monthCellRender, getActiveRange(activeIndex));\n\n  // >>> Value\n  var panelValue = calendarValue[activeIndex] || null;\n\n  // >>> invalid\n  var isPopupInvalidateDate = useEvent(function (date) {\n    return isInvalidateDate(date, {\n      activeIndex: activeIndex\n    });\n  });\n  var panelProps = React.useMemo(function () {\n    var domProps = pickAttrs(filledProps, false);\n    var restProps = omit(filledProps, [].concat(_toConsumableArray(Object.keys(domProps)), ['onChange', 'onCalendarChange', 'style', 'className', 'onPanelChange']));\n    return restProps;\n  }, [filledProps]);\n\n  // >>> Render\n  var panel = /*#__PURE__*/React.createElement(Popup, _extends({}, panelProps, {\n    showNow: mergedShowNow,\n    showTime: mergedShowTime\n    // Range\n    ,\n    range: true,\n    multiplePanel: multiplePanel,\n    activeOffset: activeOffset\n    // Disabled\n    ,\n    disabledDate: mergedDisabledDate\n    // Focus\n    ,\n    onFocus: onPanelFocus,\n    onBlur: onSharedBlur\n    // Mode\n    ,\n    picker: picker,\n    mode: mergedMode,\n    internalMode: internalMode,\n    onPanelChange: triggerModeChange\n    // Value\n    ,\n    format: maskFormat,\n    value: panelValue,\n    isInvalid: isPopupInvalidateDate,\n    onChange: null,\n    onSelect: onPanelSelect\n    // PickerValue\n    ,\n    pickerValue: currentPickerValue,\n    defaultOpenValue: toArray(showTime === null || showTime === void 0 ? void 0 : showTime.defaultOpenValue)[activeIndex],\n    onPickerValueChange: setCurrentPickerValue\n    // Hover\n    ,\n    hoverValue: hoverValues,\n    onHover: onPanelHover\n    // Submit\n    ,\n    needConfirm: needConfirm,\n    onSubmit: triggerPartConfirm,\n    onOk: triggerOk\n    // Preset\n    ,\n    presets: presetList,\n    onPresetHover: onPresetHover,\n    onPresetSubmit: onPresetSubmit\n    // Now\n    ,\n    onNow: onNow\n    // Render\n    ,\n    cellRender: onInternalCellRender\n  }));\n\n  // ========================================================\n  // ==                      Selector                      ==\n  // ========================================================\n\n  // ======================== Change ========================\n  var onSelectorChange = function onSelectorChange(date, index) {\n    var clone = fillCalendarValue(date, index);\n    triggerCalendarChange(clone);\n  };\n  var onSelectorInputChange = function onSelectorInputChange() {\n    lastOperation('input');\n  };\n\n  // ======================= Selector =======================\n  var onSelectorFocus = function onSelectorFocus(event, index) {\n    lastOperation('input');\n    triggerOpen(true, {\n      inherit: true\n    });\n    setActiveIndex(index);\n    onSharedFocus(event, index);\n  };\n  var onSelectorBlur = function onSelectorBlur(event, index) {\n    triggerOpen(false);\n    onSharedBlur(event, index);\n  };\n  var onSelectorKeyDown = function onSelectorKeyDown(event, preventDefault) {\n    if (event.key === 'Tab') {\n      triggerPartConfirm(null, true);\n    }\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown(event, preventDefault);\n  };\n\n  // ======================= Context ========================\n  var context = React.useMemo(function () {\n    return {\n      prefixCls: prefixCls,\n      locale: locale,\n      generateConfig: generateConfig,\n      button: components.button,\n      input: components.input\n    };\n  }, [prefixCls, locale, generateConfig, components.button, components.input]);\n\n  // ======================== Effect ========================\n  // >>> Mode\n  // Reset for every active\n  useLayoutEffect(function () {\n    if (mergedOpen && activeIndex !== undefined) {\n      // Legacy compatible. This effect update should not trigger `onPanelChange`\n      triggerModeChange(null, picker, false);\n    }\n  }, [mergedOpen, activeIndex, picker]);\n\n  // >>> For complex picker, we need check if need to focus next one\n  useLayoutEffect(function () {\n    var lastOp = lastOperation();\n\n    // Trade as confirm on field leave\n    if (!mergedOpen && lastOp === 'input') {\n      triggerOpen(false);\n      triggerPartConfirm(null, true);\n    }\n\n    // Submit with complex picker\n    if (!mergedOpen && complexPicker && !needConfirm && lastOp === 'panel') {\n      triggerOpen(true);\n      triggerPartConfirm();\n    }\n  }, [mergedOpen]);\n\n  // ====================== DevWarning ======================\n  if (process.env.NODE_ENV !== 'production') {\n    var isIndexEmpty = function isIndexEmpty(index) {\n      return (\n        // Value is empty\n        !(value !== null && value !== void 0 && value[index]) &&\n        // DefaultValue is empty\n        !(defaultValue !== null && defaultValue !== void 0 && defaultValue[index])\n      );\n    };\n    if (disabled.some(function (fieldDisabled, index) {\n      return fieldDisabled && isIndexEmpty(index) && !allowEmpty[index];\n    })) {\n      warning(false, '`disabled` should not set with empty `value`. You should set `allowEmpty` or `value` instead.');\n    }\n  }\n\n  // ======================== Render ========================\n  return /*#__PURE__*/React.createElement(PickerContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(PickerTrigger, _extends({}, pickTriggerProps(filledProps), {\n    popupElement: panel,\n    popupStyle: styles.popup,\n    popupClassName: classNames.popup\n    // Visible\n    ,\n    visible: mergedOpen,\n    onClose: onPopupClose\n    // Range\n    ,\n    range: true\n  }), /*#__PURE__*/React.createElement(RangeSelector\n  // Shared\n  , _extends({}, filledProps, {\n    // Ref\n    ref: selectorRef\n    // Icon\n    ,\n    suffixIcon: suffixIcon\n    // Active\n    ,\n    activeIndex: focused || mergedOpen ? activeIndex : null,\n    activeHelp: !!internalHoverValues,\n    allHelp: !!internalHoverValues && hoverSource === 'preset',\n    focused: focused,\n    onFocus: onSelectorFocus,\n    onBlur: onSelectorBlur,\n    onKeyDown: onSelectorKeyDown,\n    onSubmit: triggerPartConfirm\n    // Change\n    ,\n    value: hoverValues,\n    maskFormat: maskFormat,\n    onChange: onSelectorChange,\n    onInputChange: onSelectorInputChange\n    // Format\n    ,\n    format: formatList,\n    inputReadOnly: inputReadOnly\n    // Disabled\n    ,\n    disabled: disabled\n    // Open\n    ,\n    open: mergedOpen,\n    onOpenChange: triggerOpen\n    // Click\n    ,\n    onClick: onSelectorClick,\n    onClear: onSelectorClear\n    // Invalid\n    ,\n    invalid: submitInvalidates,\n    onInvalid: onSelectorInvalid\n    // Offset\n    ,\n    onActiveOffset: setActiveOffset\n  }))));\n}\nvar RefRangePicker = /*#__PURE__*/React.forwardRef(RangePicker);\nif (process.env.NODE_ENV !== 'production') {\n  RefRangePicker.displayName = 'RefRangePicker';\n}\nexport default RefRangePicker;"]},"metadata":{},"sourceType":"module"}