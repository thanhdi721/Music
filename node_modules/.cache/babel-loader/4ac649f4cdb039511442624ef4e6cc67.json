{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nexport function findValidateTime(date, getHourUnits, getMinuteUnits, getSecondUnits, getMillisecondUnits, generateConfig) {\n  var nextDate = date;\n\n  function alignValidate(getUnitValue, setUnitValue, units) {\n    var nextValue = generateConfig[getUnitValue](nextDate);\n    var nextUnit = units.find(function (unit) {\n      return unit.value === nextValue;\n    });\n\n    if (!nextUnit || nextUnit.disabled) {\n      // Find most closest unit\n      var validateUnits = units.filter(function (unit) {\n        return !unit.disabled;\n      });\n\n      var reverseEnabledUnits = _toConsumableArray(validateUnits).reverse();\n\n      var validateUnit = reverseEnabledUnits.find(function (unit) {\n        return unit.value <= nextValue;\n      }) || validateUnits[0];\n\n      if (validateUnit) {\n        nextValue = validateUnit.value;\n        nextDate = generateConfig[setUnitValue](nextDate, nextValue);\n      }\n    }\n\n    return nextValue;\n  } // Find validate hour\n\n\n  var nextHour = alignValidate('getHour', 'setHour', getHourUnits()); // Find validate minute\n\n  var nextMinute = alignValidate('getMinute', 'setMinute', getMinuteUnits(nextHour)); // Find validate second\n\n  var nextSecond = alignValidate('getSecond', 'setSecond', getSecondUnits(nextHour, nextMinute)); // Find validate millisecond\n\n  alignValidate('getMillisecond', 'setMillisecond', getMillisecondUnits(nextHour, nextMinute, nextSecond));\n  return nextDate;\n}","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/rc-picker/es/PickerPanel/TimePanel/TimePanelBody/util.js"],"names":["_toConsumableArray","findValidateTime","date","getHourUnits","getMinuteUnits","getSecondUnits","getMillisecondUnits","generateConfig","nextDate","alignValidate","getUnitValue","setUnitValue","units","nextValue","nextUnit","find","unit","value","disabled","validateUnits","filter","reverseEnabledUnits","reverse","validateUnit","nextHour","nextMinute","nextSecond"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,8CAA/B;AACA,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,YAAhC,EAA8CC,cAA9C,EAA8DC,cAA9D,EAA8EC,mBAA9E,EAAmGC,cAAnG,EAAmH;AACxH,MAAIC,QAAQ,GAAGN,IAAf;;AACA,WAASO,aAAT,CAAuBC,YAAvB,EAAqCC,YAArC,EAAmDC,KAAnD,EAA0D;AACxD,QAAIC,SAAS,GAAGN,cAAc,CAACG,YAAD,CAAd,CAA6BF,QAA7B,CAAhB;AACA,QAAIM,QAAQ,GAAGF,KAAK,CAACG,IAAN,CAAW,UAAUC,IAAV,EAAgB;AACxC,aAAOA,IAAI,CAACC,KAAL,KAAeJ,SAAtB;AACD,KAFc,CAAf;;AAGA,QAAI,CAACC,QAAD,IAAaA,QAAQ,CAACI,QAA1B,EAAoC;AAClC;AACA,UAAIC,aAAa,GAAGP,KAAK,CAACQ,MAAN,CAAa,UAAUJ,IAAV,EAAgB;AAC/C,eAAO,CAACA,IAAI,CAACE,QAAb;AACD,OAFmB,CAApB;;AAGA,UAAIG,mBAAmB,GAAGrB,kBAAkB,CAACmB,aAAD,CAAlB,CAAkCG,OAAlC,EAA1B;;AACA,UAAIC,YAAY,GAAGF,mBAAmB,CAACN,IAApB,CAAyB,UAAUC,IAAV,EAAgB;AAC1D,eAAOA,IAAI,CAACC,KAAL,IAAcJ,SAArB;AACD,OAFkB,KAEbM,aAAa,CAAC,CAAD,CAFnB;;AAGA,UAAII,YAAJ,EAAkB;AAChBV,QAAAA,SAAS,GAAGU,YAAY,CAACN,KAAzB;AACAT,QAAAA,QAAQ,GAAGD,cAAc,CAACI,YAAD,CAAd,CAA6BH,QAA7B,EAAuCK,SAAvC,CAAX;AACD;AACF;;AACD,WAAOA,SAAP;AACD,GAtBuH,CAwBxH;;;AACA,MAAIW,QAAQ,GAAGf,aAAa,CAAC,SAAD,EAAY,SAAZ,EAAuBN,YAAY,EAAnC,CAA5B,CAzBwH,CA2BxH;;AACA,MAAIsB,UAAU,GAAGhB,aAAa,CAAC,WAAD,EAAc,WAAd,EAA2BL,cAAc,CAACoB,QAAD,CAAzC,CAA9B,CA5BwH,CA8BxH;;AACA,MAAIE,UAAU,GAAGjB,aAAa,CAAC,WAAD,EAAc,WAAd,EAA2BJ,cAAc,CAACmB,QAAD,EAAWC,UAAX,CAAzC,CAA9B,CA/BwH,CAiCxH;;AACAhB,EAAAA,aAAa,CAAC,gBAAD,EAAmB,gBAAnB,EAAqCH,mBAAmB,CAACkB,QAAD,EAAWC,UAAX,EAAuBC,UAAvB,CAAxD,CAAb;AACA,SAAOlB,QAAP;AACD","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nexport function findValidateTime(date, getHourUnits, getMinuteUnits, getSecondUnits, getMillisecondUnits, generateConfig) {\n  var nextDate = date;\n  function alignValidate(getUnitValue, setUnitValue, units) {\n    var nextValue = generateConfig[getUnitValue](nextDate);\n    var nextUnit = units.find(function (unit) {\n      return unit.value === nextValue;\n    });\n    if (!nextUnit || nextUnit.disabled) {\n      // Find most closest unit\n      var validateUnits = units.filter(function (unit) {\n        return !unit.disabled;\n      });\n      var reverseEnabledUnits = _toConsumableArray(validateUnits).reverse();\n      var validateUnit = reverseEnabledUnits.find(function (unit) {\n        return unit.value <= nextValue;\n      }) || validateUnits[0];\n      if (validateUnit) {\n        nextValue = validateUnit.value;\n        nextDate = generateConfig[setUnitValue](nextDate, nextValue);\n      }\n    }\n    return nextValue;\n  }\n\n  // Find validate hour\n  var nextHour = alignValidate('getHour', 'setHour', getHourUnits());\n\n  // Find validate minute\n  var nextMinute = alignValidate('getMinute', 'setMinute', getMinuteUnits(nextHour));\n\n  // Find validate second\n  var nextSecond = alignValidate('getSecond', 'setSecond', getSecondUnits(nextHour, nextMinute));\n\n  // Find validate millisecond\n  alignValidate('getMillisecond', 'setMillisecond', getMillisecondUnits(nextHour, nextMinute, nextSecond));\n  return nextDate;\n}"]},"metadata":{},"sourceType":"module"}