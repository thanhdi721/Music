{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { genStyleHooks, mergeToken } from '../../theme/internal'; // ============================== Styles ==============================\n\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    lineHeightHeading3,\n    iconCls,\n    padding,\n    paddingXL,\n    paddingXS,\n    paddingLG,\n    marginXS,\n    lineHeight\n  } = token;\n  return {\n    // Result\n    [componentCls]: {\n      padding: `${unit(token.calc(paddingLG).mul(2).equal())} ${unit(paddingXL)}`,\n      // RTL\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    },\n    // Exception Status image\n    [`${componentCls} ${componentCls}-image`]: {\n      width: token.imageWidth,\n      height: token.imageHeight,\n      margin: 'auto'\n    },\n    [`${componentCls} ${componentCls}-icon`]: {\n      marginBottom: paddingLG,\n      textAlign: 'center',\n      [`& > ${iconCls}`]: {\n        fontSize: token.iconFontSize\n      }\n    },\n    [`${componentCls} ${componentCls}-title`]: {\n      color: token.colorTextHeading,\n      fontSize: token.titleFontSize,\n      lineHeight: lineHeightHeading3,\n      marginBlock: marginXS,\n      textAlign: 'center'\n    },\n    [`${componentCls} ${componentCls}-subtitle`]: {\n      color: token.colorTextDescription,\n      fontSize: token.subtitleFontSize,\n      lineHeight,\n      textAlign: 'center'\n    },\n    [`${componentCls} ${componentCls}-content`]: {\n      marginTop: paddingLG,\n      padding: `${unit(paddingLG)} ${unit(token.calc(padding).mul(2.5).equal())}`,\n      backgroundColor: token.colorFillAlter\n    },\n    [`${componentCls} ${componentCls}-extra`]: {\n      margin: token.extraMargin,\n      textAlign: 'center',\n      '& > *': {\n        marginInlineEnd: paddingXS,\n        '&:last-child': {\n          marginInlineEnd: 0\n        }\n      }\n    }\n  };\n};\n\nconst genStatusIconStyle = token => {\n  const {\n    componentCls,\n    iconCls\n  } = token;\n  return {\n    [`${componentCls}-success ${componentCls}-icon > ${iconCls}`]: {\n      color: token.resultSuccessIconColor\n    },\n    [`${componentCls}-error ${componentCls}-icon > ${iconCls}`]: {\n      color: token.resultErrorIconColor\n    },\n    [`${componentCls}-info ${componentCls}-icon > ${iconCls}`]: {\n      color: token.resultInfoIconColor\n    },\n    [`${componentCls}-warning ${componentCls}-icon > ${iconCls}`]: {\n      color: token.resultWarningIconColor\n    }\n  };\n};\n\nconst genResultStyle = token => [genBaseStyle(token), genStatusIconStyle(token)];\n\nconst getStyle = token => genResultStyle(token); // ============================== Export ==============================\n\n\nexport const prepareComponentToken = token => ({\n  titleFontSize: token.fontSizeHeading3,\n  subtitleFontSize: token.fontSize,\n  iconFontSize: token.fontSizeHeading3 * 3,\n  extraMargin: `${token.paddingLG}px 0 0 0`\n});\nexport default genStyleHooks('Result', token => {\n  const resultInfoIconColor = token.colorInfo;\n  const resultErrorIconColor = token.colorError;\n  const resultSuccessIconColor = token.colorSuccess;\n  const resultWarningIconColor = token.colorWarning;\n  const resultToken = mergeToken(token, {\n    resultInfoIconColor,\n    resultErrorIconColor,\n    resultSuccessIconColor,\n    resultWarningIconColor,\n    imageWidth: 250,\n    imageHeight: 295\n  });\n  return [getStyle(resultToken)];\n}, prepareComponentToken);","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/result/style/index.js"],"names":["unit","genStyleHooks","mergeToken","genBaseStyle","token","componentCls","lineHeightHeading3","iconCls","padding","paddingXL","paddingXS","paddingLG","marginXS","lineHeight","calc","mul","equal","direction","width","imageWidth","height","imageHeight","margin","marginBottom","textAlign","fontSize","iconFontSize","color","colorTextHeading","titleFontSize","marginBlock","colorTextDescription","subtitleFontSize","marginTop","backgroundColor","colorFillAlter","extraMargin","marginInlineEnd","genStatusIconStyle","resultSuccessIconColor","resultErrorIconColor","resultInfoIconColor","resultWarningIconColor","genResultStyle","getStyle","prepareComponentToken","fontSizeHeading3","colorInfo","colorError","colorSuccess","colorWarning","resultToken"],"mappings":"AAAA,SAASA,IAAT,QAAqB,qBAArB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,sBAA1C,C,CACA;;AACA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,kBAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,SANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA;AATI,MAUFT,KAVJ;AAWA,SAAO;AACL;AACA,KAACC,YAAD,GAAgB;AACdG,MAAAA,OAAO,EAAG,GAAER,IAAI,CAACI,KAAK,CAACU,IAAN,CAAWH,SAAX,EAAsBI,GAAtB,CAA0B,CAA1B,EAA6BC,KAA7B,EAAD,CAAuC,IAAGhB,IAAI,CAACS,SAAD,CAAY,EAD5D;AAEd;AACA,eAAS;AACPQ,QAAAA,SAAS,EAAE;AADJ;AAHK,KAFX;AASL;AACA,KAAE,GAAEZ,YAAa,IAAGA,YAAa,QAAjC,GAA2C;AACzCa,MAAAA,KAAK,EAAEd,KAAK,CAACe,UAD4B;AAEzCC,MAAAA,MAAM,EAAEhB,KAAK,CAACiB,WAF2B;AAGzCC,MAAAA,MAAM,EAAE;AAHiC,KAVtC;AAeL,KAAE,GAAEjB,YAAa,IAAGA,YAAa,OAAjC,GAA0C;AACxCkB,MAAAA,YAAY,EAAEZ,SAD0B;AAExCa,MAAAA,SAAS,EAAE,QAF6B;AAGxC,OAAE,OAAMjB,OAAQ,EAAhB,GAAoB;AAClBkB,QAAAA,QAAQ,EAAErB,KAAK,CAACsB;AADE;AAHoB,KAfrC;AAsBL,KAAE,GAAErB,YAAa,IAAGA,YAAa,QAAjC,GAA2C;AACzCsB,MAAAA,KAAK,EAAEvB,KAAK,CAACwB,gBAD4B;AAEzCH,MAAAA,QAAQ,EAAErB,KAAK,CAACyB,aAFyB;AAGzChB,MAAAA,UAAU,EAAEP,kBAH6B;AAIzCwB,MAAAA,WAAW,EAAElB,QAJ4B;AAKzCY,MAAAA,SAAS,EAAE;AAL8B,KAtBtC;AA6BL,KAAE,GAAEnB,YAAa,IAAGA,YAAa,WAAjC,GAA8C;AAC5CsB,MAAAA,KAAK,EAAEvB,KAAK,CAAC2B,oBAD+B;AAE5CN,MAAAA,QAAQ,EAAErB,KAAK,CAAC4B,gBAF4B;AAG5CnB,MAAAA,UAH4C;AAI5CW,MAAAA,SAAS,EAAE;AAJiC,KA7BzC;AAmCL,KAAE,GAAEnB,YAAa,IAAGA,YAAa,UAAjC,GAA6C;AAC3C4B,MAAAA,SAAS,EAAEtB,SADgC;AAE3CH,MAAAA,OAAO,EAAG,GAAER,IAAI,CAACW,SAAD,CAAY,IAAGX,IAAI,CAACI,KAAK,CAACU,IAAN,CAAWN,OAAX,EAAoBO,GAApB,CAAwB,GAAxB,EAA6BC,KAA7B,EAAD,CAAuC,EAF/B;AAG3CkB,MAAAA,eAAe,EAAE9B,KAAK,CAAC+B;AAHoB,KAnCxC;AAwCL,KAAE,GAAE9B,YAAa,IAAGA,YAAa,QAAjC,GAA2C;AACzCiB,MAAAA,MAAM,EAAElB,KAAK,CAACgC,WAD2B;AAEzCZ,MAAAA,SAAS,EAAE,QAF8B;AAGzC,eAAS;AACPa,QAAAA,eAAe,EAAE3B,SADV;AAEP,wBAAgB;AACd2B,UAAAA,eAAe,EAAE;AADH;AAFT;AAHgC;AAxCtC,GAAP;AAmDD,CA/DD;;AAgEA,MAAMC,kBAAkB,GAAGlC,KAAK,IAAI;AAClC,QAAM;AACJC,IAAAA,YADI;AAEJE,IAAAA;AAFI,MAGFH,KAHJ;AAIA,SAAO;AACL,KAAE,GAAEC,YAAa,YAAWA,YAAa,WAAUE,OAAQ,EAA3D,GAA+D;AAC7DoB,MAAAA,KAAK,EAAEvB,KAAK,CAACmC;AADgD,KAD1D;AAIL,KAAE,GAAElC,YAAa,UAASA,YAAa,WAAUE,OAAQ,EAAzD,GAA6D;AAC3DoB,MAAAA,KAAK,EAAEvB,KAAK,CAACoC;AAD8C,KAJxD;AAOL,KAAE,GAAEnC,YAAa,SAAQA,YAAa,WAAUE,OAAQ,EAAxD,GAA4D;AAC1DoB,MAAAA,KAAK,EAAEvB,KAAK,CAACqC;AAD6C,KAPvD;AAUL,KAAE,GAAEpC,YAAa,YAAWA,YAAa,WAAUE,OAAQ,EAA3D,GAA+D;AAC7DoB,MAAAA,KAAK,EAAEvB,KAAK,CAACsC;AADgD;AAV1D,GAAP;AAcD,CAnBD;;AAoBA,MAAMC,cAAc,GAAGvC,KAAK,IAAI,CAACD,YAAY,CAACC,KAAD,CAAb,EAAsBkC,kBAAkB,CAAClC,KAAD,CAAxC,CAAhC;;AACA,MAAMwC,QAAQ,GAAGxC,KAAK,IAAIuC,cAAc,CAACvC,KAAD,CAAxC,C,CACA;;;AACA,OAAO,MAAMyC,qBAAqB,GAAGzC,KAAK,KAAK;AAC7CyB,EAAAA,aAAa,EAAEzB,KAAK,CAAC0C,gBADwB;AAE7Cd,EAAAA,gBAAgB,EAAE5B,KAAK,CAACqB,QAFqB;AAG7CC,EAAAA,YAAY,EAAEtB,KAAK,CAAC0C,gBAAN,GAAyB,CAHM;AAI7CV,EAAAA,WAAW,EAAG,GAAEhC,KAAK,CAACO,SAAU;AAJa,CAAL,CAAnC;AAMP,eAAeV,aAAa,CAAC,QAAD,EAAWG,KAAK,IAAI;AAC9C,QAAMqC,mBAAmB,GAAGrC,KAAK,CAAC2C,SAAlC;AACA,QAAMP,oBAAoB,GAAGpC,KAAK,CAAC4C,UAAnC;AACA,QAAMT,sBAAsB,GAAGnC,KAAK,CAAC6C,YAArC;AACA,QAAMP,sBAAsB,GAAGtC,KAAK,CAAC8C,YAArC;AACA,QAAMC,WAAW,GAAGjD,UAAU,CAACE,KAAD,EAAQ;AACpCqC,IAAAA,mBADoC;AAEpCD,IAAAA,oBAFoC;AAGpCD,IAAAA,sBAHoC;AAIpCG,IAAAA,sBAJoC;AAKpCvB,IAAAA,UAAU,EAAE,GALwB;AAMpCE,IAAAA,WAAW,EAAE;AANuB,GAAR,CAA9B;AAQA,SAAO,CAACuB,QAAQ,CAACO,WAAD,CAAT,CAAP;AACD,CAd2B,EAczBN,qBAdyB,CAA5B","sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Styles ==============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    lineHeightHeading3,\n    iconCls,\n    padding,\n    paddingXL,\n    paddingXS,\n    paddingLG,\n    marginXS,\n    lineHeight\n  } = token;\n  return {\n    // Result\n    [componentCls]: {\n      padding: `${unit(token.calc(paddingLG).mul(2).equal())} ${unit(paddingXL)}`,\n      // RTL\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    },\n    // Exception Status image\n    [`${componentCls} ${componentCls}-image`]: {\n      width: token.imageWidth,\n      height: token.imageHeight,\n      margin: 'auto'\n    },\n    [`${componentCls} ${componentCls}-icon`]: {\n      marginBottom: paddingLG,\n      textAlign: 'center',\n      [`& > ${iconCls}`]: {\n        fontSize: token.iconFontSize\n      }\n    },\n    [`${componentCls} ${componentCls}-title`]: {\n      color: token.colorTextHeading,\n      fontSize: token.titleFontSize,\n      lineHeight: lineHeightHeading3,\n      marginBlock: marginXS,\n      textAlign: 'center'\n    },\n    [`${componentCls} ${componentCls}-subtitle`]: {\n      color: token.colorTextDescription,\n      fontSize: token.subtitleFontSize,\n      lineHeight,\n      textAlign: 'center'\n    },\n    [`${componentCls} ${componentCls}-content`]: {\n      marginTop: paddingLG,\n      padding: `${unit(paddingLG)} ${unit(token.calc(padding).mul(2.5).equal())}`,\n      backgroundColor: token.colorFillAlter\n    },\n    [`${componentCls} ${componentCls}-extra`]: {\n      margin: token.extraMargin,\n      textAlign: 'center',\n      '& > *': {\n        marginInlineEnd: paddingXS,\n        '&:last-child': {\n          marginInlineEnd: 0\n        }\n      }\n    }\n  };\n};\nconst genStatusIconStyle = token => {\n  const {\n    componentCls,\n    iconCls\n  } = token;\n  return {\n    [`${componentCls}-success ${componentCls}-icon > ${iconCls}`]: {\n      color: token.resultSuccessIconColor\n    },\n    [`${componentCls}-error ${componentCls}-icon > ${iconCls}`]: {\n      color: token.resultErrorIconColor\n    },\n    [`${componentCls}-info ${componentCls}-icon > ${iconCls}`]: {\n      color: token.resultInfoIconColor\n    },\n    [`${componentCls}-warning ${componentCls}-icon > ${iconCls}`]: {\n      color: token.resultWarningIconColor\n    }\n  };\n};\nconst genResultStyle = token => [genBaseStyle(token), genStatusIconStyle(token)];\nconst getStyle = token => genResultStyle(token);\n// ============================== Export ==============================\nexport const prepareComponentToken = token => ({\n  titleFontSize: token.fontSizeHeading3,\n  subtitleFontSize: token.fontSize,\n  iconFontSize: token.fontSizeHeading3 * 3,\n  extraMargin: `${token.paddingLG}px 0 0 0`\n});\nexport default genStyleHooks('Result', token => {\n  const resultInfoIconColor = token.colorInfo;\n  const resultErrorIconColor = token.colorError;\n  const resultSuccessIconColor = token.colorSuccess;\n  const resultWarningIconColor = token.colorWarning;\n  const resultToken = mergeToken(token, {\n    resultInfoIconColor,\n    resultErrorIconColor,\n    resultSuccessIconColor,\n    resultWarningIconColor,\n    imageWidth: 250,\n    imageHeight: 295\n  });\n  return [getStyle(resultToken)];\n}, prepareComponentToken);"]},"metadata":{},"sourceType":"module"}