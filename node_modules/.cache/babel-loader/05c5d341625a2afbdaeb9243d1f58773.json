{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { usePanelContext } from \"../../context\";\nimport useScrollTo from \"./useScrollTo\";\nvar SCROLL_DELAY = 300;\nexport default function TimeColumn(props) {\n  var units = props.units,\n      value = props.value,\n      optionalValue = props.optionalValue,\n      type = props.type,\n      onChange = props.onChange,\n      onDblClick = props.onDblClick,\n      changeOnScroll = props.changeOnScroll;\n\n  var _usePanelContext = usePanelContext(),\n      prefixCls = _usePanelContext.prefixCls,\n      cellRender = _usePanelContext.cellRender,\n      now = _usePanelContext.now,\n      locale = _usePanelContext.locale;\n\n  var panelPrefixCls = \"\".concat(prefixCls, \"-time-panel\");\n  var cellPrefixCls = \"\".concat(prefixCls, \"-time-panel-cell\"); // ========================== Refs ==========================\n\n  var ulRef = React.useRef(null); // ========================= Scroll =========================\n\n  var checkDelayRef = React.useRef();\n\n  var clearDelayCheck = function clearDelayCheck() {\n    clearTimeout(checkDelayRef.current);\n  }; // ========================== Sync ==========================\n\n\n  var _useScrollTo = useScrollTo(ulRef, value !== null && value !== void 0 ? value : optionalValue),\n      _useScrollTo2 = _slicedToArray(_useScrollTo, 3),\n      syncScroll = _useScrollTo2[0],\n      stopScroll = _useScrollTo2[1],\n      isScrolling = _useScrollTo2[2]; // Effect sync value scroll\n\n\n  useLayoutEffect(function () {\n    syncScroll();\n    clearDelayCheck();\n    return function () {\n      stopScroll();\n      clearDelayCheck();\n    };\n  }, [value, optionalValue, units]); // ========================= Change =========================\n  // Scroll event if sync onScroll\n\n  var onInternalScroll = function onInternalScroll(event) {\n    clearDelayCheck();\n    var target = event.target;\n\n    if (!isScrolling() && changeOnScroll) {\n      checkDelayRef.current = setTimeout(function () {\n        var ul = ulRef.current;\n        var firstLiTop = ul.querySelector(\"li\").offsetTop;\n        var liList = Array.from(ul.querySelectorAll(\"li\"));\n        var liTopList = liList.map(function (li) {\n          return li.offsetTop - firstLiTop;\n        });\n        var liDistList = liTopList.map(function (top, index) {\n          if (units[index].disabled) {\n            return Number.MAX_SAFE_INTEGER;\n          }\n\n          return Math.abs(top - target.scrollTop);\n        }); // Find min distance index\n\n        var minDist = Math.min.apply(Math, _toConsumableArray(liDistList));\n        var minDistIndex = liDistList.findIndex(function (dist) {\n          return dist === minDist;\n        });\n        var targetUnit = units[minDistIndex];\n\n        if (targetUnit && !targetUnit.disabled) {\n          onChange(targetUnit.value);\n        }\n      }, SCROLL_DELAY);\n    }\n  }; // ========================= Render =========================\n\n\n  var columnPrefixCls = \"\".concat(panelPrefixCls, \"-column\");\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: columnPrefixCls,\n    ref: ulRef,\n    \"data-type\": type,\n    onScroll: onInternalScroll\n  }, units.map(function (_ref) {\n    var label = _ref.label,\n        unitValue = _ref.value,\n        disabled = _ref.disabled;\n    var inner = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(cellPrefixCls, \"-inner\")\n    }, label);\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: unitValue,\n      className: classNames(cellPrefixCls, _defineProperty(_defineProperty({}, \"\".concat(cellPrefixCls, \"-selected\"), value === unitValue), \"\".concat(cellPrefixCls, \"-disabled\"), disabled)),\n      onClick: function onClick() {\n        if (!disabled) {\n          onChange(unitValue);\n        }\n      },\n      onDoubleClick: function onDoubleClick() {\n        if (!disabled && onDblClick) {\n          onDblClick();\n        }\n      },\n      \"data-value\": unitValue\n    }, cellRender ? cellRender(unitValue, {\n      prefixCls: prefixCls,\n      originNode: inner,\n      today: now,\n      type: 'time',\n      subType: type,\n      locale: locale\n    }) : inner);\n  }));\n}","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/rc-picker/es/PickerPanel/TimePanel/TimePanelBody/TimeColumn.js"],"names":["_defineProperty","_toConsumableArray","_slicedToArray","classNames","useLayoutEffect","React","usePanelContext","useScrollTo","SCROLL_DELAY","TimeColumn","props","units","value","optionalValue","type","onChange","onDblClick","changeOnScroll","_usePanelContext","prefixCls","cellRender","now","locale","panelPrefixCls","concat","cellPrefixCls","ulRef","useRef","checkDelayRef","clearDelayCheck","clearTimeout","current","_useScrollTo","_useScrollTo2","syncScroll","stopScroll","isScrolling","onInternalScroll","event","target","setTimeout","ul","firstLiTop","querySelector","offsetTop","liList","Array","from","querySelectorAll","liTopList","map","li","liDistList","top","index","disabled","Number","MAX_SAFE_INTEGER","Math","abs","scrollTop","minDist","min","apply","minDistIndex","findIndex","dist","targetUnit","columnPrefixCls","createElement","className","ref","onScroll","_ref","label","unitValue","inner","key","onClick","onDoubleClick","originNode","today","subType"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { usePanelContext } from \"../../context\";\nimport useScrollTo from \"./useScrollTo\";\nvar SCROLL_DELAY = 300;\nexport default function TimeColumn(props) {\n  var units = props.units,\n    value = props.value,\n    optionalValue = props.optionalValue,\n    type = props.type,\n    onChange = props.onChange,\n    onDblClick = props.onDblClick,\n    changeOnScroll = props.changeOnScroll;\n  var _usePanelContext = usePanelContext(),\n    prefixCls = _usePanelContext.prefixCls,\n    cellRender = _usePanelContext.cellRender,\n    now = _usePanelContext.now,\n    locale = _usePanelContext.locale;\n  var panelPrefixCls = \"\".concat(prefixCls, \"-time-panel\");\n  var cellPrefixCls = \"\".concat(prefixCls, \"-time-panel-cell\");\n\n  // ========================== Refs ==========================\n  var ulRef = React.useRef(null);\n\n  // ========================= Scroll =========================\n  var checkDelayRef = React.useRef();\n  var clearDelayCheck = function clearDelayCheck() {\n    clearTimeout(checkDelayRef.current);\n  };\n\n  // ========================== Sync ==========================\n  var _useScrollTo = useScrollTo(ulRef, value !== null && value !== void 0 ? value : optionalValue),\n    _useScrollTo2 = _slicedToArray(_useScrollTo, 3),\n    syncScroll = _useScrollTo2[0],\n    stopScroll = _useScrollTo2[1],\n    isScrolling = _useScrollTo2[2];\n\n  // Effect sync value scroll\n  useLayoutEffect(function () {\n    syncScroll();\n    clearDelayCheck();\n    return function () {\n      stopScroll();\n      clearDelayCheck();\n    };\n  }, [value, optionalValue, units]);\n\n  // ========================= Change =========================\n  // Scroll event if sync onScroll\n  var onInternalScroll = function onInternalScroll(event) {\n    clearDelayCheck();\n    var target = event.target;\n    if (!isScrolling() && changeOnScroll) {\n      checkDelayRef.current = setTimeout(function () {\n        var ul = ulRef.current;\n        var firstLiTop = ul.querySelector(\"li\").offsetTop;\n        var liList = Array.from(ul.querySelectorAll(\"li\"));\n        var liTopList = liList.map(function (li) {\n          return li.offsetTop - firstLiTop;\n        });\n        var liDistList = liTopList.map(function (top, index) {\n          if (units[index].disabled) {\n            return Number.MAX_SAFE_INTEGER;\n          }\n          return Math.abs(top - target.scrollTop);\n        });\n\n        // Find min distance index\n        var minDist = Math.min.apply(Math, _toConsumableArray(liDistList));\n        var minDistIndex = liDistList.findIndex(function (dist) {\n          return dist === minDist;\n        });\n        var targetUnit = units[minDistIndex];\n        if (targetUnit && !targetUnit.disabled) {\n          onChange(targetUnit.value);\n        }\n      }, SCROLL_DELAY);\n    }\n  };\n\n  // ========================= Render =========================\n  var columnPrefixCls = \"\".concat(panelPrefixCls, \"-column\");\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: columnPrefixCls,\n    ref: ulRef,\n    \"data-type\": type,\n    onScroll: onInternalScroll\n  }, units.map(function (_ref) {\n    var label = _ref.label,\n      unitValue = _ref.value,\n      disabled = _ref.disabled;\n    var inner = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(cellPrefixCls, \"-inner\")\n    }, label);\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: unitValue,\n      className: classNames(cellPrefixCls, _defineProperty(_defineProperty({}, \"\".concat(cellPrefixCls, \"-selected\"), value === unitValue), \"\".concat(cellPrefixCls, \"-disabled\"), disabled)),\n      onClick: function onClick() {\n        if (!disabled) {\n          onChange(unitValue);\n        }\n      },\n      onDoubleClick: function onDoubleClick() {\n        if (!disabled && onDblClick) {\n          onDblClick();\n        }\n      },\n      \"data-value\": unitValue\n    }, cellRender ? cellRender(unitValue, {\n      prefixCls: prefixCls,\n      originNode: inner,\n      today: now,\n      type: 'time',\n      subType: type,\n      locale: locale\n    }) : inner);\n  }));\n}"]},"metadata":{},"sourceType":"module"}