{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport { supportRef, useComposeRef } from \"rc-util/es/ref\";\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport DomWrapper from \"./wrapper\";\nimport useMutateObserver from \"./useMutateObserver\";\n\nvar MutateObserver = function MutateObserver(props) {\n  var children = props.children,\n      options = props.options,\n      _props$onMutate = props.onMutate,\n      onMutate = _props$onMutate === void 0 ? function () {} : _props$onMutate;\n  var callback = useEvent(onMutate);\n  var wrapperRef = React.useRef(null);\n  var elementRef = React.useRef(null);\n  var canRef = /*#__PURE__*/React.isValidElement(children) && supportRef(children);\n  var mergedRef = useComposeRef(elementRef, canRef ? children.ref : null);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      target = _React$useState2[0],\n      setTarget = _React$useState2[1];\n\n  useMutateObserver(target, callback, options); // =========================== Effect ===========================\n  // Bind target\n\n  useLayoutEffect(function () {\n    setTarget(findDOMNode(elementRef.current) || findDOMNode(wrapperRef.current));\n  }); // =========================== Render ===========================\n\n  if (!children) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error('MutationObserver need children props');\n    }\n\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(DomWrapper, {\n    ref: wrapperRef\n  }, canRef ? /*#__PURE__*/React.cloneElement(children, {\n    ref: mergedRef\n  }) : children);\n};\n\nexport default MutateObserver;","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/@rc-component/mutate-observer/es/MutateObserver.js"],"names":["_slicedToArray","React","useLayoutEffect","supportRef","useComposeRef","findDOMNode","useEvent","DomWrapper","useMutateObserver","MutateObserver","props","children","options","_props$onMutate","onMutate","callback","wrapperRef","useRef","elementRef","canRef","isValidElement","mergedRef","ref","_React$useState","useState","_React$useState2","target","setTarget","current","process","env","NODE_ENV","console","error","createElement","cloneElement"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,gBAA1C;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AACA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAClD,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACEC,OAAO,GAAGF,KAAK,CAACE,OADlB;AAAA,MAEEC,eAAe,GAAGH,KAAK,CAACI,QAF1B;AAAA,MAGEA,QAAQ,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,YAAY,CAAE,CAA3C,GAA8CA,eAH3D;AAIA,MAAIE,QAAQ,GAAGT,QAAQ,CAACQ,QAAD,CAAvB;AACA,MAAIE,UAAU,GAAGf,KAAK,CAACgB,MAAN,CAAa,IAAb,CAAjB;AACA,MAAIC,UAAU,GAAGjB,KAAK,CAACgB,MAAN,CAAa,IAAb,CAAjB;AACA,MAAIE,MAAM,GAAG,aAAalB,KAAK,CAACmB,cAAN,CAAqBT,QAArB,KAAkCR,UAAU,CAACQ,QAAD,CAAtE;AACA,MAAIU,SAAS,GAAGjB,aAAa,CAACc,UAAD,EAAaC,MAAM,GAAGR,QAAQ,CAACW,GAAZ,GAAkB,IAArC,CAA7B;;AACA,MAAIC,eAAe,GAAGtB,KAAK,CAACuB,QAAN,CAAe,IAAf,CAAtB;AAAA,MACEC,gBAAgB,GAAGzB,cAAc,CAACuB,eAAD,EAAkB,CAAlB,CADnC;AAAA,MAEEG,MAAM,GAAGD,gBAAgB,CAAC,CAAD,CAF3B;AAAA,MAGEE,SAAS,GAAGF,gBAAgB,CAAC,CAAD,CAH9B;;AAIAjB,EAAAA,iBAAiB,CAACkB,MAAD,EAASX,QAAT,EAAmBH,OAAnB,CAAjB,CAdkD,CAgBlD;AACA;;AACAV,EAAAA,eAAe,CAAC,YAAY;AAC1ByB,IAAAA,SAAS,CAACtB,WAAW,CAACa,UAAU,CAACU,OAAZ,CAAX,IAAmCvB,WAAW,CAACW,UAAU,CAACY,OAAZ,CAA/C,CAAT;AACD,GAFc,CAAf,CAlBkD,CAsBlD;;AACA,MAAI,CAACjB,QAAL,EAAe;AACb,QAAIkB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,MAAAA,OAAO,CAACC,KAAR,CAAc,sCAAd;AACD;;AACD,WAAO,IAAP;AACD;;AACD,SAAO,aAAahC,KAAK,CAACiC,aAAN,CAAoB3B,UAApB,EAAgC;AAClDe,IAAAA,GAAG,EAAEN;AAD6C,GAAhC,EAEjBG,MAAM,GAAG,aAAalB,KAAK,CAACkC,YAAN,CAAmBxB,QAAnB,EAA6B;AACpDW,IAAAA,GAAG,EAAED;AAD+C,GAA7B,CAAhB,GAEJV,QAJe,CAApB;AAKD,CAlCD;;AAmCA,eAAeF,cAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport { supportRef, useComposeRef } from \"rc-util/es/ref\";\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport DomWrapper from \"./wrapper\";\nimport useMutateObserver from \"./useMutateObserver\";\nvar MutateObserver = function MutateObserver(props) {\n  var children = props.children,\n    options = props.options,\n    _props$onMutate = props.onMutate,\n    onMutate = _props$onMutate === void 0 ? function () {} : _props$onMutate;\n  var callback = useEvent(onMutate);\n  var wrapperRef = React.useRef(null);\n  var elementRef = React.useRef(null);\n  var canRef = /*#__PURE__*/React.isValidElement(children) && supportRef(children);\n  var mergedRef = useComposeRef(elementRef, canRef ? children.ref : null);\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    target = _React$useState2[0],\n    setTarget = _React$useState2[1];\n  useMutateObserver(target, callback, options);\n\n  // =========================== Effect ===========================\n  // Bind target\n  useLayoutEffect(function () {\n    setTarget(findDOMNode(elementRef.current) || findDOMNode(wrapperRef.current));\n  });\n\n  // =========================== Render ===========================\n  if (!children) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error('MutationObserver need children props');\n    }\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(DomWrapper, {\n    ref: wrapperRef\n  }, canRef ? /*#__PURE__*/React.cloneElement(children, {\n    ref: mergedRef\n  }) : children);\n};\nexport default MutateObserver;"]},"metadata":{},"sourceType":"module"}