{"ast":null,"code":"export function getLineHeight(fontSize) {\n  return (fontSize + 8) / fontSize;\n} // https://zhuanlan.zhihu.com/p/32746810\n\nexport default function getFontSizes(base) {\n  const fontSizes = new Array(10).fill(null).map((_, index) => {\n    const i = index - 1;\n    const baseSize = base * Math.pow(2.71828, i / 5);\n    const intSize = index > 1 ? Math.floor(baseSize) : Math.ceil(baseSize); // Convert to even\n\n    return Math.floor(intSize / 2) * 2;\n  });\n  fontSizes[1] = base;\n  return fontSizes.map(size => ({\n    size,\n    lineHeight: getLineHeight(size)\n  }));\n}","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/theme/themes/shared/genFontSizes.js"],"names":["getLineHeight","fontSize","getFontSizes","base","fontSizes","Array","fill","map","_","index","i","baseSize","Math","pow","intSize","floor","ceil","size","lineHeight"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,QAAvB,EAAiC;AACtC,SAAO,CAACA,QAAQ,GAAG,CAAZ,IAAiBA,QAAxB;AACD,C,CACD;;AACA,eAAe,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACzC,QAAMC,SAAS,GAAG,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,IAAnB,EAAyBC,GAAzB,CAA6B,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC3D,UAAMC,CAAC,GAAGD,KAAK,GAAG,CAAlB;AACA,UAAME,QAAQ,GAAGR,IAAI,GAAGS,IAAI,CAACC,GAAL,CAAS,OAAT,EAAkBH,CAAC,GAAG,CAAtB,CAAxB;AACA,UAAMI,OAAO,GAAGL,KAAK,GAAG,CAAR,GAAYG,IAAI,CAACG,KAAL,CAAWJ,QAAX,CAAZ,GAAmCC,IAAI,CAACI,IAAL,CAAUL,QAAV,CAAnD,CAH2D,CAI3D;;AACA,WAAOC,IAAI,CAACG,KAAL,CAAWD,OAAO,GAAG,CAArB,IAA0B,CAAjC;AACD,GANiB,CAAlB;AAOAV,EAAAA,SAAS,CAAC,CAAD,CAAT,GAAeD,IAAf;AACA,SAAOC,SAAS,CAACG,GAAV,CAAcU,IAAI,KAAK;AAC5BA,IAAAA,IAD4B;AAE5BC,IAAAA,UAAU,EAAElB,aAAa,CAACiB,IAAD;AAFG,GAAL,CAAlB,CAAP;AAID","sourcesContent":["export function getLineHeight(fontSize) {\n  return (fontSize + 8) / fontSize;\n}\n// https://zhuanlan.zhihu.com/p/32746810\nexport default function getFontSizes(base) {\n  const fontSizes = new Array(10).fill(null).map((_, index) => {\n    const i = index - 1;\n    const baseSize = base * Math.pow(2.71828, i / 5);\n    const intSize = index > 1 ? Math.floor(baseSize) : Math.ceil(baseSize);\n    // Convert to even\n    return Math.floor(intSize / 2) * 2;\n  });\n  fontSizes[1] = base;\n  return fontSizes.map(size => ({\n    size,\n    lineHeight: getLineHeight(size)\n  }));\n}"]},"metadata":{},"sourceType":"module"}