{"ast":null,"code":"import { useMemo } from 'react';\n/**\n * Get sticky column offset width\n */\n\nfunction useStickyOffsets(colWidths, flattenColumns, direction) {\n  var stickyOffsets = useMemo(function () {\n    var columnCount = flattenColumns.length;\n\n    var getOffsets = function getOffsets(startIndex, endIndex, offset) {\n      var offsets = [];\n      var total = 0;\n\n      for (var i = startIndex; i !== endIndex; i += offset) {\n        offsets.push(total);\n\n        if (flattenColumns[i].fixed) {\n          total += colWidths[i] || 0;\n        }\n      }\n\n      return offsets;\n    };\n\n    var startOffsets = getOffsets(0, columnCount, 1);\n    var endOffsets = getOffsets(columnCount - 1, -1, -1).reverse();\n    return direction === 'rtl' ? {\n      left: endOffsets,\n      right: startOffsets\n    } : {\n      left: startOffsets,\n      right: endOffsets\n    };\n  }, [colWidths, flattenColumns, direction]);\n  return stickyOffsets;\n}\n\nexport default useStickyOffsets;","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-table/es/hooks/useStickyOffsets.js"],"names":["useMemo","useStickyOffsets","colWidths","flattenColumns","direction","stickyOffsets","columnCount","length","getOffsets","startIndex","endIndex","offset","offsets","total","i","push","fixed","startOffsets","endOffsets","reverse","left","right"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA;AACA;AACA;;AACA,SAASC,gBAAT,CAA0BC,SAA1B,EAAqCC,cAArC,EAAqDC,SAArD,EAAgE;AAC9D,MAAIC,aAAa,GAAGL,OAAO,CAAC,YAAY;AACtC,QAAIM,WAAW,GAAGH,cAAc,CAACI,MAAjC;;AACA,QAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,UAApB,EAAgCC,QAAhC,EAA0CC,MAA1C,EAAkD;AACjE,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIC,CAAC,GAAGL,UAAb,EAAyBK,CAAC,KAAKJ,QAA/B,EAAyCI,CAAC,IAAIH,MAA9C,EAAsD;AACpDC,QAAAA,OAAO,CAACG,IAAR,CAAaF,KAAb;;AACA,YAAIV,cAAc,CAACW,CAAD,CAAd,CAAkBE,KAAtB,EAA6B;AAC3BH,UAAAA,KAAK,IAAIX,SAAS,CAACY,CAAD,CAAT,IAAgB,CAAzB;AACD;AACF;;AACD,aAAOF,OAAP;AACD,KAVD;;AAWA,QAAIK,YAAY,GAAGT,UAAU,CAAC,CAAD,EAAIF,WAAJ,EAAiB,CAAjB,CAA7B;AACA,QAAIY,UAAU,GAAGV,UAAU,CAACF,WAAW,GAAG,CAAf,EAAkB,CAAC,CAAnB,EAAsB,CAAC,CAAvB,CAAV,CAAoCa,OAApC,EAAjB;AACA,WAAOf,SAAS,KAAK,KAAd,GAAsB;AAC3BgB,MAAAA,IAAI,EAAEF,UADqB;AAE3BG,MAAAA,KAAK,EAAEJ;AAFoB,KAAtB,GAGH;AACFG,MAAAA,IAAI,EAAEH,YADJ;AAEFI,MAAAA,KAAK,EAAEH;AAFL,KAHJ;AAOD,GAtB0B,EAsBxB,CAAChB,SAAD,EAAYC,cAAZ,EAA4BC,SAA5B,CAtBwB,CAA3B;AAuBA,SAAOC,aAAP;AACD;;AACD,eAAeJ,gBAAf","sourcesContent":["import { useMemo } from 'react';\n/**\n * Get sticky column offset width\n */\nfunction useStickyOffsets(colWidths, flattenColumns, direction) {\n  var stickyOffsets = useMemo(function () {\n    var columnCount = flattenColumns.length;\n    var getOffsets = function getOffsets(startIndex, endIndex, offset) {\n      var offsets = [];\n      var total = 0;\n      for (var i = startIndex; i !== endIndex; i += offset) {\n        offsets.push(total);\n        if (flattenColumns[i].fixed) {\n          total += colWidths[i] || 0;\n        }\n      }\n      return offsets;\n    };\n    var startOffsets = getOffsets(0, columnCount, 1);\n    var endOffsets = getOffsets(columnCount - 1, -1, -1).reverse();\n    return direction === 'rtl' ? {\n      left: endOffsets,\n      right: startOffsets\n    } : {\n      left: startOffsets,\n      right: endOffsets\n    };\n  }, [colWidths, flattenColumns, direction]);\n  return stickyOffsets;\n}\nexport default useStickyOffsets;"]},"metadata":{},"sourceType":"module"}