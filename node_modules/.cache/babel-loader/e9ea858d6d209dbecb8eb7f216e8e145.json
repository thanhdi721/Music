{"ast":null,"code":"\"use client\";\n\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport InputNumber from '../../input-number';\n\nconst ColorSteppers = _ref => {\n  let {\n    prefixCls,\n    min = 0,\n    max = 100,\n    value,\n    onChange,\n    className,\n    formatter\n  } = _ref;\n  const colorSteppersPrefixCls = `${prefixCls}-steppers`;\n  const [stepValue, setStepValue] = useState(value); // Update step value\n\n  useEffect(() => {\n    if (!Number.isNaN(value)) {\n      setStepValue(value);\n    }\n  }, [value]);\n  return /*#__PURE__*/React.createElement(InputNumber, {\n    className: classNames(colorSteppersPrefixCls, className),\n    min: min,\n    max: max,\n    value: stepValue,\n    formatter: formatter,\n    size: \"small\",\n    onChange: step => {\n      if (!value) {\n        setStepValue(step || 0);\n      }\n\n      onChange === null || onChange === void 0 ? void 0 : onChange(step);\n    }\n  });\n};\n\nexport default ColorSteppers;","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/color-picker/components/ColorSteppers.js"],"names":["classNames","React","useEffect","useState","InputNumber","ColorSteppers","_ref","prefixCls","min","max","value","onChange","className","formatter","colorSteppersPrefixCls","stepValue","setStepValue","Number","isNaN","createElement","size","step"],"mappings":"AAAA;;AAEA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AACA,MAAMC,aAAa,GAAGC,IAAI,IAAI;AAC5B,MAAI;AACFC,IAAAA,SADE;AAEFC,IAAAA,GAAG,GAAG,CAFJ;AAGFC,IAAAA,GAAG,GAAG,GAHJ;AAIFC,IAAAA,KAJE;AAKFC,IAAAA,QALE;AAMFC,IAAAA,SANE;AAOFC,IAAAA;AAPE,MAQAP,IARJ;AASA,QAAMQ,sBAAsB,GAAI,GAAEP,SAAU,WAA5C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAACO,KAAD,CAA1C,CAX4B,CAY5B;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACe,MAAM,CAACC,KAAP,CAAaR,KAAb,CAAL,EAA0B;AACxBM,MAAAA,YAAY,CAACN,KAAD,CAAZ;AACD;AACF,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAKA,SAAO,aAAaT,KAAK,CAACkB,aAAN,CAAoBf,WAApB,EAAiC;AACnDQ,IAAAA,SAAS,EAAEZ,UAAU,CAACc,sBAAD,EAAyBF,SAAzB,CAD8B;AAEnDJ,IAAAA,GAAG,EAAEA,GAF8C;AAGnDC,IAAAA,GAAG,EAAEA,GAH8C;AAInDC,IAAAA,KAAK,EAAEK,SAJ4C;AAKnDF,IAAAA,SAAS,EAAEA,SALwC;AAMnDO,IAAAA,IAAI,EAAE,OAN6C;AAOnDT,IAAAA,QAAQ,EAAEU,IAAI,IAAI;AAChB,UAAI,CAACX,KAAL,EAAY;AACVM,QAAAA,YAAY,CAACK,IAAI,IAAI,CAAT,CAAZ;AACD;;AACDV,MAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACU,IAAD,CAA5D;AACD;AAZkD,GAAjC,CAApB;AAcD,CAhCD;;AAiCA,eAAehB,aAAf","sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport InputNumber from '../../input-number';\nconst ColorSteppers = _ref => {\n  let {\n    prefixCls,\n    min = 0,\n    max = 100,\n    value,\n    onChange,\n    className,\n    formatter\n  } = _ref;\n  const colorSteppersPrefixCls = `${prefixCls}-steppers`;\n  const [stepValue, setStepValue] = useState(value);\n  // Update step value\n  useEffect(() => {\n    if (!Number.isNaN(value)) {\n      setStepValue(value);\n    }\n  }, [value]);\n  return /*#__PURE__*/React.createElement(InputNumber, {\n    className: classNames(colorSteppersPrefixCls, className),\n    min: min,\n    max: max,\n    value: stepValue,\n    formatter: formatter,\n    size: \"small\",\n    onChange: step => {\n      if (!value) {\n        setStepValue(step || 0);\n      }\n      onChange === null || onChange === void 0 ? void 0 : onChange(step);\n    }\n  });\n};\nexport default ColorSteppers;"]},"metadata":{},"sourceType":"module"}