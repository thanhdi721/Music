{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport VirtualList from 'rc-virtual-list';\nimport * as React from 'react';\nimport Cell from \"../Cell\";\nimport TableContext, { responseImmutable } from \"../context/TableContext\";\nimport useFlattenRecords from \"../hooks/useFlattenRecords\";\nimport BodyLine from \"./BodyLine\";\nimport { GridContext, StaticContext } from \"./context\";\nvar Grid = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var data = props.data,\n      onScroll = props.onScroll;\n\n  var _useContext = useContext(TableContext, ['flattenColumns', 'onColumnResize', 'getRowKey', 'prefixCls', 'expandedKeys', 'childrenColumnName', 'emptyNode', 'scrollX']),\n      flattenColumns = _useContext.flattenColumns,\n      onColumnResize = _useContext.onColumnResize,\n      getRowKey = _useContext.getRowKey,\n      expandedKeys = _useContext.expandedKeys,\n      prefixCls = _useContext.prefixCls,\n      childrenColumnName = _useContext.childrenColumnName,\n      emptyNode = _useContext.emptyNode,\n      scrollX = _useContext.scrollX;\n\n  var _useContext2 = useContext(StaticContext),\n      sticky = _useContext2.sticky,\n      scrollY = _useContext2.scrollY,\n      listItemHeight = _useContext2.listItemHeight,\n      getComponent = _useContext2.getComponent,\n      onTablePropScroll = _useContext2.onScroll; // =========================== Ref ============================\n\n\n  var listRef = React.useRef(); // =========================== Data ===========================\n\n  var flattenData = useFlattenRecords(data, childrenColumnName, expandedKeys, getRowKey); // ========================== Column ==========================\n\n  var columnsWidth = React.useMemo(function () {\n    var total = 0;\n    return flattenColumns.map(function (_ref) {\n      var width = _ref.width,\n          key = _ref.key;\n      total += width;\n      return [key, width, total];\n    });\n  }, [flattenColumns]);\n  var columnsOffset = React.useMemo(function () {\n    return columnsWidth.map(function (colWidth) {\n      return colWidth[2];\n    });\n  }, [columnsWidth]);\n  React.useEffect(function () {\n    columnsWidth.forEach(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          key = _ref3[0],\n          width = _ref3[1];\n\n      onColumnResize(key, width);\n    });\n  }, [columnsWidth]); // =========================== Ref ============================\n\n  React.useImperativeHandle(ref, function () {\n    var obj = {\n      scrollTo: function scrollTo(config) {\n        var _listRef$current;\n\n        (_listRef$current = listRef.current) === null || _listRef$current === void 0 || _listRef$current.scrollTo(config);\n      }\n    };\n    Object.defineProperty(obj, 'scrollLeft', {\n      get: function get() {\n        var _listRef$current2;\n\n        return ((_listRef$current2 = listRef.current) === null || _listRef$current2 === void 0 ? void 0 : _listRef$current2.getScrollInfo().x) || 0;\n      },\n      set: function set(value) {\n        var _listRef$current3;\n\n        (_listRef$current3 = listRef.current) === null || _listRef$current3 === void 0 || _listRef$current3.scrollTo({\n          left: value\n        });\n      }\n    });\n    return obj;\n  }); // ======================= Col/Row Span =======================\n\n  var getRowSpan = function getRowSpan(column, index) {\n    var _flattenData$index;\n\n    var record = (_flattenData$index = flattenData[index]) === null || _flattenData$index === void 0 ? void 0 : _flattenData$index.record;\n    var onCell = column.onCell;\n\n    if (onCell) {\n      var _cellProps$rowSpan;\n\n      var cellProps = onCell(record, index);\n      return (_cellProps$rowSpan = cellProps === null || cellProps === void 0 ? void 0 : cellProps.rowSpan) !== null && _cellProps$rowSpan !== void 0 ? _cellProps$rowSpan : 1;\n    }\n\n    return 1;\n  };\n\n  var extraRender = function extraRender(info) {\n    var start = info.start,\n        end = info.end,\n        getSize = info.getSize,\n        offsetY = info.offsetY; // Do nothing if no data\n\n    if (end < 0) {\n      return null;\n    } // Find first rowSpan column\n\n\n    var firstRowSpanColumns = flattenColumns.filter( // rowSpan is 0\n    function (column) {\n      return getRowSpan(column, start) === 0;\n    });\n    var startIndex = start;\n\n    var _loop = function _loop(i) {\n      firstRowSpanColumns = firstRowSpanColumns.filter(function (column) {\n        return getRowSpan(column, i) === 0;\n      });\n\n      if (!firstRowSpanColumns.length) {\n        startIndex = i;\n        return 1; // break\n      }\n    };\n\n    for (var i = start; i >= 0; i -= 1) {\n      if (_loop(i)) break;\n    } // Find last rowSpan column\n\n\n    var lastRowSpanColumns = flattenColumns.filter( // rowSpan is not 1\n    function (column) {\n      return getRowSpan(column, end) !== 1;\n    });\n    var endIndex = end;\n\n    var _loop2 = function _loop2(_i) {\n      lastRowSpanColumns = lastRowSpanColumns.filter(function (column) {\n        return getRowSpan(column, _i) !== 1;\n      });\n\n      if (!lastRowSpanColumns.length) {\n        endIndex = Math.max(_i - 1, end);\n        return 1; // break\n      }\n    };\n\n    for (var _i = end; _i < flattenData.length; _i += 1) {\n      if (_loop2(_i)) break;\n    } // Collect the line who has rowSpan\n\n\n    var spanLines = [];\n\n    var _loop3 = function _loop3(_i2) {\n      var item = flattenData[_i2]; // This code will never reach, just incase\n\n      if (!item) {\n        return 1; // continue\n      }\n\n      if (flattenColumns.some(function (column) {\n        return getRowSpan(column, _i2) > 1;\n      })) {\n        spanLines.push(_i2);\n      }\n    };\n\n    for (var _i2 = startIndex; _i2 <= endIndex; _i2 += 1) {\n      if (_loop3(_i2)) continue;\n    } // Patch extra line on the page\n\n\n    var nodes = spanLines.map(function (index) {\n      var item = flattenData[index];\n      var rowKey = getRowKey(item.record, index);\n\n      var getHeight = function getHeight(rowSpan) {\n        var endItemIndex = index + rowSpan - 1;\n        var endItemKey = getRowKey(flattenData[endItemIndex].record, endItemIndex);\n        var sizeInfo = getSize(rowKey, endItemKey);\n        return sizeInfo.bottom - sizeInfo.top;\n      };\n\n      var sizeInfo = getSize(rowKey);\n      return /*#__PURE__*/React.createElement(BodyLine, {\n        key: index,\n        data: item,\n        rowKey: rowKey,\n        index: index,\n        style: {\n          top: -offsetY + sizeInfo.top\n        },\n        extra: true,\n        getHeight: getHeight\n      });\n    });\n    return nodes;\n  }; // ========================= Context ==========================\n\n\n  var gridContext = React.useMemo(function () {\n    return {\n      columnsOffset: columnsOffset\n    };\n  }, [columnsOffset]); // ========================== Render ==========================\n\n  var tblPrefixCls = \"\".concat(prefixCls, \"-tbody\"); // default 'div' in rc-virtual-list\n\n  var wrapperComponent = getComponent(['body', 'wrapper']);\n  var RowComponent = getComponent(['body', 'row'], 'div');\n  var cellComponent = getComponent(['body', 'cell'], 'div');\n  var bodyContent;\n\n  if (flattenData.length) {\n    // ========================== Sticky Scroll Bar ==========================\n    var horizontalScrollBarStyle = {};\n\n    if (sticky) {\n      horizontalScrollBarStyle.position = 'sticky';\n      horizontalScrollBarStyle.bottom = 0;\n\n      if (_typeof(sticky) === 'object' && sticky.offsetScroll) {\n        horizontalScrollBarStyle.bottom = sticky.offsetScroll;\n      }\n    }\n\n    bodyContent = /*#__PURE__*/React.createElement(VirtualList, {\n      fullHeight: false,\n      ref: listRef,\n      prefixCls: \"\".concat(tblPrefixCls, \"-virtual\"),\n      styles: {\n        horizontalScrollBar: horizontalScrollBarStyle\n      },\n      className: tblPrefixCls,\n      height: scrollY,\n      itemHeight: listItemHeight || 24,\n      data: flattenData,\n      itemKey: function itemKey(item) {\n        return getRowKey(item.record);\n      },\n      component: wrapperComponent,\n      scrollWidth: scrollX,\n      onVirtualScroll: function onVirtualScroll(_ref4) {\n        var x = _ref4.x;\n        onScroll({\n          scrollLeft: x\n        });\n      },\n      onScroll: onTablePropScroll,\n      extraRender: extraRender\n    }, function (item, index, itemProps) {\n      var rowKey = getRowKey(item.record, index);\n      return /*#__PURE__*/React.createElement(BodyLine, _extends({\n        data: item,\n        rowKey: rowKey,\n        index: index\n      }, itemProps));\n    });\n  } else {\n    bodyContent = /*#__PURE__*/React.createElement(RowComponent, {\n      className: classNames(\"\".concat(prefixCls, \"-placeholder\"))\n    }, /*#__PURE__*/React.createElement(Cell, {\n      component: cellComponent,\n      prefixCls: prefixCls\n    }, emptyNode));\n  }\n\n  return /*#__PURE__*/React.createElement(GridContext.Provider, {\n    value: gridContext\n  }, bodyContent);\n});\nvar ResponseGrid = responseImmutable(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  ResponseGrid.displayName = 'ResponseGrid';\n}\n\nexport default ResponseGrid;","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-table/es/VirtualTable/BodyGrid.js"],"names":["_extends","_typeof","_slicedToArray","useContext","classNames","VirtualList","React","Cell","TableContext","responseImmutable","useFlattenRecords","BodyLine","GridContext","StaticContext","Grid","forwardRef","props","ref","data","onScroll","_useContext","flattenColumns","onColumnResize","getRowKey","expandedKeys","prefixCls","childrenColumnName","emptyNode","scrollX","_useContext2","sticky","scrollY","listItemHeight","getComponent","onTablePropScroll","listRef","useRef","flattenData","columnsWidth","useMemo","total","map","_ref","width","key","columnsOffset","colWidth","useEffect","forEach","_ref2","_ref3","useImperativeHandle","obj","scrollTo","config","_listRef$current","current","Object","defineProperty","get","_listRef$current2","getScrollInfo","x","set","value","_listRef$current3","left","getRowSpan","column","index","_flattenData$index","record","onCell","_cellProps$rowSpan","cellProps","rowSpan","extraRender","info","start","end","getSize","offsetY","firstRowSpanColumns","filter","startIndex","_loop","i","length","lastRowSpanColumns","endIndex","_loop2","_i","Math","max","spanLines","_loop3","_i2","item","some","push","nodes","rowKey","getHeight","endItemIndex","endItemKey","sizeInfo","bottom","top","createElement","style","extra","gridContext","tblPrefixCls","concat","wrapperComponent","RowComponent","cellComponent","bodyContent","horizontalScrollBarStyle","position","offsetScroll","fullHeight","styles","horizontalScrollBar","className","height","itemHeight","itemKey","component","scrollWidth","onVirtualScroll","_ref4","scrollLeft","itemProps","Provider","ResponseGrid","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport VirtualList from 'rc-virtual-list';\nimport * as React from 'react';\nimport Cell from \"../Cell\";\nimport TableContext, { responseImmutable } from \"../context/TableContext\";\nimport useFlattenRecords from \"../hooks/useFlattenRecords\";\nimport BodyLine from \"./BodyLine\";\nimport { GridContext, StaticContext } from \"./context\";\nvar Grid = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var data = props.data,\n    onScroll = props.onScroll;\n  var _useContext = useContext(TableContext, ['flattenColumns', 'onColumnResize', 'getRowKey', 'prefixCls', 'expandedKeys', 'childrenColumnName', 'emptyNode', 'scrollX']),\n    flattenColumns = _useContext.flattenColumns,\n    onColumnResize = _useContext.onColumnResize,\n    getRowKey = _useContext.getRowKey,\n    expandedKeys = _useContext.expandedKeys,\n    prefixCls = _useContext.prefixCls,\n    childrenColumnName = _useContext.childrenColumnName,\n    emptyNode = _useContext.emptyNode,\n    scrollX = _useContext.scrollX;\n  var _useContext2 = useContext(StaticContext),\n    sticky = _useContext2.sticky,\n    scrollY = _useContext2.scrollY,\n    listItemHeight = _useContext2.listItemHeight,\n    getComponent = _useContext2.getComponent,\n    onTablePropScroll = _useContext2.onScroll;\n\n  // =========================== Ref ============================\n  var listRef = React.useRef();\n\n  // =========================== Data ===========================\n  var flattenData = useFlattenRecords(data, childrenColumnName, expandedKeys, getRowKey);\n\n  // ========================== Column ==========================\n  var columnsWidth = React.useMemo(function () {\n    var total = 0;\n    return flattenColumns.map(function (_ref) {\n      var width = _ref.width,\n        key = _ref.key;\n      total += width;\n      return [key, width, total];\n    });\n  }, [flattenColumns]);\n  var columnsOffset = React.useMemo(function () {\n    return columnsWidth.map(function (colWidth) {\n      return colWidth[2];\n    });\n  }, [columnsWidth]);\n  React.useEffect(function () {\n    columnsWidth.forEach(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        width = _ref3[1];\n      onColumnResize(key, width);\n    });\n  }, [columnsWidth]);\n\n  // =========================== Ref ============================\n  React.useImperativeHandle(ref, function () {\n    var obj = {\n      scrollTo: function scrollTo(config) {\n        var _listRef$current;\n        (_listRef$current = listRef.current) === null || _listRef$current === void 0 || _listRef$current.scrollTo(config);\n      }\n    };\n    Object.defineProperty(obj, 'scrollLeft', {\n      get: function get() {\n        var _listRef$current2;\n        return ((_listRef$current2 = listRef.current) === null || _listRef$current2 === void 0 ? void 0 : _listRef$current2.getScrollInfo().x) || 0;\n      },\n      set: function set(value) {\n        var _listRef$current3;\n        (_listRef$current3 = listRef.current) === null || _listRef$current3 === void 0 || _listRef$current3.scrollTo({\n          left: value\n        });\n      }\n    });\n    return obj;\n  });\n\n  // ======================= Col/Row Span =======================\n  var getRowSpan = function getRowSpan(column, index) {\n    var _flattenData$index;\n    var record = (_flattenData$index = flattenData[index]) === null || _flattenData$index === void 0 ? void 0 : _flattenData$index.record;\n    var onCell = column.onCell;\n    if (onCell) {\n      var _cellProps$rowSpan;\n      var cellProps = onCell(record, index);\n      return (_cellProps$rowSpan = cellProps === null || cellProps === void 0 ? void 0 : cellProps.rowSpan) !== null && _cellProps$rowSpan !== void 0 ? _cellProps$rowSpan : 1;\n    }\n    return 1;\n  };\n  var extraRender = function extraRender(info) {\n    var start = info.start,\n      end = info.end,\n      getSize = info.getSize,\n      offsetY = info.offsetY;\n\n    // Do nothing if no data\n    if (end < 0) {\n      return null;\n    }\n\n    // Find first rowSpan column\n    var firstRowSpanColumns = flattenColumns.filter(\n    // rowSpan is 0\n    function (column) {\n      return getRowSpan(column, start) === 0;\n    });\n    var startIndex = start;\n    var _loop = function _loop(i) {\n      firstRowSpanColumns = firstRowSpanColumns.filter(function (column) {\n        return getRowSpan(column, i) === 0;\n      });\n      if (!firstRowSpanColumns.length) {\n        startIndex = i;\n        return 1; // break\n      }\n    };\n    for (var i = start; i >= 0; i -= 1) {\n      if (_loop(i)) break;\n    }\n\n    // Find last rowSpan column\n    var lastRowSpanColumns = flattenColumns.filter(\n    // rowSpan is not 1\n    function (column) {\n      return getRowSpan(column, end) !== 1;\n    });\n    var endIndex = end;\n    var _loop2 = function _loop2(_i) {\n      lastRowSpanColumns = lastRowSpanColumns.filter(function (column) {\n        return getRowSpan(column, _i) !== 1;\n      });\n      if (!lastRowSpanColumns.length) {\n        endIndex = Math.max(_i - 1, end);\n        return 1; // break\n      }\n    };\n    for (var _i = end; _i < flattenData.length; _i += 1) {\n      if (_loop2(_i)) break;\n    }\n\n    // Collect the line who has rowSpan\n    var spanLines = [];\n    var _loop3 = function _loop3(_i2) {\n      var item = flattenData[_i2];\n\n      // This code will never reach, just incase\n      if (!item) {\n        return 1; // continue\n      }\n      if (flattenColumns.some(function (column) {\n        return getRowSpan(column, _i2) > 1;\n      })) {\n        spanLines.push(_i2);\n      }\n    };\n    for (var _i2 = startIndex; _i2 <= endIndex; _i2 += 1) {\n      if (_loop3(_i2)) continue;\n    }\n\n    // Patch extra line on the page\n    var nodes = spanLines.map(function (index) {\n      var item = flattenData[index];\n      var rowKey = getRowKey(item.record, index);\n      var getHeight = function getHeight(rowSpan) {\n        var endItemIndex = index + rowSpan - 1;\n        var endItemKey = getRowKey(flattenData[endItemIndex].record, endItemIndex);\n        var sizeInfo = getSize(rowKey, endItemKey);\n        return sizeInfo.bottom - sizeInfo.top;\n      };\n      var sizeInfo = getSize(rowKey);\n      return /*#__PURE__*/React.createElement(BodyLine, {\n        key: index,\n        data: item,\n        rowKey: rowKey,\n        index: index,\n        style: {\n          top: -offsetY + sizeInfo.top\n        },\n        extra: true,\n        getHeight: getHeight\n      });\n    });\n    return nodes;\n  };\n\n  // ========================= Context ==========================\n  var gridContext = React.useMemo(function () {\n    return {\n      columnsOffset: columnsOffset\n    };\n  }, [columnsOffset]);\n\n  // ========================== Render ==========================\n  var tblPrefixCls = \"\".concat(prefixCls, \"-tbody\");\n\n  // default 'div' in rc-virtual-list\n  var wrapperComponent = getComponent(['body', 'wrapper']);\n  var RowComponent = getComponent(['body', 'row'], 'div');\n  var cellComponent = getComponent(['body', 'cell'], 'div');\n  var bodyContent;\n  if (flattenData.length) {\n    // ========================== Sticky Scroll Bar ==========================\n    var horizontalScrollBarStyle = {};\n    if (sticky) {\n      horizontalScrollBarStyle.position = 'sticky';\n      horizontalScrollBarStyle.bottom = 0;\n      if (_typeof(sticky) === 'object' && sticky.offsetScroll) {\n        horizontalScrollBarStyle.bottom = sticky.offsetScroll;\n      }\n    }\n    bodyContent = /*#__PURE__*/React.createElement(VirtualList, {\n      fullHeight: false,\n      ref: listRef,\n      prefixCls: \"\".concat(tblPrefixCls, \"-virtual\"),\n      styles: {\n        horizontalScrollBar: horizontalScrollBarStyle\n      },\n      className: tblPrefixCls,\n      height: scrollY,\n      itemHeight: listItemHeight || 24,\n      data: flattenData,\n      itemKey: function itemKey(item) {\n        return getRowKey(item.record);\n      },\n      component: wrapperComponent,\n      scrollWidth: scrollX,\n      onVirtualScroll: function onVirtualScroll(_ref4) {\n        var x = _ref4.x;\n        onScroll({\n          scrollLeft: x\n        });\n      },\n      onScroll: onTablePropScroll,\n      extraRender: extraRender\n    }, function (item, index, itemProps) {\n      var rowKey = getRowKey(item.record, index);\n      return /*#__PURE__*/React.createElement(BodyLine, _extends({\n        data: item,\n        rowKey: rowKey,\n        index: index\n      }, itemProps));\n    });\n  } else {\n    bodyContent = /*#__PURE__*/React.createElement(RowComponent, {\n      className: classNames(\"\".concat(prefixCls, \"-placeholder\"))\n    }, /*#__PURE__*/React.createElement(Cell, {\n      component: cellComponent,\n      prefixCls: prefixCls\n    }, emptyNode));\n  }\n  return /*#__PURE__*/React.createElement(GridContext.Provider, {\n    value: gridContext\n  }, bodyContent);\n});\nvar ResponseGrid = responseImmutable(Grid);\nif (process.env.NODE_ENV !== 'production') {\n  ResponseGrid.displayName = 'ResponseGrid';\n}\nexport default ResponseGrid;"]},"metadata":{},"sourceType":"module"}