{"ast":null,"code":"import { genSubStyleComponent } from '../../theme/internal';\nimport { prepareComponentToken, genNoticeStyle, prepareNotificationToken } from '.';\nimport { unit } from '@ant-design/cssinjs';\nexport default genSubStyleComponent(['Notification', 'PurePanel'], token => {\n  const noticeCls = `${token.componentCls}-notice`;\n  const notificationToken = prepareNotificationToken(token);\n  return {\n    [`${noticeCls}-pure-panel`]: Object.assign(Object.assign({}, genNoticeStyle(notificationToken)), {\n      width: notificationToken.width,\n      maxWidth: `calc(100vw - ${unit(token.calc(notificationToken.notificationMarginEdge).mul(2).equal())})`,\n      margin: 0\n    })\n  };\n}, prepareComponentToken);","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/notification/style/pure-panel.js"],"names":["genSubStyleComponent","prepareComponentToken","genNoticeStyle","prepareNotificationToken","unit","token","noticeCls","componentCls","notificationToken","Object","assign","width","maxWidth","calc","notificationMarginEdge","mul","equal","margin"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,sBAArC;AACA,SAASC,qBAAT,EAAgCC,cAAhC,EAAgDC,wBAAhD,QAAgF,GAAhF;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,eAAeJ,oBAAoB,CAAC,CAAC,cAAD,EAAiB,WAAjB,CAAD,EAAgCK,KAAK,IAAI;AAC1E,QAAMC,SAAS,GAAI,GAAED,KAAK,CAACE,YAAa,SAAxC;AACA,QAAMC,iBAAiB,GAAGL,wBAAwB,CAACE,KAAD,CAAlD;AACA,SAAO;AACL,KAAE,GAAEC,SAAU,aAAd,GAA6BG,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,cAAc,CAACM,iBAAD,CAAhC,CAAd,EAAoE;AAC/FG,MAAAA,KAAK,EAAEH,iBAAiB,CAACG,KADsE;AAE/FC,MAAAA,QAAQ,EAAG,gBAAeR,IAAI,CAACC,KAAK,CAACQ,IAAN,CAAWL,iBAAiB,CAACM,sBAA7B,EAAqDC,GAArD,CAAyD,CAAzD,EAA4DC,KAA5D,EAAD,CAAsE,GAFL;AAG/FC,MAAAA,MAAM,EAAE;AAHuF,KAApE;AADxB,GAAP;AAOD,CAVkC,EAUhChB,qBAVgC,CAAnC","sourcesContent":["import { genSubStyleComponent } from '../../theme/internal';\nimport { prepareComponentToken, genNoticeStyle, prepareNotificationToken } from '.';\nimport { unit } from '@ant-design/cssinjs';\nexport default genSubStyleComponent(['Notification', 'PurePanel'], token => {\n  const noticeCls = `${token.componentCls}-notice`;\n  const notificationToken = prepareNotificationToken(token);\n  return {\n    [`${noticeCls}-pure-panel`]: Object.assign(Object.assign({}, genNoticeStyle(notificationToken)), {\n      width: notificationToken.width,\n      maxWidth: `calc(100vw - ${unit(token.calc(notificationToken.notificationMarginEdge).mul(2).equal())})`,\n      margin: 0\n    })\n  };\n}, prepareComponentToken);"]},"metadata":{},"sourceType":"module"}