{"ast":null,"code":"\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { composeRef } from \"rc-util/es/ref\";\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst Typography = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    prefixCls: customizePrefixCls,\n    component: Component = 'article',\n    className,\n    rootClassName,\n    setContentRef,\n    children,\n    direction: typographyDirection,\n    style\n  } = props,\n        restProps = __rest(props, [\"prefixCls\", \"component\", \"className\", \"rootClassName\", \"setContentRef\", \"children\", \"direction\", \"style\"]);\n\n  const {\n    getPrefixCls,\n    direction: contextDirection,\n    typography\n  } = React.useContext(ConfigContext);\n  const direction = typographyDirection !== null && typographyDirection !== void 0 ? typographyDirection : contextDirection;\n  let mergedRef = ref;\n\n  if (setContentRef) {\n    mergedRef = composeRef(ref, setContentRef);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Typography');\n    warning.deprecated(!setContentRef, 'setContentRef', 'ref');\n  }\n\n  const prefixCls = getPrefixCls('typography', customizePrefixCls); // Style\n\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const componentClassName = classNames(prefixCls, typography === null || typography === void 0 ? void 0 : typography.className, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId, cssVarCls);\n  const mergedStyle = Object.assign(Object.assign({}, typography === null || typography === void 0 ? void 0 : typography.style), style);\n  return wrapCSSVar(\n  /*#__PURE__*/\n  // @ts-expect-error: Expression produces a union type that is too complex to represent.\n  React.createElement(Component, Object.assign({\n    className: componentClassName,\n    style: mergedStyle,\n    ref: mergedRef\n  }, restProps), children));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Typography.displayName = 'Typography';\n} // es default export should use const instead of let\n\n\nexport default Typography;","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/typography/Typography.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","composeRef","devUseWarning","ConfigContext","useStyle","Typography","forwardRef","props","ref","prefixCls","customizePrefixCls","component","Component","className","rootClassName","setContentRef","children","direction","typographyDirection","style","restProps","getPrefixCls","contextDirection","typography","useContext","mergedRef","process","env","NODE_ENV","warning","deprecated","wrapCSSVar","hashId","cssVarCls","componentClassName","mergedStyle","assign","createElement","displayName"],"mappings":"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","sourcesContent":["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { composeRef } from \"rc-util/es/ref\";\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst Typography = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      component: Component = 'article',\n      className,\n      rootClassName,\n      setContentRef,\n      children,\n      direction: typographyDirection,\n      style\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"component\", \"className\", \"rootClassName\", \"setContentRef\", \"children\", \"direction\", \"style\"]);\n  const {\n    getPrefixCls,\n    direction: contextDirection,\n    typography\n  } = React.useContext(ConfigContext);\n  const direction = typographyDirection !== null && typographyDirection !== void 0 ? typographyDirection : contextDirection;\n  let mergedRef = ref;\n  if (setContentRef) {\n    mergedRef = composeRef(ref, setContentRef);\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Typography');\n    warning.deprecated(!setContentRef, 'setContentRef', 'ref');\n  }\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  // Style\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const componentClassName = classNames(prefixCls, typography === null || typography === void 0 ? void 0 : typography.className, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId, cssVarCls);\n  const mergedStyle = Object.assign(Object.assign({}, typography === null || typography === void 0 ? void 0 : typography.style), style);\n  return wrapCSSVar(\n  /*#__PURE__*/\n  // @ts-expect-error: Expression produces a union type that is too complex to represent.\n  React.createElement(Component, Object.assign({\n    className: componentClassName,\n    style: mergedStyle,\n    ref: mergedRef\n  }, restProps), children));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Typography.displayName = 'Typography';\n}\n// es default export should use const instead of let\nexport default Typography;"]},"metadata":{},"sourceType":"module"}