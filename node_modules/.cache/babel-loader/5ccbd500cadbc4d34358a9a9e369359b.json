{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { SubMenu as RcSubMenu, useFullPath } from 'rc-menu';\nimport omit from \"rc-util/es/omit\";\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport { cloneElement } from '../_util/reactNode';\nimport MenuContext from './MenuContext';\n\nconst SubMenu = props => {\n  var _a;\n\n  const {\n    popupClassName,\n    icon,\n    title,\n    theme: customTheme\n  } = props;\n  const context = React.useContext(MenuContext);\n  const {\n    prefixCls,\n    inlineCollapsed,\n    theme: contextTheme\n  } = context;\n  const parentPath = useFullPath();\n  let titleNode;\n\n  if (!icon) {\n    titleNode = inlineCollapsed && !parentPath.length && title && typeof title === 'string' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: `${prefixCls}-inline-collapsed-noicon`\n    }, title.charAt(0)) : /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-title-content`\n    }, title);\n  } else {\n    // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span\n    // ref: https://github.com/ant-design/ant-design/pull/23456\n    const titleIsSpan = /*#__PURE__*/React.isValidElement(title) && title.type === 'span';\n    titleNode = /*#__PURE__*/React.createElement(React.Fragment, null, cloneElement(icon, {\n      className: classNames( /*#__PURE__*/React.isValidElement(icon) ? (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className : '', `${prefixCls}-item-icon`)\n    }), titleIsSpan ? title : /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-title-content`\n    }, title));\n  }\n\n  const contextValue = React.useMemo(() => Object.assign(Object.assign({}, context), {\n    firstLevel: false\n  }), [context]); // ============================ zIndex ============================\n\n  const [zIndex] = useZIndex('Menu');\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(RcSubMenu, Object.assign({}, omit(props, ['icon']), {\n    title: titleNode,\n    popupClassName: classNames(prefixCls, popupClassName, `${prefixCls}-${customTheme || contextTheme}`),\n    popupStyle: {\n      zIndex\n    }\n  })));\n};\n\nexport default SubMenu;","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/menu/SubMenu.js"],"names":["React","classNames","SubMenu","RcSubMenu","useFullPath","omit","useZIndex","cloneElement","MenuContext","props","_a","popupClassName","icon","title","theme","customTheme","context","useContext","prefixCls","inlineCollapsed","contextTheme","parentPath","titleNode","length","createElement","className","charAt","titleIsSpan","isValidElement","type","Fragment","contextValue","useMemo","Object","assign","firstLevel","zIndex","Provider","value","popupStyle"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { SubMenu as RcSubMenu, useFullPath } from 'rc-menu';\nimport omit from \"rc-util/es/omit\";\nimport { useZIndex } from '../_util/hooks/useZIndex';\nimport { cloneElement } from '../_util/reactNode';\nimport MenuContext from './MenuContext';\nconst SubMenu = props => {\n  var _a;\n  const {\n    popupClassName,\n    icon,\n    title,\n    theme: customTheme\n  } = props;\n  const context = React.useContext(MenuContext);\n  const {\n    prefixCls,\n    inlineCollapsed,\n    theme: contextTheme\n  } = context;\n  const parentPath = useFullPath();\n  let titleNode;\n  if (!icon) {\n    titleNode = inlineCollapsed && !parentPath.length && title && typeof title === 'string' ? ( /*#__PURE__*/React.createElement(\"div\", {\n      className: `${prefixCls}-inline-collapsed-noicon`\n    }, title.charAt(0))) : ( /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-title-content`\n    }, title));\n  } else {\n    // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span\n    // ref: https://github.com/ant-design/ant-design/pull/23456\n    const titleIsSpan = /*#__PURE__*/React.isValidElement(title) && title.type === 'span';\n    titleNode = /*#__PURE__*/React.createElement(React.Fragment, null, cloneElement(icon, {\n      className: classNames( /*#__PURE__*/React.isValidElement(icon) ? (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className : '', `${prefixCls}-item-icon`)\n    }), titleIsSpan ? title : /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-title-content`\n    }, title));\n  }\n  const contextValue = React.useMemo(() => Object.assign(Object.assign({}, context), {\n    firstLevel: false\n  }), [context]);\n  // ============================ zIndex ============================\n  const [zIndex] = useZIndex('Menu');\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(RcSubMenu, Object.assign({}, omit(props, ['icon']), {\n    title: titleNode,\n    popupClassName: classNames(prefixCls, popupClassName, `${prefixCls}-${customTheme || contextTheme}`),\n    popupStyle: {\n      zIndex\n    }\n  })));\n};\nexport default SubMenu;"]},"metadata":{},"sourceType":"module"}