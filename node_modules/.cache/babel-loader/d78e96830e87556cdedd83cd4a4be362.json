{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport { createContext, useContext, useMemo } from 'react';\nimport { FormProvider as RcFormProvider } from 'rc-field-form';\nimport omit from \"rc-util/es/omit\";\nexport const FormContext = /*#__PURE__*/React.createContext({\n  labelAlign: 'right',\n  vertical: false,\n  itemRef: () => {}\n});\nexport const NoStyleItemContext = /*#__PURE__*/React.createContext(null);\nexport const FormProvider = props => {\n  const providerProps = omit(props, ['prefixCls']);\n  return /*#__PURE__*/React.createElement(RcFormProvider, Object.assign({}, providerProps));\n};\nexport const FormItemPrefixContext = /*#__PURE__*/React.createContext({\n  prefixCls: ''\n});\nexport const FormItemInputContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  FormItemInputContext.displayName = 'FormItemInputContext';\n}\n\nexport const NoFormStyle = _ref => {\n  let {\n    children,\n    status,\n    override\n  } = _ref;\n  const formItemInputContext = useContext(FormItemInputContext);\n  const newFormItemInputContext = useMemo(() => {\n    const newContext = Object.assign({}, formItemInputContext);\n\n    if (override) {\n      delete newContext.isFormItemInput;\n    }\n\n    if (status) {\n      delete newContext.status;\n      delete newContext.hasFeedback;\n      delete newContext.feedbackIcon;\n    }\n\n    return newContext;\n  }, [status, override, formItemInputContext]);\n  return /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: newFormItemInputContext\n  }, children);\n};\nexport const VariantContext = /*#__PURE__*/createContext(undefined);","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/form/context.js"],"names":["React","createContext","useContext","useMemo","FormProvider","RcFormProvider","omit","FormContext","labelAlign","vertical","itemRef","NoStyleItemContext","props","providerProps","createElement","Object","assign","FormItemPrefixContext","prefixCls","FormItemInputContext","process","env","NODE_ENV","displayName","NoFormStyle","_ref","children","status","override","formItemInputContext","newFormItemInputContext","newContext","isFormItemInput","hasFeedback","feedbackIcon","Provider","value","VariantContext","undefined"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,OAApC,QAAmD,OAAnD;AACA,SAASC,YAAY,IAAIC,cAAzB,QAA+C,eAA/C;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAO,MAAMC,WAAW,GAAG,aAAaP,KAAK,CAACC,aAAN,CAAoB;AAC1DO,EAAAA,UAAU,EAAE,OAD8C;AAE1DC,EAAAA,QAAQ,EAAE,KAFgD;AAG1DC,EAAAA,OAAO,EAAE,MAAM,CAAE;AAHyC,CAApB,CAAjC;AAKP,OAAO,MAAMC,kBAAkB,GAAG,aAAaX,KAAK,CAACC,aAAN,CAAoB,IAApB,CAAxC;AACP,OAAO,MAAMG,YAAY,GAAGQ,KAAK,IAAI;AACnC,QAAMC,aAAa,GAAGP,IAAI,CAACM,KAAD,EAAQ,CAAC,WAAD,CAAR,CAA1B;AACA,SAAO,aAAaZ,KAAK,CAACc,aAAN,CAAoBT,cAApB,EAAoCU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,aAAlB,CAApC,CAApB;AACD,CAHM;AAIP,OAAO,MAAMI,qBAAqB,GAAG,aAAajB,KAAK,CAACC,aAAN,CAAoB;AACpEiB,EAAAA,SAAS,EAAE;AADyD,CAApB,CAA3C;AAGP,OAAO,MAAMC,oBAAoB,GAAG,aAAanB,KAAK,CAACC,aAAN,CAAoB,EAApB,CAA1C;;AACP,IAAImB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,oBAAoB,CAACI,WAArB,GAAmC,sBAAnC;AACD;;AACD,OAAO,MAAMC,WAAW,GAAGC,IAAI,IAAI;AACjC,MAAI;AACFC,IAAAA,QADE;AAEFC,IAAAA,MAFE;AAGFC,IAAAA;AAHE,MAIAH,IAJJ;AAKA,QAAMI,oBAAoB,GAAG3B,UAAU,CAACiB,oBAAD,CAAvC;AACA,QAAMW,uBAAuB,GAAG3B,OAAO,CAAC,MAAM;AAC5C,UAAM4B,UAAU,GAAGhB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBa,oBAAlB,CAAnB;;AACA,QAAID,QAAJ,EAAc;AACZ,aAAOG,UAAU,CAACC,eAAlB;AACD;;AACD,QAAIL,MAAJ,EAAY;AACV,aAAOI,UAAU,CAACJ,MAAlB;AACA,aAAOI,UAAU,CAACE,WAAlB;AACA,aAAOF,UAAU,CAACG,YAAlB;AACD;;AACD,WAAOH,UAAP;AACD,GAXsC,EAWpC,CAACJ,MAAD,EAASC,QAAT,EAAmBC,oBAAnB,CAXoC,CAAvC;AAYA,SAAO,aAAa7B,KAAK,CAACc,aAAN,CAAoBK,oBAAoB,CAACgB,QAAzC,EAAmD;AACrEC,IAAAA,KAAK,EAAEN;AAD8D,GAAnD,EAEjBJ,QAFiB,CAApB;AAGD,CAtBM;AAuBP,OAAO,MAAMW,cAAc,GAAG,aAAapC,aAAa,CAACqC,SAAD,CAAjD","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport { createContext, useContext, useMemo } from 'react';\nimport { FormProvider as RcFormProvider } from 'rc-field-form';\nimport omit from \"rc-util/es/omit\";\nexport const FormContext = /*#__PURE__*/React.createContext({\n  labelAlign: 'right',\n  vertical: false,\n  itemRef: () => {}\n});\nexport const NoStyleItemContext = /*#__PURE__*/React.createContext(null);\nexport const FormProvider = props => {\n  const providerProps = omit(props, ['prefixCls']);\n  return /*#__PURE__*/React.createElement(RcFormProvider, Object.assign({}, providerProps));\n};\nexport const FormItemPrefixContext = /*#__PURE__*/React.createContext({\n  prefixCls: ''\n});\nexport const FormItemInputContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  FormItemInputContext.displayName = 'FormItemInputContext';\n}\nexport const NoFormStyle = _ref => {\n  let {\n    children,\n    status,\n    override\n  } = _ref;\n  const formItemInputContext = useContext(FormItemInputContext);\n  const newFormItemInputContext = useMemo(() => {\n    const newContext = Object.assign({}, formItemInputContext);\n    if (override) {\n      delete newContext.isFormItemInput;\n    }\n    if (status) {\n      delete newContext.status;\n      delete newContext.hasFeedback;\n      delete newContext.feedbackIcon;\n    }\n    return newContext;\n  }, [status, override, formItemInputContext]);\n  return /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: newFormItemInputContext\n  }, children);\n};\nexport const VariantContext = /*#__PURE__*/createContext(undefined);"]},"metadata":{},"sourceType":"module"}