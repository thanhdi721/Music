{"ast":null,"code":"import { useContext } from '@rc-component/context';\nimport * as React from 'react';\nimport PerfContext from \"../context/PerfContext\";\nimport TableContext, { responseImmutable } from \"../context/TableContext\";\nimport useFlattenRecords from \"../hooks/useFlattenRecords\";\nimport devRenderTimes from \"../hooks/useRenderTimes\";\nimport { getColumnsKey } from \"../utils/valueUtil\";\nimport BodyRow from \"./BodyRow\";\nimport ExpandedRow from \"./ExpandedRow\";\nimport MeasureRow from \"./MeasureRow\";\n\nfunction Body(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    devRenderTimes(props);\n  }\n\n  var data = props.data,\n      measureColumnWidth = props.measureColumnWidth;\n\n  var _useContext = useContext(TableContext, ['prefixCls', 'getComponent', 'onColumnResize', 'flattenColumns', 'getRowKey', 'expandedKeys', 'childrenColumnName', 'emptyNode']),\n      prefixCls = _useContext.prefixCls,\n      getComponent = _useContext.getComponent,\n      onColumnResize = _useContext.onColumnResize,\n      flattenColumns = _useContext.flattenColumns,\n      getRowKey = _useContext.getRowKey,\n      expandedKeys = _useContext.expandedKeys,\n      childrenColumnName = _useContext.childrenColumnName,\n      emptyNode = _useContext.emptyNode;\n\n  var flattenData = useFlattenRecords(data, childrenColumnName, expandedKeys, getRowKey); // =================== Performance ====================\n\n  var perfRef = React.useRef({\n    renderWithProps: false\n  }); // ====================== Render ======================\n\n  var WrapperComponent = getComponent(['body', 'wrapper'], 'tbody');\n  var trComponent = getComponent(['body', 'row'], 'tr');\n  var tdComponent = getComponent(['body', 'cell'], 'td');\n  var thComponent = getComponent(['body', 'cell'], 'th');\n  var rows;\n\n  if (data.length) {\n    rows = flattenData.map(function (item, idx) {\n      var record = item.record,\n          indent = item.indent,\n          renderIndex = item.index;\n      var key = getRowKey(record, idx);\n      return /*#__PURE__*/React.createElement(BodyRow, {\n        key: key,\n        rowKey: key,\n        record: record,\n        index: idx,\n        renderIndex: renderIndex,\n        rowComponent: trComponent,\n        cellComponent: tdComponent,\n        scopeCellComponent: thComponent,\n        getRowKey: getRowKey,\n        indent: indent\n      });\n    });\n  } else {\n    rows = /*#__PURE__*/React.createElement(ExpandedRow, {\n      expanded: true,\n      className: \"\".concat(prefixCls, \"-placeholder\"),\n      prefixCls: prefixCls,\n      component: trComponent,\n      cellComponent: tdComponent,\n      colSpan: flattenColumns.length,\n      isEmpty: true\n    }, emptyNode);\n  }\n\n  var columnsKey = getColumnsKey(flattenColumns);\n  return /*#__PURE__*/React.createElement(PerfContext.Provider, {\n    value: perfRef.current\n  }, /*#__PURE__*/React.createElement(WrapperComponent, {\n    className: \"\".concat(prefixCls, \"-tbody\")\n  }, measureColumnWidth && /*#__PURE__*/React.createElement(MeasureRow, {\n    prefixCls: prefixCls,\n    columnsKey: columnsKey,\n    onColumnResize: onColumnResize\n  }), rows));\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  Body.displayName = 'Body';\n}\n\nexport default responseImmutable(Body);","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-table/es/Body/index.js"],"names":["useContext","React","PerfContext","TableContext","responseImmutable","useFlattenRecords","devRenderTimes","getColumnsKey","BodyRow","ExpandedRow","MeasureRow","Body","props","process","env","NODE_ENV","data","measureColumnWidth","_useContext","prefixCls","getComponent","onColumnResize","flattenColumns","getRowKey","expandedKeys","childrenColumnName","emptyNode","flattenData","perfRef","useRef","renderWithProps","WrapperComponent","trComponent","tdComponent","thComponent","rows","length","map","item","idx","record","indent","renderIndex","index","key","createElement","rowKey","rowComponent","cellComponent","scopeCellComponent","expanded","className","concat","component","colSpan","isEmpty","columnsKey","Provider","value","current","displayName"],"mappings":"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","sourcesContent":["import { useContext } from '@rc-component/context';\nimport * as React from 'react';\nimport PerfContext from \"../context/PerfContext\";\nimport TableContext, { responseImmutable } from \"../context/TableContext\";\nimport useFlattenRecords from \"../hooks/useFlattenRecords\";\nimport devRenderTimes from \"../hooks/useRenderTimes\";\nimport { getColumnsKey } from \"../utils/valueUtil\";\nimport BodyRow from \"./BodyRow\";\nimport ExpandedRow from \"./ExpandedRow\";\nimport MeasureRow from \"./MeasureRow\";\nfunction Body(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    devRenderTimes(props);\n  }\n  var data = props.data,\n    measureColumnWidth = props.measureColumnWidth;\n  var _useContext = useContext(TableContext, ['prefixCls', 'getComponent', 'onColumnResize', 'flattenColumns', 'getRowKey', 'expandedKeys', 'childrenColumnName', 'emptyNode']),\n    prefixCls = _useContext.prefixCls,\n    getComponent = _useContext.getComponent,\n    onColumnResize = _useContext.onColumnResize,\n    flattenColumns = _useContext.flattenColumns,\n    getRowKey = _useContext.getRowKey,\n    expandedKeys = _useContext.expandedKeys,\n    childrenColumnName = _useContext.childrenColumnName,\n    emptyNode = _useContext.emptyNode;\n  var flattenData = useFlattenRecords(data, childrenColumnName, expandedKeys, getRowKey);\n\n  // =================== Performance ====================\n  var perfRef = React.useRef({\n    renderWithProps: false\n  });\n\n  // ====================== Render ======================\n  var WrapperComponent = getComponent(['body', 'wrapper'], 'tbody');\n  var trComponent = getComponent(['body', 'row'], 'tr');\n  var tdComponent = getComponent(['body', 'cell'], 'td');\n  var thComponent = getComponent(['body', 'cell'], 'th');\n  var rows;\n  if (data.length) {\n    rows = flattenData.map(function (item, idx) {\n      var record = item.record,\n        indent = item.indent,\n        renderIndex = item.index;\n      var key = getRowKey(record, idx);\n      return /*#__PURE__*/React.createElement(BodyRow, {\n        key: key,\n        rowKey: key,\n        record: record,\n        index: idx,\n        renderIndex: renderIndex,\n        rowComponent: trComponent,\n        cellComponent: tdComponent,\n        scopeCellComponent: thComponent,\n        getRowKey: getRowKey,\n        indent: indent\n      });\n    });\n  } else {\n    rows = /*#__PURE__*/React.createElement(ExpandedRow, {\n      expanded: true,\n      className: \"\".concat(prefixCls, \"-placeholder\"),\n      prefixCls: prefixCls,\n      component: trComponent,\n      cellComponent: tdComponent,\n      colSpan: flattenColumns.length,\n      isEmpty: true\n    }, emptyNode);\n  }\n  var columnsKey = getColumnsKey(flattenColumns);\n  return /*#__PURE__*/React.createElement(PerfContext.Provider, {\n    value: perfRef.current\n  }, /*#__PURE__*/React.createElement(WrapperComponent, {\n    className: \"\".concat(prefixCls, \"-tbody\")\n  }, measureColumnWidth && /*#__PURE__*/React.createElement(MeasureRow, {\n    prefixCls: prefixCls,\n    columnsKey: columnsKey,\n    onColumnResize: onColumnResize\n  }), rows));\n}\nif (process.env.NODE_ENV !== 'production') {\n  Body.displayName = 'Body';\n}\nexport default responseImmutable(Body);"]},"metadata":{},"sourceType":"module"}