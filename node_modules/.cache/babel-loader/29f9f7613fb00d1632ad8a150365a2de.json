{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { formatValue } from \"../../utils/dateUtil\";\nimport { PanelContext, useInfo } from \"../context\";\nimport PanelHeader from \"../PanelHeader\";\nimport TimePanelBody from \"./TimePanelBody\";\nexport default function TimePanel(props) {\n  var prefixCls = props.prefixCls,\n      value = props.value,\n      locale = props.locale,\n      generateConfig = props.generateConfig,\n      showTime = props.showTime;\n\n  var _ref = showTime || {},\n      format = _ref.format;\n\n  var panelPrefixCls = \"\".concat(prefixCls, \"-time-panel\"); // ========================== Base ==========================\n\n  var _useInfo = useInfo(props, 'time'),\n      _useInfo2 = _slicedToArray(_useInfo, 1),\n      info = _useInfo2[0]; // ========================= Render =========================\n\n\n  return /*#__PURE__*/React.createElement(PanelContext.Provider, {\n    value: info\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(panelPrefixCls)\n  }, /*#__PURE__*/React.createElement(PanelHeader, null, value ? formatValue(value, {\n    locale: locale,\n    format: format,\n    generateConfig: generateConfig\n  }) : \"\\xA0\"), /*#__PURE__*/React.createElement(TimePanelBody, showTime)));\n}","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-picker/es/PickerPanel/TimePanel/index.js"],"names":["_slicedToArray","classNames","React","formatValue","PanelContext","useInfo","PanelHeader","TimePanelBody","TimePanel","props","prefixCls","value","locale","generateConfig","showTime","_ref","format","panelPrefixCls","concat","_useInfo","_useInfo2","info","createElement","Provider","className"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,YAAtC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AAAA,MACEC,KAAK,GAAGF,KAAK,CAACE,KADhB;AAAA,MAEEC,MAAM,GAAGH,KAAK,CAACG,MAFjB;AAAA,MAGEC,cAAc,GAAGJ,KAAK,CAACI,cAHzB;AAAA,MAIEC,QAAQ,GAAGL,KAAK,CAACK,QAJnB;;AAKA,MAAIC,IAAI,GAAGD,QAAQ,IAAI,EAAvB;AAAA,MACEE,MAAM,GAAGD,IAAI,CAACC,MADhB;;AAEA,MAAIC,cAAc,GAAG,GAAGC,MAAH,CAAUR,SAAV,EAAqB,aAArB,CAArB,CARuC,CAUvC;;AACA,MAAIS,QAAQ,GAAGd,OAAO,CAACI,KAAD,EAAQ,MAAR,CAAtB;AAAA,MACEW,SAAS,GAAGpB,cAAc,CAACmB,QAAD,EAAW,CAAX,CAD5B;AAAA,MAEEE,IAAI,GAAGD,SAAS,CAAC,CAAD,CAFlB,CAXuC,CAevC;;;AACA,SAAO,aAAalB,KAAK,CAACoB,aAAN,CAAoBlB,YAAY,CAACmB,QAAjC,EAA2C;AAC7DZ,IAAAA,KAAK,EAAEU;AADsD,GAA3C,EAEjB,aAAanB,KAAK,CAACoB,aAAN,CAAoB,KAApB,EAA2B;AACzCE,IAAAA,SAAS,EAAEvB,UAAU,CAACgB,cAAD;AADoB,GAA3B,EAEb,aAAaf,KAAK,CAACoB,aAAN,CAAoBhB,WAApB,EAAiC,IAAjC,EAAuCK,KAAK,GAAGR,WAAW,CAACQ,KAAD,EAAQ;AAChFC,IAAAA,MAAM,EAAEA,MADwE;AAEhFI,IAAAA,MAAM,EAAEA,MAFwE;AAGhFH,IAAAA,cAAc,EAAEA;AAHgE,GAAR,CAAd,GAIvD,MAJW,CAFA,EAMF,aAAaX,KAAK,CAACoB,aAAN,CAAoBf,aAApB,EAAmCO,QAAnC,CANX,CAFI,CAApB;AASD","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { formatValue } from \"../../utils/dateUtil\";\nimport { PanelContext, useInfo } from \"../context\";\nimport PanelHeader from \"../PanelHeader\";\nimport TimePanelBody from \"./TimePanelBody\";\nexport default function TimePanel(props) {\n  var prefixCls = props.prefixCls,\n    value = props.value,\n    locale = props.locale,\n    generateConfig = props.generateConfig,\n    showTime = props.showTime;\n  var _ref = showTime || {},\n    format = _ref.format;\n  var panelPrefixCls = \"\".concat(prefixCls, \"-time-panel\");\n\n  // ========================== Base ==========================\n  var _useInfo = useInfo(props, 'time'),\n    _useInfo2 = _slicedToArray(_useInfo, 1),\n    info = _useInfo2[0];\n\n  // ========================= Render =========================\n  return /*#__PURE__*/React.createElement(PanelContext.Provider, {\n    value: info\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(panelPrefixCls)\n  }, /*#__PURE__*/React.createElement(PanelHeader, null, value ? formatValue(value, {\n    locale: locale,\n    format: format,\n    generateConfig: generateConfig\n  }) : \"\\xA0\"), /*#__PURE__*/React.createElement(TimePanelBody, showTime)));\n}"]},"metadata":{},"sourceType":"module"}