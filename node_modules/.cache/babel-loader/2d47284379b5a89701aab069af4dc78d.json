{"ast":null,"code":"import React, { useContext, useRef } from 'react';\nimport classNames from 'classnames';\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport { ConfigContext } from '../../config-provider';\nimport { cloneElement } from '../reactNode';\nimport useStyle from './style';\nimport useWave from './useWave';\n\nconst Wave = props => {\n  const {\n    children,\n    disabled,\n    component\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const containerRef = useRef(null); // ============================== Style ===============================\n\n  const prefixCls = getPrefixCls('wave');\n  const [, hashId] = useStyle(prefixCls); // =============================== Wave ===============================\n\n  const showWave = useWave(containerRef, classNames(prefixCls, hashId), component); // ============================== Effect ==============================\n\n  React.useEffect(() => {\n    const node = containerRef.current;\n\n    if (!node || node.nodeType !== 1 || disabled) {\n      return;\n    } // Click handler\n\n\n    const onClick = e => {\n      // Fix radio button click twice\n      if (!isVisible(e.target) || // No need wave\n      !node.getAttribute || node.getAttribute('disabled') || node.disabled || node.className.includes('disabled') || node.className.includes('-leave')) {\n        return;\n      }\n\n      showWave(e);\n    }; // Bind events\n\n\n    node.addEventListener('click', onClick, true);\n    return () => {\n      node.removeEventListener('click', onClick, true);\n    };\n  }, [disabled]); // ============================== Render ==============================\n\n  if (! /*#__PURE__*/React.isValidElement(children)) {\n    return children !== null && children !== void 0 ? children : null;\n  }\n\n  const ref = supportRef(children) ? composeRef(children.ref, containerRef) : containerRef;\n  return cloneElement(children, {\n    ref\n  });\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Wave.displayName = 'Wave';\n}\n\nexport default Wave;","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/_util/wave/index.js"],"names":["React","useContext","useRef","classNames","isVisible","composeRef","supportRef","ConfigContext","cloneElement","useStyle","useWave","Wave","props","children","disabled","component","getPrefixCls","containerRef","prefixCls","hashId","showWave","useEffect","node","current","nodeType","onClick","e","target","getAttribute","className","includes","addEventListener","removeEventListener","isValidElement","ref","process","env","NODE_ENV","displayName"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,gBAAvC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA;AAHI,MAIFH,KAJJ;AAKA,QAAM;AACJI,IAAAA;AADI,MAEFf,UAAU,CAACM,aAAD,CAFd;AAGA,QAAMU,YAAY,GAAGf,MAAM,CAAC,IAAD,CAA3B,CAToB,CAUpB;;AACA,QAAMgB,SAAS,GAAGF,YAAY,CAAC,MAAD,CAA9B;AACA,QAAM,GAAGG,MAAH,IAAaV,QAAQ,CAACS,SAAD,CAA3B,CAZoB,CAapB;;AACA,QAAME,QAAQ,GAAGV,OAAO,CAACO,YAAD,EAAed,UAAU,CAACe,SAAD,EAAYC,MAAZ,CAAzB,EAA8CJ,SAA9C,CAAxB,CAdoB,CAepB;;AACAf,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpB,UAAMC,IAAI,GAAGL,YAAY,CAACM,OAA1B;;AACA,QAAI,CAACD,IAAD,IAASA,IAAI,CAACE,QAAL,KAAkB,CAA3B,IAAgCV,QAApC,EAA8C;AAC5C;AACD,KAJmB,CAKpB;;;AACA,UAAMW,OAAO,GAAGC,CAAC,IAAI;AACnB;AACA,UAAI,CAACtB,SAAS,CAACsB,CAAC,CAACC,MAAH,CAAV,IACJ;AACA,OAACL,IAAI,CAACM,YAFF,IAEkBN,IAAI,CAACM,YAAL,CAAkB,UAAlB,CAFlB,IAEmDN,IAAI,CAACR,QAFxD,IAEoEQ,IAAI,CAACO,SAAL,CAAeC,QAAf,CAAwB,UAAxB,CAFpE,IAE2GR,IAAI,CAACO,SAAL,CAAeC,QAAf,CAAwB,QAAxB,CAF/G,EAEkJ;AAChJ;AACD;;AACDV,MAAAA,QAAQ,CAACM,CAAD,CAAR;AACD,KARD,CANoB,CAepB;;;AACAJ,IAAAA,IAAI,CAACS,gBAAL,CAAsB,OAAtB,EAA+BN,OAA/B,EAAwC,IAAxC;AACA,WAAO,MAAM;AACXH,MAAAA,IAAI,CAACU,mBAAL,CAAyB,OAAzB,EAAkCP,OAAlC,EAA2C,IAA3C;AACD,KAFD;AAGD,GApBD,EAoBG,CAACX,QAAD,CApBH,EAhBoB,CAqCpB;;AACA,MAAI,EAAE,aAAad,KAAK,CAACiC,cAAN,CAAqBpB,QAArB,CAAnB,EAAmD;AACjD,WAAOA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2CA,QAA3C,GAAsD,IAA7D;AACD;;AACD,QAAMqB,GAAG,GAAG5B,UAAU,CAACO,QAAD,CAAV,GAAuBR,UAAU,CAACQ,QAAQ,CAACqB,GAAV,EAAejB,YAAf,CAAjC,GAAgEA,YAA5E;AACA,SAAOT,YAAY,CAACK,QAAD,EAAW;AAC5BqB,IAAAA;AAD4B,GAAX,CAAnB;AAGD,CA7CD;;AA8CA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC1B,EAAAA,IAAI,CAAC2B,WAAL,GAAmB,MAAnB;AACD;;AACD,eAAe3B,IAAf","sourcesContent":["import React, { useContext, useRef } from 'react';\nimport classNames from 'classnames';\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport { ConfigContext } from '../../config-provider';\nimport { cloneElement } from '../reactNode';\nimport useStyle from './style';\nimport useWave from './useWave';\nconst Wave = props => {\n  const {\n    children,\n    disabled,\n    component\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const containerRef = useRef(null);\n  // ============================== Style ===============================\n  const prefixCls = getPrefixCls('wave');\n  const [, hashId] = useStyle(prefixCls);\n  // =============================== Wave ===============================\n  const showWave = useWave(containerRef, classNames(prefixCls, hashId), component);\n  // ============================== Effect ==============================\n  React.useEffect(() => {\n    const node = containerRef.current;\n    if (!node || node.nodeType !== 1 || disabled) {\n      return;\n    }\n    // Click handler\n    const onClick = e => {\n      // Fix radio button click twice\n      if (!isVisible(e.target) ||\n      // No need wave\n      !node.getAttribute || node.getAttribute('disabled') || node.disabled || node.className.includes('disabled') || node.className.includes('-leave')) {\n        return;\n      }\n      showWave(e);\n    };\n    // Bind events\n    node.addEventListener('click', onClick, true);\n    return () => {\n      node.removeEventListener('click', onClick, true);\n    };\n  }, [disabled]);\n  // ============================== Render ==============================\n  if (! /*#__PURE__*/React.isValidElement(children)) {\n    return children !== null && children !== void 0 ? children : null;\n  }\n  const ref = supportRef(children) ? composeRef(children.ref, containerRef) : containerRef;\n  return cloneElement(children, {\n    ref\n  });\n};\nif (process.env.NODE_ENV !== 'production') {\n  Wave.displayName = 'Wave';\n}\nexport default Wave;"]},"metadata":{},"sourceType":"module"}