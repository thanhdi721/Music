{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport { generateColor } from \"../util\";\n\nfunction hasValue(value) {\n  return value !== undefined;\n}\n\nvar useColorState = function useColorState(defaultStateValue, option) {\n  var defaultValue = option.defaultValue,\n      value = option.value;\n\n  var _useState = useState(function () {\n    var mergeState;\n\n    if (hasValue(value)) {\n      mergeState = value;\n    } else if (hasValue(defaultValue)) {\n      mergeState = defaultValue;\n    } else {\n      mergeState = defaultStateValue;\n    }\n\n    return generateColor(mergeState);\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      colorValue = _useState2[0],\n      setColorValue = _useState2[1];\n\n  useEffect(function () {\n    if (value) {\n      setColorValue(generateColor(value));\n    }\n  }, [value]);\n  return [colorValue, setColorValue];\n};\n\nexport default useColorState;","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/@rc-component/color-picker/es/hooks/useColorState.js"],"names":["_slicedToArray","useEffect","useState","generateColor","hasValue","value","undefined","useColorState","defaultStateValue","option","defaultValue","_useState","mergeState","_useState2","colorValue","setColorValue"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,SAA9B;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAOA,KAAK,KAAKC,SAAjB;AACD;;AACD,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,iBAAvB,EAA0CC,MAA1C,EAAkD;AACpE,MAAIC,YAAY,GAAGD,MAAM,CAACC,YAA1B;AAAA,MACEL,KAAK,GAAGI,MAAM,CAACJ,KADjB;;AAEA,MAAIM,SAAS,GAAGT,QAAQ,CAAC,YAAY;AACjC,QAAIU,UAAJ;;AACA,QAAIR,QAAQ,CAACC,KAAD,CAAZ,EAAqB;AACnBO,MAAAA,UAAU,GAAGP,KAAb;AACD,KAFD,MAEO,IAAID,QAAQ,CAACM,YAAD,CAAZ,EAA4B;AACjCE,MAAAA,UAAU,GAAGF,YAAb;AACD,KAFM,MAEA;AACLE,MAAAA,UAAU,GAAGJ,iBAAb;AACD;;AACD,WAAOL,aAAa,CAACS,UAAD,CAApB;AACD,GAVqB,CAAxB;AAAA,MAWEC,UAAU,GAAGb,cAAc,CAACW,SAAD,EAAY,CAAZ,CAX7B;AAAA,MAYEG,UAAU,GAAGD,UAAU,CAAC,CAAD,CAZzB;AAAA,MAaEE,aAAa,GAAGF,UAAU,CAAC,CAAD,CAb5B;;AAcAZ,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAII,KAAJ,EAAW;AACTU,MAAAA,aAAa,CAACZ,aAAa,CAACE,KAAD,CAAd,CAAb;AACD;AACF,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAKA,SAAO,CAACS,UAAD,EAAaC,aAAb,CAAP;AACD,CAvBD;;AAwBA,eAAeR,aAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport { generateColor } from \"../util\";\nfunction hasValue(value) {\n  return value !== undefined;\n}\nvar useColorState = function useColorState(defaultStateValue, option) {\n  var defaultValue = option.defaultValue,\n    value = option.value;\n  var _useState = useState(function () {\n      var mergeState;\n      if (hasValue(value)) {\n        mergeState = value;\n      } else if (hasValue(defaultValue)) {\n        mergeState = defaultValue;\n      } else {\n        mergeState = defaultStateValue;\n      }\n      return generateColor(mergeState);\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    colorValue = _useState2[0],\n    setColorValue = _useState2[1];\n  useEffect(function () {\n    if (value) {\n      setColorValue(generateColor(value));\n    }\n  }, [value]);\n  return [colorValue, setColorValue];\n};\nexport default useColorState;"]},"metadata":{},"sourceType":"module"}