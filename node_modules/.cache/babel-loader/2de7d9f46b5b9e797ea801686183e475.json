{"ast":null,"code":"\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useEvent } from 'rc-util';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { getMergedStatus } from '../../_util/statusUtils';\nimport { ConfigContext } from '../../config-provider';\nimport useCSSVarCls from '../../config-provider/hooks/useCSSVarCls';\nimport useSize from '../../config-provider/hooks/useSize';\nimport { FormItemInputContext } from '../../form/context';\nimport useStyle from '../style/otp';\nimport OTPInput from './OTPInput';\n\nfunction strToArr(str) {\n  return str.split('');\n}\n\nconst OTP = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    prefixCls: customizePrefixCls,\n    length = 6,\n    size: customSize,\n    defaultValue,\n    value,\n    onChange,\n    formatter,\n    variant,\n    disabled,\n    status: customStatus,\n    autoFocus\n  } = props,\n        restProps = __rest(props, [\"prefixCls\", \"length\", \"size\", \"defaultValue\", \"value\", \"onChange\", \"formatter\", \"variant\", \"disabled\", \"status\", \"autoFocus\"]);\n\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('otp', customizePrefixCls);\n  const domAttrs = pickAttrs(restProps, {\n    aria: true,\n    data: true,\n    attr: true\n  }); // ========================= Root =========================\n  // Style\n\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls); // ========================= Size =========================\n\n  const mergedSize = useSize(ctx => customSize !== null && customSize !== void 0 ? customSize : ctx); // ======================== Status ========================\n\n  const formContext = React.useContext(FormItemInputContext);\n  const mergedStatus = getMergedStatus(formContext.status, customStatus);\n  const proxyFormContext = React.useMemo(() => Object.assign(Object.assign({}, formContext), {\n    status: mergedStatus,\n    hasFeedback: false,\n    feedbackIcon: null\n  }), [formContext, mergedStatus]); // ========================= Refs =========================\n\n  const containerRef = React.useRef(null);\n  const refs = React.useRef({});\n  React.useImperativeHandle(ref, () => ({\n    focus: () => {\n      var _a;\n\n      (_a = refs.current[0]) === null || _a === void 0 ? void 0 : _a.focus();\n    },\n    blur: () => {\n      var _a;\n\n      for (let i = 0; i < length; i += 1) {\n        (_a = refs.current[i]) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    },\n    nativeElement: containerRef.current\n  })); // ======================= Formatter ======================\n\n  const internalFormatter = txt => formatter ? formatter(txt) : txt; // ======================== Values ========================\n\n\n  const [valueCells, setValueCells] = React.useState(strToArr(internalFormatter(defaultValue || '')));\n  React.useEffect(() => {\n    if (value) {\n      setValueCells(strToArr(value));\n    }\n  }, [value]);\n  const triggerValueCellsChange = useEvent(nextValueCells => {\n    setValueCells(nextValueCells); // Trigger if all cells are filled\n\n    if (onChange && nextValueCells.length === length && nextValueCells.every(c => c) && nextValueCells.some((c, index) => valueCells[index] !== c)) {\n      onChange(nextValueCells.join(''));\n    }\n  });\n  const patchValue = useEvent((index, txt) => {\n    let nextCells = _toConsumableArray(valueCells); // Fill cells till index\n\n\n    for (let i = 0; i < index; i += 1) {\n      if (!nextCells[i]) {\n        nextCells[i] = '';\n      }\n    }\n\n    if (txt.length <= 1) {\n      nextCells[index] = txt;\n    } else {\n      nextCells = nextCells.slice(0, index).concat(strToArr(txt));\n    }\n\n    nextCells = nextCells.slice(0, length); // Clean the last empty cell\n\n    for (let i = nextCells.length - 1; i >= 0; i -= 1) {\n      if (nextCells[i]) {\n        break;\n      }\n\n      nextCells.pop();\n    } // Format if needed\n\n\n    const formattedValue = internalFormatter(nextCells.map(c => c || ' ').join(''));\n    nextCells = strToArr(formattedValue).map((c, i) => {\n      if (c === ' ' && !nextCells[i]) {\n        return nextCells[i];\n      }\n\n      return c;\n    });\n    return nextCells;\n  }); // ======================== Change ========================\n\n  const onInputChange = (index, txt) => {\n    var _a;\n\n    const nextCells = patchValue(index, txt);\n    const nextIndex = Math.min(index + txt.length, length - 1);\n\n    if (nextIndex !== index) {\n      (_a = refs.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n\n    triggerValueCellsChange(nextCells);\n  };\n\n  const onInputActiveChange = nextIndex => {\n    var _a;\n\n    (_a = refs.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n  }; // ======================== Render ========================\n\n\n  const inputSharedProps = {\n    variant,\n    disabled,\n    status: mergedStatus\n  };\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", Object.assign({}, domAttrs, {\n    ref: containerRef,\n    className: classNames(prefixCls, {\n      [`${prefixCls}-sm`]: mergedSize === 'small',\n      [`${prefixCls}-lg`]: mergedSize === 'large',\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, cssVarCls, hashId)\n  }), /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: proxyFormContext\n  }, new Array(length).fill(0).map((_, index) => {\n    const key = `otp-${index}`;\n    const singleValue = valueCells[index] || '';\n    return /*#__PURE__*/React.createElement(OTPInput, Object.assign({\n      ref: inputEle => {\n        refs.current[index] = inputEle;\n      },\n      key: key,\n      index: index,\n      size: mergedSize,\n      htmlSize: 1,\n      className: `${prefixCls}-input`,\n      onChange: onInputChange,\n      value: singleValue,\n      onActiveChange: onInputActiveChange,\n      autoFocus: index === 0 && autoFocus\n    }, inputSharedProps));\n  }))));\n});\nexport default OTP;","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/input/OTP/index.js"],"names":["_toConsumableArray","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","useEvent","pickAttrs","getMergedStatus","ConfigContext","useCSSVarCls","useSize","FormItemInputContext","useStyle","OTPInput","strToArr","str","split","OTP","forwardRef","props","ref","prefixCls","customizePrefixCls","size","customSize","defaultValue","value","onChange","formatter","variant","disabled","status","customStatus","autoFocus","restProps","getPrefixCls","direction","useContext","domAttrs","aria","data","attr","rootCls","wrapCSSVar","hashId","cssVarCls","mergedSize","ctx","formContext","mergedStatus","proxyFormContext","useMemo","assign","hasFeedback","feedbackIcon","containerRef","useRef","refs","useImperativeHandle","focus","_a","current","blur","nativeElement","internalFormatter","txt","valueCells","setValueCells","useState","useEffect","triggerValueCellsChange","nextValueCells","every","c","some","index","join","patchValue","nextCells","slice","concat","pop","formattedValue","map","onInputChange","nextIndex","Math","min","onInputActiveChange","inputSharedProps","createElement","className","Provider","Array","fill","_","key","singleValue","inputEle","htmlSize","onActiveChange"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useEvent } from 'rc-util';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { getMergedStatus } from '../../_util/statusUtils';\nimport { ConfigContext } from '../../config-provider';\nimport useCSSVarCls from '../../config-provider/hooks/useCSSVarCls';\nimport useSize from '../../config-provider/hooks/useSize';\nimport { FormItemInputContext } from '../../form/context';\nimport useStyle from '../style/otp';\nimport OTPInput from './OTPInput';\nfunction strToArr(str) {\n  return str.split('');\n}\nconst OTP = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      length = 6,\n      size: customSize,\n      defaultValue,\n      value,\n      onChange,\n      formatter,\n      variant,\n      disabled,\n      status: customStatus,\n      autoFocus\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"length\", \"size\", \"defaultValue\", \"value\", \"onChange\", \"formatter\", \"variant\", \"disabled\", \"status\", \"autoFocus\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('otp', customizePrefixCls);\n  const domAttrs = pickAttrs(restProps, {\n    aria: true,\n    data: true,\n    attr: true\n  });\n  // ========================= Root =========================\n  // Style\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  // ========================= Size =========================\n  const mergedSize = useSize(ctx => customSize !== null && customSize !== void 0 ? customSize : ctx);\n  // ======================== Status ========================\n  const formContext = React.useContext(FormItemInputContext);\n  const mergedStatus = getMergedStatus(formContext.status, customStatus);\n  const proxyFormContext = React.useMemo(() => Object.assign(Object.assign({}, formContext), {\n    status: mergedStatus,\n    hasFeedback: false,\n    feedbackIcon: null\n  }), [formContext, mergedStatus]);\n  // ========================= Refs =========================\n  const containerRef = React.useRef(null);\n  const refs = React.useRef({});\n  React.useImperativeHandle(ref, () => ({\n    focus: () => {\n      var _a;\n      (_a = refs.current[0]) === null || _a === void 0 ? void 0 : _a.focus();\n    },\n    blur: () => {\n      var _a;\n      for (let i = 0; i < length; i += 1) {\n        (_a = refs.current[i]) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    },\n    nativeElement: containerRef.current\n  }));\n  // ======================= Formatter ======================\n  const internalFormatter = txt => formatter ? formatter(txt) : txt;\n  // ======================== Values ========================\n  const [valueCells, setValueCells] = React.useState(strToArr(internalFormatter(defaultValue || '')));\n  React.useEffect(() => {\n    if (value) {\n      setValueCells(strToArr(value));\n    }\n  }, [value]);\n  const triggerValueCellsChange = useEvent(nextValueCells => {\n    setValueCells(nextValueCells);\n    // Trigger if all cells are filled\n    if (onChange && nextValueCells.length === length && nextValueCells.every(c => c) && nextValueCells.some((c, index) => valueCells[index] !== c)) {\n      onChange(nextValueCells.join(''));\n    }\n  });\n  const patchValue = useEvent((index, txt) => {\n    let nextCells = _toConsumableArray(valueCells);\n    // Fill cells till index\n    for (let i = 0; i < index; i += 1) {\n      if (!nextCells[i]) {\n        nextCells[i] = '';\n      }\n    }\n    if (txt.length <= 1) {\n      nextCells[index] = txt;\n    } else {\n      nextCells = nextCells.slice(0, index).concat(strToArr(txt));\n    }\n    nextCells = nextCells.slice(0, length);\n    // Clean the last empty cell\n    for (let i = nextCells.length - 1; i >= 0; i -= 1) {\n      if (nextCells[i]) {\n        break;\n      }\n      nextCells.pop();\n    }\n    // Format if needed\n    const formattedValue = internalFormatter(nextCells.map(c => c || ' ').join(''));\n    nextCells = strToArr(formattedValue).map((c, i) => {\n      if (c === ' ' && !nextCells[i]) {\n        return nextCells[i];\n      }\n      return c;\n    });\n    return nextCells;\n  });\n  // ======================== Change ========================\n  const onInputChange = (index, txt) => {\n    var _a;\n    const nextCells = patchValue(index, txt);\n    const nextIndex = Math.min(index + txt.length, length - 1);\n    if (nextIndex !== index) {\n      (_a = refs.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    triggerValueCellsChange(nextCells);\n  };\n  const onInputActiveChange = nextIndex => {\n    var _a;\n    (_a = refs.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n  // ======================== Render ========================\n  const inputSharedProps = {\n    variant,\n    disabled,\n    status: mergedStatus\n  };\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", Object.assign({}, domAttrs, {\n    ref: containerRef,\n    className: classNames(prefixCls, {\n      [`${prefixCls}-sm`]: mergedSize === 'small',\n      [`${prefixCls}-lg`]: mergedSize === 'large',\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, cssVarCls, hashId)\n  }), /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: proxyFormContext\n  }, new Array(length).fill(0).map((_, index) => {\n    const key = `otp-${index}`;\n    const singleValue = valueCells[index] || '';\n    return /*#__PURE__*/React.createElement(OTPInput, Object.assign({\n      ref: inputEle => {\n        refs.current[index] = inputEle;\n      },\n      key: key,\n      index: index,\n      size: mergedSize,\n      htmlSize: 1,\n      className: `${prefixCls}-input`,\n      onChange: onInputChange,\n      value: singleValue,\n      onActiveChange: onInputActiveChange,\n      autoFocus: index === 0 && autoFocus\n    }, inputSharedProps));\n  }))));\n});\nexport default OTP;"]},"metadata":{},"sourceType":"module"}