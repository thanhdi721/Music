{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\n/**\n * Used for `useFilledProps` since it already in the React.useMemo\n */\n\nexport function fillClearIcon(prefixCls, allowClear, clearIcon) {\n  if (process.env.NODE_ENV !== 'production' && clearIcon) {\n    warning(false, '`clearIcon` will be removed in future. Please use `allowClear` instead.');\n  }\n\n  if (allowClear === false) {\n    return null;\n  }\n\n  var config = allowClear && _typeof(allowClear) === 'object' ? allowClear : {};\n  return config.clearIcon || clearIcon || /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-clear-btn\")\n  });\n}","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-picker/es/PickerInput/Selector/hooks/useClearIcon.js"],"names":["_typeof","warning","React","fillClearIcon","prefixCls","allowClear","clearIcon","process","env","NODE_ENV","config","createElement","className","concat"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,mCAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,UAAlC,EAA8CC,SAA9C,EAAyD;AAC9D,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCH,SAA7C,EAAwD;AACtDL,IAAAA,OAAO,CAAC,KAAD,EAAQ,yEAAR,CAAP;AACD;;AACD,MAAII,UAAU,KAAK,KAAnB,EAA0B;AACxB,WAAO,IAAP;AACD;;AACD,MAAIK,MAAM,GAAGL,UAAU,IAAIL,OAAO,CAACK,UAAD,CAAP,KAAwB,QAAtC,GAAiDA,UAAjD,GAA8D,EAA3E;AACA,SAAOK,MAAM,CAACJ,SAAP,IAAoBA,SAApB,IAAiC,aAAaJ,KAAK,CAACS,aAAN,CAAoB,MAApB,EAA4B;AAC/EC,IAAAA,SAAS,EAAE,GAAGC,MAAH,CAAUT,SAAV,EAAqB,YAArB;AADoE,GAA5B,CAArD;AAGD","sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\n\n/**\n * Used for `useFilledProps` since it already in the React.useMemo\n */\nexport function fillClearIcon(prefixCls, allowClear, clearIcon) {\n  if (process.env.NODE_ENV !== 'production' && clearIcon) {\n    warning(false, '`clearIcon` will be removed in future. Please use `allowClear` instead.');\n  }\n  if (allowClear === false) {\n    return null;\n  }\n  var config = allowClear && _typeof(allowClear) === 'object' ? allowClear : {};\n  return config.clearIcon || clearIcon || /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-clear-btn\")\n  });\n}"]},"metadata":{},"sourceType":"module"}