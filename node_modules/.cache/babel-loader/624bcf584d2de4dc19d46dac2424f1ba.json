{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport { ATTR_MARK } from \"../StyleContext\";\nexport var ATTR_CACHE_MAP = 'data-ant-cssinjs-cache-path';\n/**\n * This marks style from the css file.\n * Which means not exist in `<style />` tag.\n */\n\nexport var CSS_FILE_STYLE = '_FILE_STYLE__';\nexport function serialize(cachePathMap) {\n  return Object.keys(cachePathMap).map(function (path) {\n    var hash = cachePathMap[path];\n    return \"\".concat(path, \":\").concat(hash);\n  }).join(';');\n}\nvar cachePathMap;\nvar fromCSSFile = true;\n/**\n * @private Test usage only. Can save remove if no need.\n */\n\nexport function reset(mockCache) {\n  var fromFile = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  cachePathMap = mockCache;\n  fromCSSFile = fromFile;\n}\nexport function prepare() {\n  if (!cachePathMap) {\n    cachePathMap = {};\n\n    if (canUseDom()) {\n      var div = document.createElement('div');\n      div.className = ATTR_CACHE_MAP;\n      div.style.position = 'fixed';\n      div.style.visibility = 'hidden';\n      div.style.top = '-9999px';\n      document.body.appendChild(div);\n      var content = getComputedStyle(div).content || '';\n      content = content.replace(/^\"/, '').replace(/\"$/, ''); // Fill data\n\n      content.split(';').forEach(function (item) {\n        var _item$split = item.split(':'),\n            _item$split2 = _slicedToArray(_item$split, 2),\n            path = _item$split2[0],\n            hash = _item$split2[1];\n\n        cachePathMap[path] = hash;\n      }); // Remove inline record style\n\n      var inlineMapStyle = document.querySelector(\"style[\".concat(ATTR_CACHE_MAP, \"]\"));\n\n      if (inlineMapStyle) {\n        var _inlineMapStyle$paren;\n\n        fromCSSFile = false;\n        (_inlineMapStyle$paren = inlineMapStyle.parentNode) === null || _inlineMapStyle$paren === void 0 || _inlineMapStyle$paren.removeChild(inlineMapStyle);\n      }\n\n      document.body.removeChild(div);\n    }\n  }\n}\nexport function existPath(path) {\n  prepare();\n  return !!cachePathMap[path];\n}\nexport function getStyleAndHash(path) {\n  var hash = cachePathMap[path];\n  var styleStr = null;\n\n  if (hash && canUseDom()) {\n    if (fromCSSFile) {\n      styleStr = CSS_FILE_STYLE;\n    } else {\n      var _style = document.querySelector(\"style[\".concat(ATTR_MARK, \"=\\\"\").concat(cachePathMap[path], \"\\\"]\"));\n\n      if (_style) {\n        styleStr = _style.innerHTML;\n      } else {\n        // Clean up since not exist anymore\n        delete cachePathMap[path];\n      }\n    }\n  }\n\n  return [styleStr, hash];\n}","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/@ant-design/cssinjs/es/util/cacheMapUtil.js"],"names":["_slicedToArray","canUseDom","ATTR_MARK","ATTR_CACHE_MAP","CSS_FILE_STYLE","serialize","cachePathMap","Object","keys","map","path","hash","concat","join","fromCSSFile","reset","mockCache","fromFile","arguments","length","undefined","prepare","div","document","createElement","className","style","position","visibility","top","body","appendChild","content","getComputedStyle","replace","split","forEach","item","_item$split","_item$split2","inlineMapStyle","querySelector","_inlineMapStyle$paren","parentNode","removeChild","existPath","getStyleAndHash","styleStr","_style","innerHTML"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport { ATTR_MARK } from \"../StyleContext\";\nexport var ATTR_CACHE_MAP = 'data-ant-cssinjs-cache-path';\n\n/**\n * This marks style from the css file.\n * Which means not exist in `<style />` tag.\n */\nexport var CSS_FILE_STYLE = '_FILE_STYLE__';\nexport function serialize(cachePathMap) {\n  return Object.keys(cachePathMap).map(function (path) {\n    var hash = cachePathMap[path];\n    return \"\".concat(path, \":\").concat(hash);\n  }).join(';');\n}\nvar cachePathMap;\nvar fromCSSFile = true;\n\n/**\n * @private Test usage only. Can save remove if no need.\n */\nexport function reset(mockCache) {\n  var fromFile = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  cachePathMap = mockCache;\n  fromCSSFile = fromFile;\n}\nexport function prepare() {\n  if (!cachePathMap) {\n    cachePathMap = {};\n    if (canUseDom()) {\n      var div = document.createElement('div');\n      div.className = ATTR_CACHE_MAP;\n      div.style.position = 'fixed';\n      div.style.visibility = 'hidden';\n      div.style.top = '-9999px';\n      document.body.appendChild(div);\n      var content = getComputedStyle(div).content || '';\n      content = content.replace(/^\"/, '').replace(/\"$/, '');\n\n      // Fill data\n      content.split(';').forEach(function (item) {\n        var _item$split = item.split(':'),\n          _item$split2 = _slicedToArray(_item$split, 2),\n          path = _item$split2[0],\n          hash = _item$split2[1];\n        cachePathMap[path] = hash;\n      });\n\n      // Remove inline record style\n      var inlineMapStyle = document.querySelector(\"style[\".concat(ATTR_CACHE_MAP, \"]\"));\n      if (inlineMapStyle) {\n        var _inlineMapStyle$paren;\n        fromCSSFile = false;\n        (_inlineMapStyle$paren = inlineMapStyle.parentNode) === null || _inlineMapStyle$paren === void 0 || _inlineMapStyle$paren.removeChild(inlineMapStyle);\n      }\n      document.body.removeChild(div);\n    }\n  }\n}\nexport function existPath(path) {\n  prepare();\n  return !!cachePathMap[path];\n}\nexport function getStyleAndHash(path) {\n  var hash = cachePathMap[path];\n  var styleStr = null;\n  if (hash && canUseDom()) {\n    if (fromCSSFile) {\n      styleStr = CSS_FILE_STYLE;\n    } else {\n      var _style = document.querySelector(\"style[\".concat(ATTR_MARK, \"=\\\"\").concat(cachePathMap[path], \"\\\"]\"));\n      if (_style) {\n        styleStr = _style.innerHTML;\n      } else {\n        // Clean up since not exist anymore\n        delete cachePathMap[path];\n      }\n    }\n  }\n  return [styleStr, hash];\n}"]},"metadata":{},"sourceType":"module"}