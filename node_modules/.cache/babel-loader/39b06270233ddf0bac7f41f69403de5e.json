{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\"; // TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\n\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { TreeContext } from \"./contextTypes\";\nimport DropIndicator from \"./DropIndicator\";\nimport NodeList, { MotionEntity, MOTION_KEY } from \"./NodeList\";\nimport TreeNode from \"./TreeNode\";\nimport { arrAdd, arrDel, calcDropPosition, calcSelectedKeys, conductExpandParent, getDragChildrenKeys, parseCheckedKeys, posToArr } from \"./util\";\nimport { conductCheck } from \"./utils/conductUtil\";\nimport getEntity from \"./utils/keyUtil\";\nimport { convertDataToEntities, convertNodePropsToEventData, convertTreeToData, fillFieldNames, flattenTreeData, getTreeNodeProps, warningWithoutKey } from \"./utils/treeUtil\";\nvar MAX_RETRY_TIMES = 10;\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(_args));\n\n    _defineProperty(_assertThisInitialized(_this), \"destroyed\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"delayedDragEnterLogic\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"loadingRetryTimes\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      keyEntities: {},\n      indent: null,\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      draggingNodeKey: null,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      // the drop position of abstract-drop-node, inside 0, top -1, bottom 1\n      dropContainerKey: null,\n      // the container key of abstract-drop-node if dropPosition is -1 or 1\n      dropLevelOffset: null,\n      // the drop level offset of abstract-drag-over-node\n      dropTargetPos: null,\n      // the pos of abstract-drop-node\n      dropAllowed: true,\n      // if drop to abstract-drop-node is allowed\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null,\n      fieldNames: fillFieldNames()\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dragStartMousePosition\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"dragNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"currentMouseOverDroppableNodeKey\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"listRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeDragStart\", function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      _this.dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n      _this.setState({\n        draggingNodeKey: eventKey,\n        dragChildrenKeys: getDragChildrenKeys(eventKey, keyEntities),\n        indent: _this.listRef.current.getIndentWidth()\n      });\n\n      _this.setExpandedKeys(newExpandedKeys);\n\n      window.addEventListener('dragend', _this.onWindowDragEnd);\n      onDragStart === null || onDragStart === void 0 || onDragStart({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n    });\n    /**\n     * [Legacy] Select handler is smaller than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeDragEnter\", function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragChildrenKeys = _this$state2.dragChildrenKeys,\n          flattenNodes = _this$state2.flattenNodes,\n          indent = _this$state2.indent;\n      var _this$props = _this.props,\n          onDragEnter = _this$props.onDragEnter,\n          onExpand = _this$props.onExpand,\n          allowDrop = _this$props.allowDrop,\n          direction = _this$props.direction;\n      var _node$props = node.props,\n          pos = _node$props.pos,\n          eventKey = _node$props.eventKey;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize.dragNode; // record the key of node which is latest entered, used in dragleave event.\n\n\n      if (_this.currentMouseOverDroppableNodeKey !== eventKey) {\n        _this.currentMouseOverDroppableNodeKey = eventKey;\n      }\n\n      if (!dragNode) {\n        _this.resetDragState();\n\n        return;\n      }\n\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition.dropPosition,\n          dropLevelOffset = _calcDropPosition.dropLevelOffset,\n          dropTargetKey = _calcDropPosition.dropTargetKey,\n          dropContainerKey = _calcDropPosition.dropContainerKey,\n          dropTargetPos = _calcDropPosition.dropTargetPos,\n          dropAllowed = _calcDropPosition.dropAllowed,\n          dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n\n      if ( // don't allow drop inside its children\n      dragChildrenKeys.indexOf(dropTargetKey) !== -1 || // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        _this.resetDragState();\n\n        return;\n      } // Side effect for delay drag\n\n\n      if (!_this.delayedDragEnterLogic) {\n        _this.delayedDragEnterLogic = {};\n      }\n\n      Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(_this.delayedDragEnterLogic[key]);\n      });\n\n      if (dragNode.props.eventKey !== node.props.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        event.persist();\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (_this.state.draggingNodeKey === null) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = getEntity(keyEntities, node.props.eventKey);\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, node.props.eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n\n          onExpand === null || onExpand === void 0 || onExpand(newExpandedKeys, {\n            node: convertNodePropsToEventData(node.props),\n            expanded: true,\n            nativeEvent: event.nativeEvent\n          });\n        }, 800);\n      } // Skip if drag node is self\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        _this.resetDragState();\n\n        return;\n      } // Update drag over node and drag state\n\n\n      _this.setState({\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n\n      onDragEnter === null || onDragEnter === void 0 || onDragEnter({\n        event: event,\n        node: convertNodePropsToEventData(node.props),\n        expandedKeys: expandedKeys\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeDragOver\", function (event, node) {\n      var _this$state3 = _this.state,\n          dragChildrenKeys = _this$state3.dragChildrenKeys,\n          flattenNodes = _this$state3.flattenNodes,\n          keyEntities = _this$state3.keyEntities,\n          expandedKeys = _this$state3.expandedKeys,\n          indent = _this$state3.indent;\n      var _this$props2 = _this.props,\n          onDragOver = _this$props2.onDragOver,\n          allowDrop = _this$props2.allowDrop,\n          direction = _this$props2.direction;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize2.dragNode;\n\n      if (!dragNode) {\n        return;\n      }\n\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition2.dropPosition,\n          dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n          dropTargetKey = _calcDropPosition2.dropTargetKey,\n          dropContainerKey = _calcDropPosition2.dropContainerKey,\n          dropAllowed = _calcDropPosition2.dropAllowed,\n          dropTargetPos = _calcDropPosition2.dropTargetPos,\n          dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n\n      if (dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed calculated by calcDropPosition\n        return;\n      } // Update drag position\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(_this.state.dropPosition === null && _this.state.dropLevelOffset === null && _this.state.dropTargetKey === null && _this.state.dropContainerKey === null && _this.state.dropTargetPos === null && _this.state.dropAllowed === false && _this.state.dragOverNodeKey === null)) {\n          _this.resetDragState();\n        }\n      } else if (!(dropPosition === _this.state.dropPosition && dropLevelOffset === _this.state.dropLevelOffset && dropTargetKey === _this.state.dropTargetKey && dropContainerKey === _this.state.dropContainerKey && dropTargetPos === _this.state.dropTargetPos && dropAllowed === _this.state.dropAllowed && dragOverNodeKey === _this.state.dragOverNodeKey)) {\n        _this.setState({\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n\n      onDragOver === null || onDragOver === void 0 || onDragOver({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeDragLeave\", function (event, node) {\n      // if it is outside the droppable area\n      // currentMouseOverDroppableNodeKey will be updated in dragenter event when into another droppable receiver.\n      if (_this.currentMouseOverDroppableNodeKey === node.props.eventKey && !event.currentTarget.contains(event.relatedTarget)) {\n        _this.resetDragState();\n\n        _this.currentMouseOverDroppableNodeKey = null;\n      }\n\n      var onDragLeave = _this.props.onDragLeave;\n      onDragLeave === null || onDragLeave === void 0 || onDragLeave({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n    }); // since stopPropagation() is called in treeNode\n    // if onWindowDrag is called, whice means state is keeped, drag state should be cleared\n\n\n    _defineProperty(_assertThisInitialized(_this), \"onWindowDragEnd\", function (event) {\n      _this.onNodeDragEnd(event, null, true);\n\n      window.removeEventListener('dragend', _this.onWindowDragEnd);\n    }); // if onNodeDragEnd is called, onWindowDragEnd won't be called since stopPropagation() is called\n\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeDragEnd\", function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      onDragEnd === null || onDragEnd === void 0 || onDragEnd({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n      _this.dragNode = null;\n      window.removeEventListener('dragend', _this.onWindowDragEnd);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeDrop\", function (event, node) {\n      var _this$getActiveItem;\n\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _this$state4 = _this.state,\n          dragChildrenKeys = _this$state4.dragChildrenKeys,\n          dropPosition = _this$state4.dropPosition,\n          dropTargetKey = _this$state4.dropTargetKey,\n          dropTargetPos = _this$state4.dropTargetPos,\n          dropAllowed = _this$state4.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = _this.props.onDrop;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (dropTargetKey === null) return;\n\n      var abstractDropNodeProps = _objectSpread(_objectSpread({}, getTreeNodeProps(dropTargetKey, _this.getTreeNodeRequiredProps())), {}, {\n        active: ((_this$getActiveItem = _this.getActiveItem()) === null || _this$getActiveItem === void 0 ? void 0 : _this$getActiveItem.key) === dropTargetKey,\n        data: getEntity(_this.state.keyEntities, dropTargetKey).node\n      });\n\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. This is a bug of rc-tree. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: [_this.dragNode.props.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n\n      if (!outsideTree) {\n        onDrop === null || onDrop === void 0 || onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cleanDragState\", function () {\n      var draggingNodeKey = _this.state.draggingNodeKey;\n\n      if (draggingNodeKey !== null) {\n        _this.setState({\n          draggingNodeKey: null,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n\n      _this.dragStartMousePosition = null;\n      _this.currentMouseOverDroppableNodeKey = null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerExpandActionExpand\", function (e, treeNode) {\n      var _this$state5 = _this.state,\n          expandedKeys = _this$state5.expandedKeys,\n          flattenNodes = _this$state5.flattenNodes;\n      var expanded = treeNode.expanded,\n          key = treeNode.key,\n          isLeaf = treeNode.isLeaf;\n\n      if (isLeaf || e.shiftKey || e.metaKey || e.ctrlKey) {\n        return;\n      }\n\n      var node = flattenNodes.filter(function (nodeItem) {\n        return nodeItem.key === key;\n      })[0];\n      var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(key, _this.getTreeNodeRequiredProps())), {}, {\n        data: node.data\n      }));\n\n      _this.setExpandedKeys(expanded ? arrDel(expandedKeys, key) : arrAdd(expandedKeys, key));\n\n      _this.onNodeExpand(e, eventNode);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeClick\", function (e, treeNode) {\n      var _this$props3 = _this.props,\n          onClick = _this$props3.onClick,\n          expandAction = _this$props3.expandAction;\n\n      if (expandAction === 'click') {\n        _this.triggerExpandActionExpand(e, treeNode);\n      }\n\n      onClick === null || onClick === void 0 || onClick(e, treeNode);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeDoubleClick\", function (e, treeNode) {\n      var _this$props4 = _this.props,\n          onDoubleClick = _this$props4.onDoubleClick,\n          expandAction = _this$props4.expandAction;\n\n      if (expandAction === 'doubleClick') {\n        _this.triggerExpandActionExpand(e, treeNode);\n      }\n\n      onDoubleClick === null || onDoubleClick === void 0 || onDoubleClick(e, treeNode);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeSelect\", function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var _this$state6 = _this.state,\n          keyEntities = _this$state6.keyEntities,\n          fieldNames = _this$state6.fieldNames;\n      var _this$props5 = _this.props,\n          onSelect = _this$props5.onSelect,\n          multiple = _this$props5.multiple;\n      var selected = treeNode.selected;\n      var key = treeNode[fieldNames.key];\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = getEntity(keyEntities, selectedKey);\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      onSelect === null || onSelect === void 0 || onSelect(selectedKeys, {\n        event: 'select',\n        selected: targetSelected,\n        node: treeNode,\n        selectedNodes: selectedNodes,\n        nativeEvent: e.nativeEvent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeCheck\", function (e, treeNode, checked) {\n      var _this$state7 = _this.state,\n          keyEntities = _this$state7.keyEntities,\n          oriCheckedKeys = _this$state7.checkedKeys,\n          oriHalfCheckedKeys = _this$state7.halfCheckedKeys;\n      var _this$props6 = _this.props,\n          checkStrictly = _this$props6.checkStrictly,\n          onCheck = _this$props6.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return getEntity(keyEntities, checkedKey);\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = getEntity(keyEntities, checkedKey);\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      onCheck === null || onCheck === void 0 || onCheck(checkedObj, eventObj);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeLoad\", function (treeNode) {\n      var key = treeNode.key;\n      var loadPromise = new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props7 = _this.props,\n              loadData = _this$props7.loadData,\n              onLoad = _this$props7.onLoad;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            return null;\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var currentLoadedKeys = _this.state.loadedKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            onLoad === null || onLoad === void 0 || onLoad(newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState(function (prevState) {\n              return {\n                loadingKeys: arrDel(prevState.loadingKeys, key)\n              };\n            });\n\n            resolve();\n          }).catch(function (e) {\n            _this.setState(function (prevState) {\n              return {\n                loadingKeys: arrDel(prevState.loadingKeys, key)\n              };\n            }); // If exceed max retry times, we give up retry\n\n\n            _this.loadingRetryTimes[key] = (_this.loadingRetryTimes[key] || 0) + 1;\n\n            if (_this.loadingRetryTimes[key] >= MAX_RETRY_TIMES) {\n              var currentLoadedKeys = _this.state.loadedKeys;\n              warning(false, 'Retry for `loadData` many times but still failed. No more retry.');\n\n              _this.setUncontrolledState({\n                loadedKeys: arrAdd(currentLoadedKeys, key)\n              });\n\n              resolve();\n            }\n\n            reject(e);\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      }); // Not care warning if we ignore this\n\n      loadPromise.catch(function () {});\n      return loadPromise;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeMouseEnter\", function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n      onMouseEnter === null || onMouseEnter === void 0 || onMouseEnter({\n        event: event,\n        node: node\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeMouseLeave\", function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n      onMouseLeave === null || onMouseLeave === void 0 || onMouseLeave({\n        event: event,\n        node: node\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeContextMenu\", function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFocus\", function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      onFocus === null || onFocus === void 0 || onFocus.apply(void 0, args);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onBlur\", function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      onBlur === null || onBlur === void 0 || onBlur.apply(void 0, args);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getTreeNodeRequiredProps\", function () {\n      var _this$state8 = _this.state,\n          expandedKeys = _this$state8.expandedKeys,\n          selectedKeys = _this$state8.selectedKeys,\n          loadedKeys = _this$state8.loadedKeys,\n          loadingKeys = _this$state8.loadingKeys,\n          checkedKeys = _this$state8.checkedKeys,\n          halfCheckedKeys = _this$state8.halfCheckedKeys,\n          dragOverNodeKey = _this$state8.dragOverNodeKey,\n          dropPosition = _this$state8.dropPosition,\n          keyEntities = _this$state8.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    }); // =========================== Expanded ===========================\n\n    /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n\n\n    _defineProperty(_assertThisInitialized(_this), \"setExpandedKeys\", function (expandedKeys) {\n      var _this$state9 = _this.state,\n          treeData = _this$state9.treeData,\n          fieldNames = _this$state9.fieldNames;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys, fieldNames);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNodeExpand\", function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var _this$state10 = _this.state,\n          listChanging = _this$state10.listChanging,\n          fieldNames = _this$state10.fieldNames;\n      var _this$props8 = _this.props,\n          onExpand = _this$props8.onExpand,\n          loadData = _this$props8.loadData;\n      var expanded = treeNode.expanded;\n      var key = treeNode[fieldNames.key]; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      _this.setExpandedKeys(expandedKeys);\n\n      onExpand === null || onExpand === void 0 || onExpand(expandedKeys, {\n        node: treeNode,\n        expanded: targetExpanded,\n        nativeEvent: e.nativeEvent\n      }); // Async Load data\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys, fieldNames);\n\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          }).catch(function () {\n            var currentExpandedKeys = _this.state.expandedKeys;\n            var expandedKeysToRestore = arrDel(currentExpandedKeys, key);\n\n            _this.setExpandedKeys(expandedKeysToRestore);\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onListChangeStart\", function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onListChangeEnd\", function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    }); // =========================== Keyboard ===========================\n\n\n    _defineProperty(_assertThisInitialized(_this), \"onActiveChange\", function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var _this$props9 = _this.props,\n          onActiveChange = _this$props9.onActiveChange,\n          _this$props9$itemScro = _this$props9.itemScrollOffset,\n          itemScrollOffset = _this$props9$itemScro === void 0 ? 0 : _this$props9$itemScro;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey,\n          offset: itemScrollOffset\n        });\n      }\n\n      onActiveChange === null || onActiveChange === void 0 || onActiveChange(newActiveKey);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getActiveItem\", function () {\n      var _this$state11 = _this.state,\n          activeKey = _this$state11.activeKey,\n          flattenNodes = _this$state11.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.key;\n        return key === activeKey;\n      }) || null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"offsetActiveKey\", function (offset) {\n      var _this$state12 = _this.state,\n          flattenNodes = _this$state12.flattenNodes,\n          activeKey = _this$state12.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var _key4 = item.key;\n\n        _this.onActiveChange(_key4);\n      } else {\n        _this.onActiveChange(null);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (event) {\n      var _this$state13 = _this.state,\n          activeKey = _this$state13.activeKey,\n          expandedKeys = _this$state13.expandedKeys,\n          checkedKeys = _this$state13.checkedKeys,\n          fieldNames = _this$state13.fieldNames;\n      var _this$props10 = _this.props,\n          onKeyDown = _this$props10.onKeyDown,\n          checkable = _this$props10.checkable,\n          selectable = _this$props10.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data[fieldNames.children] || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      onKeyDown === null || onKeyDown === void 0 || onKeyDown(event);\n    });\n    /**\n     * Only update the value which is not in props\n     */\n\n\n    _defineProperty(_assertThisInitialized(_this), \"setUncontrolledState\", function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (!_this.destroyed) {\n        var needSync = false;\n        var allPassed = true;\n        var newState = {};\n        Object.keys(state).forEach(function (name) {\n          if (name in _this.props) {\n            allPassed = false;\n            return;\n          }\n\n          needSync = true;\n          newState[name] = state[name];\n        });\n\n        if (needSync && (!atomic || allPassed)) {\n          _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollTo\", function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    });\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.destroyed = false;\n      this.onUpdated();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onUpdated();\n    }\n  }, {\n    key: \"onUpdated\",\n    value: function onUpdated() {\n      var _this$props11 = this.props,\n          activeKey = _this$props11.activeKey,\n          _this$props11$itemScr = _this$props11.itemScrollOffset,\n          itemScrollOffset = _this$props11$itemScr === void 0 ? 0 : _this$props11$itemScr;\n\n      if (activeKey !== undefined && activeKey !== this.state.activeKey) {\n        this.setState({\n          activeKey: activeKey\n        });\n\n        if (activeKey !== null) {\n          this.scrollTo({\n            key: activeKey,\n            offset: itemScrollOffset\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('dragend', this.onWindowDragEnd);\n      this.destroyed = true;\n    }\n  }, {\n    key: \"resetDragState\",\n    value: function resetDragState() {\n      this.setState({\n        dragOverNodeKey: null,\n        dropPosition: null,\n        dropLevelOffset: null,\n        dropTargetKey: null,\n        dropContainerKey: null,\n        dropTargetPos: null,\n        dropAllowed: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state14 = this.state,\n          focused = _this$state14.focused,\n          flattenNodes = _this$state14.flattenNodes,\n          keyEntities = _this$state14.keyEntities,\n          draggingNodeKey = _this$state14.draggingNodeKey,\n          activeKey = _this$state14.activeKey,\n          dropLevelOffset = _this$state14.dropLevelOffset,\n          dropContainerKey = _this$state14.dropContainerKey,\n          dropTargetKey = _this$state14.dropTargetKey,\n          dropPosition = _this$state14.dropPosition,\n          dragOverNodeKey = _this$state14.dragOverNodeKey,\n          indent = _this$state14.indent;\n      var _this$props12 = this.props,\n          prefixCls = _this$props12.prefixCls,\n          className = _this$props12.className,\n          style = _this$props12.style,\n          showLine = _this$props12.showLine,\n          focusable = _this$props12.focusable,\n          _this$props12$tabInde = _this$props12.tabIndex,\n          tabIndex = _this$props12$tabInde === void 0 ? 0 : _this$props12$tabInde,\n          selectable = _this$props12.selectable,\n          showIcon = _this$props12.showIcon,\n          icon = _this$props12.icon,\n          switcherIcon = _this$props12.switcherIcon,\n          draggable = _this$props12.draggable,\n          checkable = _this$props12.checkable,\n          checkStrictly = _this$props12.checkStrictly,\n          disabled = _this$props12.disabled,\n          motion = _this$props12.motion,\n          loadData = _this$props12.loadData,\n          filterTreeNode = _this$props12.filterTreeNode,\n          height = _this$props12.height,\n          itemHeight = _this$props12.itemHeight,\n          virtual = _this$props12.virtual,\n          titleRender = _this$props12.titleRender,\n          dropIndicatorRender = _this$props12.dropIndicatorRender,\n          onContextMenu = _this$props12.onContextMenu,\n          onScroll = _this$props12.onScroll,\n          direction = _this$props12.direction,\n          rootClassName = _this$props12.rootClassName,\n          rootStyle = _this$props12.rootStyle;\n      var domProps = pickAttrs(this.props, {\n        aria: true,\n        data: true\n      }); // It's better move to hooks but we just simply keep here\n\n      var draggableConfig;\n\n      if (draggable) {\n        if (_typeof(draggable) === 'object') {\n          draggableConfig = draggable;\n        } else if (typeof draggable === 'function') {\n          draggableConfig = {\n            nodeDraggable: draggable\n          };\n        } else {\n          draggableConfig = {};\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggableConfig,\n          draggingNodeKey: draggingNodeKey,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          indent: indent,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          titleRender: titleRender,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        role: \"tree\",\n        className: classNames(prefixCls, className, rootClassName, _defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-show-line\"), showLine), \"\".concat(prefixCls, \"-focused\"), focused), \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null)),\n        style: rootStyle\n      }, /*#__PURE__*/React.createElement(NodeList, _extends({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: draggingNodeKey !== null,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd,\n        onContextMenu: onContextMenu,\n        onScroll: onScroll\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // fieldNames\n\n      var fieldNames = prevState.fieldNames;\n\n      if (needSync('fieldNames')) {\n        fieldNames = fillFieldNames(props.fieldNames);\n        newState.fieldNames = fieldNames;\n      } // Check if `treeData` or `children` changed and save into the state.\n\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData, {\n          fieldNames: fieldNames\n        });\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData, fieldNames);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys, fieldNames);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\n_defineProperty(Tree, \"defaultProps\", {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  dropIndicatorRender: DropIndicator,\n  allowDrop: function allowDrop() {\n    return true;\n  },\n  expandAction: false\n});\n\n_defineProperty(Tree, \"TreeNode\", TreeNode);\n\nexport default Tree;","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/rc-tree/es/Tree.js"],"names":["_extends","_typeof","_objectSpread","_toConsumableArray","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","_defineProperty","classNames","KeyCode","pickAttrs","warning","React","TreeContext","DropIndicator","NodeList","MotionEntity","MOTION_KEY","TreeNode","arrAdd","arrDel","calcDropPosition","calcSelectedKeys","conductExpandParent","getDragChildrenKeys","parseCheckedKeys","posToArr","conductCheck","getEntity","convertDataToEntities","convertNodePropsToEventData","convertTreeToData","fillFieldNames","flattenTreeData","getTreeNodeProps","warningWithoutKey","MAX_RETRY_TIMES","Tree","_React$Component","_super","_this","_len","arguments","length","_args","Array","_key","call","apply","concat","keyEntities","indent","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","draggingNodeKey","dragChildrenKeys","dropTargetKey","dropPosition","dropContainerKey","dropLevelOffset","dropTargetPos","dropAllowed","dragOverNodeKey","treeData","flattenNodes","focused","activeKey","listChanging","prevProps","fieldNames","createRef","event","node","_this$state","state","onDragStart","props","eventKey","dragNode","dragStartMousePosition","x","clientX","y","clientY","newExpandedKeys","setState","listRef","current","getIndentWidth","setExpandedKeys","window","addEventListener","onWindowDragEnd","_this$state2","_this$props","onDragEnter","onExpand","allowDrop","direction","_node$props","pos","_assertThisInitialize","currentMouseOverDroppableNodeKey","resetDragState","_calcDropPosition","indexOf","delayedDragEnterLogic","Object","keys","forEach","key","clearTimeout","persist","setTimeout","entity","children","expanded","nativeEvent","_this$state3","_this$props2","onDragOver","_assertThisInitialize2","_calcDropPosition2","currentTarget","contains","relatedTarget","onDragLeave","onNodeDragEnd","removeEventListener","onDragEnd","cleanDragState","_this$getActiveItem","outsideTree","undefined","_this$state4","onDrop","abstractDropNodeProps","getTreeNodeRequiredProps","active","getActiveItem","data","dropToChild","posArr","dropResult","dragNodesKeys","dropToGap","Number","e","treeNode","_this$state5","isLeaf","shiftKey","metaKey","ctrlKey","filter","nodeItem","eventNode","onNodeExpand","_this$props3","onClick","expandAction","triggerExpandActionExpand","_this$props4","onDoubleClick","_this$state6","_this$props5","onSelect","multiple","selected","targetSelected","selectedNodes","map","selectedKey","setUncontrolledState","checked","_this$state7","oriCheckedKeys","oriHalfCheckedKeys","_this$props6","checkStrictly","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","checkedKey","_conductCheck","_checkedKeys","_halfCheckedKeys","keySet","Set","delete","_conductCheck2","from","checkedNodesPositions","push","loadPromise","Promise","resolve","reject","_ref","_ref$loadedKeys","_ref$loadingKeys","_this$props7","loadData","onLoad","promise","then","currentLoadedKeys","newLoadedKeys","prevState","catch","loadingRetryTimes","onMouseEnter","onMouseLeave","onRightClick","preventDefault","onFocus","_len2","args","_key2","onBlur","onActiveChange","_len3","_key3","_this$state8","_this$state9","_this$state10","_this$props8","index","targetExpanded","onNodeLoad","newFlattenTreeData","currentExpandedKeys","expandedKeysToRestore","newActiveKey","_this$props9","_this$props9$itemScro","itemScrollOffset","scrollTo","offset","_this$state11","find","_ref2","_this$state12","findIndex","_ref3","item","_key4","_this$state13","_this$props10","onKeyDown","checkable","selectable","which","UP","offsetActiveKey","DOWN","activeItem","treeNodeRequiredProps","expandable","LEFT","includes","parent","RIGHT","ENTER","SPACE","disabled","disableCheckbox","onNodeCheck","onNodeSelect","atomic","forceState","destroyed","needSync","allPassed","newState","name","scroll","value","componentDidMount","onUpdated","componentDidUpdate","_this$props11","_this$props11$itemScr","componentWillUnmount","render","_this$state14","_this$props12","prefixCls","className","style","showLine","focusable","_this$props12$tabInde","tabIndex","showIcon","icon","switcherIcon","draggable","motion","filterTreeNode","height","itemHeight","virtual","titleRender","dropIndicatorRender","onContextMenu","onScroll","rootClassName","rootStyle","domProps","aria","draggableConfig","nodeDraggable","createElement","Provider","onNodeClick","onNodeDoubleClick","onNodeMouseEnter","onNodeMouseLeave","onNodeContextMenu","onNodeDragStart","onNodeDragEnter","onNodeDragOver","onNodeDragLeave","onNodeDrop","role","ref","dragging","onListChangeStart","onListChangeEnd","getDerivedStateFromProps","entitiesMap","process","env","NODE_ENV","autoExpandParent","defaultExpandParent","defaultExpandAll","cloneKeyEntities","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n// TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\n\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { TreeContext } from \"./contextTypes\";\nimport DropIndicator from \"./DropIndicator\";\nimport NodeList, { MotionEntity, MOTION_KEY } from \"./NodeList\";\nimport TreeNode from \"./TreeNode\";\nimport { arrAdd, arrDel, calcDropPosition, calcSelectedKeys, conductExpandParent, getDragChildrenKeys, parseCheckedKeys, posToArr } from \"./util\";\nimport { conductCheck } from \"./utils/conductUtil\";\nimport getEntity from \"./utils/keyUtil\";\nimport { convertDataToEntities, convertNodePropsToEventData, convertTreeToData, fillFieldNames, flattenTreeData, getTreeNodeProps, warningWithoutKey } from \"./utils/treeUtil\";\nvar MAX_RETRY_TIMES = 10;\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n  var _super = _createSuper(Tree);\n  function Tree() {\n    var _this;\n    _classCallCheck(this, Tree);\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(_args));\n    _defineProperty(_assertThisInitialized(_this), \"destroyed\", false);\n    _defineProperty(_assertThisInitialized(_this), \"delayedDragEnterLogic\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"loadingRetryTimes\", {});\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      keyEntities: {},\n      indent: null,\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      draggingNodeKey: null,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      // the drop position of abstract-drop-node, inside 0, top -1, bottom 1\n      dropContainerKey: null,\n      // the container key of abstract-drop-node if dropPosition is -1 or 1\n      dropLevelOffset: null,\n      // the drop level offset of abstract-drag-over-node\n      dropTargetPos: null,\n      // the pos of abstract-drop-node\n      dropAllowed: true,\n      // if drop to abstract-drop-node is allowed\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null,\n      fieldNames: fillFieldNames()\n    });\n    _defineProperty(_assertThisInitialized(_this), \"dragStartMousePosition\", null);\n    _defineProperty(_assertThisInitialized(_this), \"dragNode\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"currentMouseOverDroppableNodeKey\", null);\n    _defineProperty(_assertThisInitialized(_this), \"listRef\", /*#__PURE__*/React.createRef());\n    _defineProperty(_assertThisInitialized(_this), \"onNodeDragStart\", function (event, node) {\n      var _this$state = _this.state,\n        expandedKeys = _this$state.expandedKeys,\n        keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      _this.dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n      _this.setState({\n        draggingNodeKey: eventKey,\n        dragChildrenKeys: getDragChildrenKeys(eventKey, keyEntities),\n        indent: _this.listRef.current.getIndentWidth()\n      });\n      _this.setExpandedKeys(newExpandedKeys);\n      window.addEventListener('dragend', _this.onWindowDragEnd);\n      onDragStart === null || onDragStart === void 0 || onDragStart({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n    });\n    /**\n     * [Legacy] Select handler is smaller than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n    _defineProperty(_assertThisInitialized(_this), \"onNodeDragEnter\", function (event, node) {\n      var _this$state2 = _this.state,\n        expandedKeys = _this$state2.expandedKeys,\n        keyEntities = _this$state2.keyEntities,\n        dragChildrenKeys = _this$state2.dragChildrenKeys,\n        flattenNodes = _this$state2.flattenNodes,\n        indent = _this$state2.indent;\n      var _this$props = _this.props,\n        onDragEnter = _this$props.onDragEnter,\n        onExpand = _this$props.onExpand,\n        allowDrop = _this$props.allowDrop,\n        direction = _this$props.direction;\n      var _node$props = node.props,\n        pos = _node$props.pos,\n        eventKey = _node$props.eventKey;\n      var _assertThisInitialize = _assertThisInitialized(_this),\n        dragNode = _assertThisInitialize.dragNode;\n\n      // record the key of node which is latest entered, used in dragleave event.\n      if (_this.currentMouseOverDroppableNodeKey !== eventKey) {\n        _this.currentMouseOverDroppableNodeKey = eventKey;\n      }\n      if (!dragNode) {\n        _this.resetDragState();\n        return;\n      }\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n        dropPosition = _calcDropPosition.dropPosition,\n        dropLevelOffset = _calcDropPosition.dropLevelOffset,\n        dropTargetKey = _calcDropPosition.dropTargetKey,\n        dropContainerKey = _calcDropPosition.dropContainerKey,\n        dropTargetPos = _calcDropPosition.dropTargetPos,\n        dropAllowed = _calcDropPosition.dropAllowed,\n        dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n      if (\n      // don't allow drop inside its children\n      dragChildrenKeys.indexOf(dropTargetKey) !== -1 ||\n      // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        _this.resetDragState();\n        return;\n      }\n\n      // Side effect for delay drag\n      if (!_this.delayedDragEnterLogic) {\n        _this.delayedDragEnterLogic = {};\n      }\n      Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(_this.delayedDragEnterLogic[key]);\n      });\n      if (dragNode.props.eventKey !== node.props.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        event.persist();\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (_this.state.draggingNodeKey === null) return;\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n          var entity = getEntity(keyEntities, node.props.eventKey);\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, node.props.eventKey);\n          }\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n          onExpand === null || onExpand === void 0 || onExpand(newExpandedKeys, {\n            node: convertNodePropsToEventData(node.props),\n            expanded: true,\n            nativeEvent: event.nativeEvent\n          });\n        }, 800);\n      }\n\n      // Skip if drag node is self\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        _this.resetDragState();\n        return;\n      }\n\n      // Update drag over node and drag state\n      _this.setState({\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n      onDragEnter === null || onDragEnter === void 0 || onDragEnter({\n        event: event,\n        node: convertNodePropsToEventData(node.props),\n        expandedKeys: expandedKeys\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNodeDragOver\", function (event, node) {\n      var _this$state3 = _this.state,\n        dragChildrenKeys = _this$state3.dragChildrenKeys,\n        flattenNodes = _this$state3.flattenNodes,\n        keyEntities = _this$state3.keyEntities,\n        expandedKeys = _this$state3.expandedKeys,\n        indent = _this$state3.indent;\n      var _this$props2 = _this.props,\n        onDragOver = _this$props2.onDragOver,\n        allowDrop = _this$props2.allowDrop,\n        direction = _this$props2.direction;\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n        dragNode = _assertThisInitialize2.dragNode;\n      if (!dragNode) {\n        return;\n      }\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n        dropPosition = _calcDropPosition2.dropPosition,\n        dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n        dropTargetKey = _calcDropPosition2.dropTargetKey,\n        dropContainerKey = _calcDropPosition2.dropContainerKey,\n        dropAllowed = _calcDropPosition2.dropAllowed,\n        dropTargetPos = _calcDropPosition2.dropTargetPos,\n        dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n      if (dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed calculated by calcDropPosition\n        return;\n      }\n\n      // Update drag position\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(_this.state.dropPosition === null && _this.state.dropLevelOffset === null && _this.state.dropTargetKey === null && _this.state.dropContainerKey === null && _this.state.dropTargetPos === null && _this.state.dropAllowed === false && _this.state.dragOverNodeKey === null)) {\n          _this.resetDragState();\n        }\n      } else if (!(dropPosition === _this.state.dropPosition && dropLevelOffset === _this.state.dropLevelOffset && dropTargetKey === _this.state.dropTargetKey && dropContainerKey === _this.state.dropContainerKey && dropTargetPos === _this.state.dropTargetPos && dropAllowed === _this.state.dropAllowed && dragOverNodeKey === _this.state.dragOverNodeKey)) {\n        _this.setState({\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n      onDragOver === null || onDragOver === void 0 || onDragOver({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNodeDragLeave\", function (event, node) {\n      // if it is outside the droppable area\n      // currentMouseOverDroppableNodeKey will be updated in dragenter event when into another droppable receiver.\n      if (_this.currentMouseOverDroppableNodeKey === node.props.eventKey && !event.currentTarget.contains(event.relatedTarget)) {\n        _this.resetDragState();\n        _this.currentMouseOverDroppableNodeKey = null;\n      }\n      var onDragLeave = _this.props.onDragLeave;\n      onDragLeave === null || onDragLeave === void 0 || onDragLeave({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n    });\n    // since stopPropagation() is called in treeNode\n    // if onWindowDrag is called, whice means state is keeped, drag state should be cleared\n    _defineProperty(_assertThisInitialized(_this), \"onWindowDragEnd\", function (event) {\n      _this.onNodeDragEnd(event, null, true);\n      window.removeEventListener('dragend', _this.onWindowDragEnd);\n    });\n    // if onNodeDragEnd is called, onWindowDragEnd won't be called since stopPropagation() is called\n    _defineProperty(_assertThisInitialized(_this), \"onNodeDragEnd\", function (event, node) {\n      var onDragEnd = _this.props.onDragEnd;\n      _this.setState({\n        dragOverNodeKey: null\n      });\n      _this.cleanDragState();\n      onDragEnd === null || onDragEnd === void 0 || onDragEnd({\n        event: event,\n        node: convertNodePropsToEventData(node.props)\n      });\n      _this.dragNode = null;\n      window.removeEventListener('dragend', _this.onWindowDragEnd);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNodeDrop\", function (event, node) {\n      var _this$getActiveItem;\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _this$state4 = _this.state,\n        dragChildrenKeys = _this$state4.dragChildrenKeys,\n        dropPosition = _this$state4.dropPosition,\n        dropTargetKey = _this$state4.dropTargetKey,\n        dropTargetPos = _this$state4.dropTargetPos,\n        dropAllowed = _this$state4.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = _this.props.onDrop;\n      _this.setState({\n        dragOverNodeKey: null\n      });\n      _this.cleanDragState();\n      if (dropTargetKey === null) return;\n      var abstractDropNodeProps = _objectSpread(_objectSpread({}, getTreeNodeProps(dropTargetKey, _this.getTreeNodeRequiredProps())), {}, {\n        active: ((_this$getActiveItem = _this.getActiveItem()) === null || _this$getActiveItem === void 0 ? void 0 : _this$getActiveItem.key) === dropTargetKey,\n        data: getEntity(_this.state.keyEntities, dropTargetKey).node\n      });\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. This is a bug of rc-tree. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: [_this.dragNode.props.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n      if (!outsideTree) {\n        onDrop === null || onDrop === void 0 || onDrop(dropResult);\n      }\n      _this.dragNode = null;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"cleanDragState\", function () {\n      var draggingNodeKey = _this.state.draggingNodeKey;\n      if (draggingNodeKey !== null) {\n        _this.setState({\n          draggingNodeKey: null,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n      _this.dragStartMousePosition = null;\n      _this.currentMouseOverDroppableNodeKey = null;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"triggerExpandActionExpand\", function (e, treeNode) {\n      var _this$state5 = _this.state,\n        expandedKeys = _this$state5.expandedKeys,\n        flattenNodes = _this$state5.flattenNodes;\n      var expanded = treeNode.expanded,\n        key = treeNode.key,\n        isLeaf = treeNode.isLeaf;\n      if (isLeaf || e.shiftKey || e.metaKey || e.ctrlKey) {\n        return;\n      }\n      var node = flattenNodes.filter(function (nodeItem) {\n        return nodeItem.key === key;\n      })[0];\n      var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(key, _this.getTreeNodeRequiredProps())), {}, {\n        data: node.data\n      }));\n      _this.setExpandedKeys(expanded ? arrDel(expandedKeys, key) : arrAdd(expandedKeys, key));\n      _this.onNodeExpand(e, eventNode);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNodeClick\", function (e, treeNode) {\n      var _this$props3 = _this.props,\n        onClick = _this$props3.onClick,\n        expandAction = _this$props3.expandAction;\n      if (expandAction === 'click') {\n        _this.triggerExpandActionExpand(e, treeNode);\n      }\n      onClick === null || onClick === void 0 || onClick(e, treeNode);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNodeDoubleClick\", function (e, treeNode) {\n      var _this$props4 = _this.props,\n        onDoubleClick = _this$props4.onDoubleClick,\n        expandAction = _this$props4.expandAction;\n      if (expandAction === 'doubleClick') {\n        _this.triggerExpandActionExpand(e, treeNode);\n      }\n      onDoubleClick === null || onDoubleClick === void 0 || onDoubleClick(e, treeNode);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNodeSelect\", function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var _this$state6 = _this.state,\n        keyEntities = _this$state6.keyEntities,\n        fieldNames = _this$state6.fieldNames;\n      var _this$props5 = _this.props,\n        onSelect = _this$props5.onSelect,\n        multiple = _this$props5.multiple;\n      var selected = treeNode.selected;\n      var key = treeNode[fieldNames.key];\n      var targetSelected = !selected;\n\n      // Update selected keys\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      }\n\n      // [Legacy] Not found related usage in doc or upper libs\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = getEntity(keyEntities, selectedKey);\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n      onSelect === null || onSelect === void 0 || onSelect(selectedKeys, {\n        event: 'select',\n        selected: targetSelected,\n        node: treeNode,\n        selectedNodes: selectedNodes,\n        nativeEvent: e.nativeEvent\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNodeCheck\", function (e, treeNode, checked) {\n      var _this$state7 = _this.state,\n        keyEntities = _this$state7.keyEntities,\n        oriCheckedKeys = _this$state7.checkedKeys,\n        oriHalfCheckedKeys = _this$state7.halfCheckedKeys;\n      var _this$props6 = _this.props,\n        checkStrictly = _this$props6.checkStrictly,\n        onCheck = _this$props6.onCheck;\n      var key = treeNode.key;\n\n      // Prepare trigger arguments\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return getEntity(keyEntities, checkedKey);\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n          _checkedKeys = _conductCheck.checkedKeys,\n          _halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n        // If remove, we do it again to correction\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n        checkedObj = _checkedKeys;\n\n        // [Legacy] This is used for `rc-tree-select`\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = getEntity(keyEntities, checkedKey);\n          if (!entity) return;\n          var node = entity.node,\n            pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n      onCheck === null || onCheck === void 0 || onCheck(checkedObj, eventObj);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNodeLoad\", function (treeNode) {\n      var key = treeNode.key;\n      var loadPromise = new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n            loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n            _ref$loadingKeys = _ref.loadingKeys,\n            loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props7 = _this.props,\n            loadData = _this$props7.loadData,\n            onLoad = _this$props7.onLoad;\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            return null;\n          }\n\n          // Process load data\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var currentLoadedKeys = _this.state.loadedKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n\n            // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n            onLoad === null || onLoad === void 0 || onLoad(newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n            _this.setState(function (prevState) {\n              return {\n                loadingKeys: arrDel(prevState.loadingKeys, key)\n              };\n            });\n            resolve();\n          }).catch(function (e) {\n            _this.setState(function (prevState) {\n              return {\n                loadingKeys: arrDel(prevState.loadingKeys, key)\n              };\n            });\n\n            // If exceed max retry times, we give up retry\n            _this.loadingRetryTimes[key] = (_this.loadingRetryTimes[key] || 0) + 1;\n            if (_this.loadingRetryTimes[key] >= MAX_RETRY_TIMES) {\n              var currentLoadedKeys = _this.state.loadedKeys;\n              warning(false, 'Retry for `loadData` many times but still failed. No more retry.');\n              _this.setUncontrolledState({\n                loadedKeys: arrAdd(currentLoadedKeys, key)\n              });\n              resolve();\n            }\n            reject(e);\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      });\n\n      // Not care warning if we ignore this\n      loadPromise.catch(function () {});\n      return loadPromise;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNodeMouseEnter\", function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n      onMouseEnter === null || onMouseEnter === void 0 || onMouseEnter({\n        event: event,\n        node: node\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNodeMouseLeave\", function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n      onMouseLeave === null || onMouseLeave === void 0 || onMouseLeave({\n        event: event,\n        node: node\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNodeContextMenu\", function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onFocus\", function () {\n      var onFocus = _this.props.onFocus;\n      _this.setState({\n        focused: true\n      });\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      onFocus === null || onFocus === void 0 || onFocus.apply(void 0, args);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onBlur\", function () {\n      var onBlur = _this.props.onBlur;\n      _this.setState({\n        focused: false\n      });\n      _this.onActiveChange(null);\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      onBlur === null || onBlur === void 0 || onBlur.apply(void 0, args);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getTreeNodeRequiredProps\", function () {\n      var _this$state8 = _this.state,\n        expandedKeys = _this$state8.expandedKeys,\n        selectedKeys = _this$state8.selectedKeys,\n        loadedKeys = _this$state8.loadedKeys,\n        loadingKeys = _this$state8.loadingKeys,\n        checkedKeys = _this$state8.checkedKeys,\n        halfCheckedKeys = _this$state8.halfCheckedKeys,\n        dragOverNodeKey = _this$state8.dragOverNodeKey,\n        dropPosition = _this$state8.dropPosition,\n        keyEntities = _this$state8.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    });\n    // =========================== Expanded ===========================\n    /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n    _defineProperty(_assertThisInitialized(_this), \"setExpandedKeys\", function (expandedKeys) {\n      var _this$state9 = _this.state,\n        treeData = _this$state9.treeData,\n        fieldNames = _this$state9.fieldNames;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys, fieldNames);\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onNodeExpand\", function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var _this$state10 = _this.state,\n        listChanging = _this$state10.listChanging,\n        fieldNames = _this$state10.fieldNames;\n      var _this$props8 = _this.props,\n        onExpand = _this$props8.onExpand,\n        loadData = _this$props8.loadData;\n      var expanded = treeNode.expanded;\n      var key = treeNode[fieldNames.key];\n\n      // Do nothing when motion is in progress\n      if (listChanging) {\n        return;\n      }\n\n      // Update selected keys\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n      _this.setExpandedKeys(expandedKeys);\n      onExpand === null || onExpand === void 0 || onExpand(expandedKeys, {\n        node: treeNode,\n        expanded: targetExpanded,\n        nativeEvent: e.nativeEvent\n      });\n\n      // Async Load data\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys, fieldNames);\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          }).catch(function () {\n            var currentExpandedKeys = _this.state.expandedKeys;\n            var expandedKeysToRestore = arrDel(currentExpandedKeys, key);\n            _this.setExpandedKeys(expandedKeysToRestore);\n          });\n        }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onListChangeStart\", function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onListChangeEnd\", function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    });\n    // =========================== Keyboard ===========================\n    _defineProperty(_assertThisInitialized(_this), \"onActiveChange\", function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var _this$props9 = _this.props,\n        onActiveChange = _this$props9.onActiveChange,\n        _this$props9$itemScro = _this$props9.itemScrollOffset,\n        itemScrollOffset = _this$props9$itemScro === void 0 ? 0 : _this$props9$itemScro;\n      if (activeKey === newActiveKey) {\n        return;\n      }\n      _this.setState({\n        activeKey: newActiveKey\n      });\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey,\n          offset: itemScrollOffset\n        });\n      }\n      onActiveChange === null || onActiveChange === void 0 || onActiveChange(newActiveKey);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getActiveItem\", function () {\n      var _this$state11 = _this.state,\n        activeKey = _this$state11.activeKey,\n        flattenNodes = _this$state11.flattenNodes;\n      if (activeKey === null) {\n        return null;\n      }\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.key;\n        return key === activeKey;\n      }) || null;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"offsetActiveKey\", function (offset) {\n      var _this$state12 = _this.state,\n        flattenNodes = _this$state12.flattenNodes,\n        activeKey = _this$state12.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.key;\n        return key === activeKey;\n      });\n\n      // Align with index\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n      if (item) {\n        var _key4 = item.key;\n        _this.onActiveChange(_key4);\n      } else {\n        _this.onActiveChange(null);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (event) {\n      var _this$state13 = _this.state,\n        activeKey = _this$state13.activeKey,\n        expandedKeys = _this$state13.expandedKeys,\n        checkedKeys = _this$state13.checkedKeys,\n        fieldNames = _this$state13.fieldNames;\n      var _this$props10 = _this.props,\n        onKeyDown = _this$props10.onKeyDown,\n        checkable = _this$props10.checkable,\n        selectable = _this$props10.selectable;\n\n      // >>>>>>>>>> Direction\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n            event.preventDefault();\n            break;\n          }\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n            event.preventDefault();\n            break;\n          }\n      }\n\n      // >>>>>>>>>> Expand & Selection\n      var activeItem = _this.getActiveItem();\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data[fieldNames.children] || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.key);\n              }\n              event.preventDefault();\n              break;\n            }\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].key);\n              }\n              event.preventDefault();\n              break;\n            }\n\n          // Selection\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n              break;\n            }\n        }\n      }\n      onKeyDown === null || onKeyDown === void 0 || onKeyDown(event);\n    });\n    /**\n     * Only update the value which is not in props\n     */\n    _defineProperty(_assertThisInitialized(_this), \"setUncontrolledState\", function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      if (!_this.destroyed) {\n        var needSync = false;\n        var allPassed = true;\n        var newState = {};\n        Object.keys(state).forEach(function (name) {\n          if (name in _this.props) {\n            allPassed = false;\n            return;\n          }\n          needSync = true;\n          newState[name] = state[name];\n        });\n        if (needSync && (!atomic || allPassed)) {\n          _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n        }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"scrollTo\", function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    });\n    return _this;\n  }\n  _createClass(Tree, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.destroyed = false;\n      this.onUpdated();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onUpdated();\n    }\n  }, {\n    key: \"onUpdated\",\n    value: function onUpdated() {\n      var _this$props11 = this.props,\n        activeKey = _this$props11.activeKey,\n        _this$props11$itemScr = _this$props11.itemScrollOffset,\n        itemScrollOffset = _this$props11$itemScr === void 0 ? 0 : _this$props11$itemScr;\n      if (activeKey !== undefined && activeKey !== this.state.activeKey) {\n        this.setState({\n          activeKey: activeKey\n        });\n        if (activeKey !== null) {\n          this.scrollTo({\n            key: activeKey,\n            offset: itemScrollOffset\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('dragend', this.onWindowDragEnd);\n      this.destroyed = true;\n    }\n  }, {\n    key: \"resetDragState\",\n    value: function resetDragState() {\n      this.setState({\n        dragOverNodeKey: null,\n        dropPosition: null,\n        dropLevelOffset: null,\n        dropTargetKey: null,\n        dropContainerKey: null,\n        dropTargetPos: null,\n        dropAllowed: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state14 = this.state,\n        focused = _this$state14.focused,\n        flattenNodes = _this$state14.flattenNodes,\n        keyEntities = _this$state14.keyEntities,\n        draggingNodeKey = _this$state14.draggingNodeKey,\n        activeKey = _this$state14.activeKey,\n        dropLevelOffset = _this$state14.dropLevelOffset,\n        dropContainerKey = _this$state14.dropContainerKey,\n        dropTargetKey = _this$state14.dropTargetKey,\n        dropPosition = _this$state14.dropPosition,\n        dragOverNodeKey = _this$state14.dragOverNodeKey,\n        indent = _this$state14.indent;\n      var _this$props12 = this.props,\n        prefixCls = _this$props12.prefixCls,\n        className = _this$props12.className,\n        style = _this$props12.style,\n        showLine = _this$props12.showLine,\n        focusable = _this$props12.focusable,\n        _this$props12$tabInde = _this$props12.tabIndex,\n        tabIndex = _this$props12$tabInde === void 0 ? 0 : _this$props12$tabInde,\n        selectable = _this$props12.selectable,\n        showIcon = _this$props12.showIcon,\n        icon = _this$props12.icon,\n        switcherIcon = _this$props12.switcherIcon,\n        draggable = _this$props12.draggable,\n        checkable = _this$props12.checkable,\n        checkStrictly = _this$props12.checkStrictly,\n        disabled = _this$props12.disabled,\n        motion = _this$props12.motion,\n        loadData = _this$props12.loadData,\n        filterTreeNode = _this$props12.filterTreeNode,\n        height = _this$props12.height,\n        itemHeight = _this$props12.itemHeight,\n        virtual = _this$props12.virtual,\n        titleRender = _this$props12.titleRender,\n        dropIndicatorRender = _this$props12.dropIndicatorRender,\n        onContextMenu = _this$props12.onContextMenu,\n        onScroll = _this$props12.onScroll,\n        direction = _this$props12.direction,\n        rootClassName = _this$props12.rootClassName,\n        rootStyle = _this$props12.rootStyle;\n      var domProps = pickAttrs(this.props, {\n        aria: true,\n        data: true\n      });\n\n      // It's better move to hooks but we just simply keep here\n      var draggableConfig;\n      if (draggable) {\n        if (_typeof(draggable) === 'object') {\n          draggableConfig = draggable;\n        } else if (typeof draggable === 'function') {\n          draggableConfig = {\n            nodeDraggable: draggable\n          };\n        } else {\n          draggableConfig = {};\n        }\n      }\n      return /*#__PURE__*/React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggableConfig,\n          draggingNodeKey: draggingNodeKey,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          indent: indent,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          titleRender: titleRender,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        role: \"tree\",\n        className: classNames(prefixCls, className, rootClassName, _defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-show-line\"), showLine), \"\".concat(prefixCls, \"-focused\"), focused), \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null)),\n        style: rootStyle\n      }, /*#__PURE__*/React.createElement(NodeList, _extends({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: draggingNodeKey !== null,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd,\n        onContextMenu: onContextMenu,\n        onScroll: onScroll\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      }\n\n      // ================== Tree Node ==================\n      var treeData;\n\n      // fieldNames\n      var fieldNames = prevState.fieldNames;\n      if (needSync('fieldNames')) {\n        fieldNames = fillFieldNames(props.fieldNames);\n        newState.fieldNames = fieldNames;\n      }\n\n      // Check if `treeData` or `children` changed and save into the state.\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      }\n\n      // Save flatten nodes info and convert `treeData` into keyEntities\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData, {\n          fieldNames: fieldNames\n        });\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities);\n\n        // Warning if treeNode not provide key\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData, fieldNames);\n        }\n      }\n      var keyEntities = newState.keyEntities || prevState.keyEntities;\n\n      // ================ expandedKeys =================\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      }\n\n      // ================ flattenNodes =================\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys, fieldNames);\n        newState.flattenNodes = flattenNodes;\n      }\n\n      // ================ selectedKeys =================\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      }\n\n      // ================= checkedKeys =================\n      if (props.checkable) {\n        var checkedKeyEntity;\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n            _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n            checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n            _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n            halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      }\n\n      // ================= loadedKeys ==================\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n      return newState;\n    }\n  }]);\n  return Tree;\n}(React.Component);\n_defineProperty(Tree, \"defaultProps\", {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  dropIndicatorRender: DropIndicator,\n  allowDrop: function allowDrop() {\n    return true;\n  },\n  expandAction: false\n});\n_defineProperty(Tree, \"TreeNode\", TreeNode);\nexport default Tree;"]},"metadata":{},"sourceType":"module"}