{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { clearFix, resetComponent, textEllipsis } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal'; // ============================== Styles ==============================\n// ============================== Head ==============================\n\nconst genCardHeadStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    headerHeight,\n    cardPaddingBase,\n    tabsMarginBottom\n  } = token;\n  return Object.assign(Object.assign({\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    minHeight: headerHeight,\n    marginBottom: -1,\n    padding: `0 ${unit(cardPaddingBase)}`,\n    color: token.colorTextHeading,\n    fontWeight: token.fontWeightStrong,\n    fontSize: token.headerFontSize,\n    background: token.headerBg,\n    borderBottom: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorderSecondary}`,\n    borderRadius: `${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)} 0 0`\n  }, clearFix()), {\n    '&-wrapper': {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    '&-title': Object.assign(Object.assign({\n      display: 'inline-block',\n      flex: 1\n    }, textEllipsis), {\n      [`\n          > ${componentCls}-typography,\n          > ${componentCls}-typography-edit-content\n        `]: {\n        insetInlineStart: 0,\n        marginTop: 0,\n        marginBottom: 0\n      }\n    }),\n    [`${antCls}-tabs-top`]: {\n      clear: 'both',\n      marginBottom: tabsMarginBottom,\n      color: token.colorText,\n      fontWeight: 'normal',\n      fontSize: token.fontSize,\n      '&-bar': {\n        borderBottom: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorderSecondary}`\n      }\n    }\n  });\n}; // ============================== Grid ==============================\n\n\nconst genCardGridStyle = token => {\n  const {\n    cardPaddingBase,\n    colorBorderSecondary,\n    cardShadow,\n    lineWidth\n  } = token;\n  return {\n    width: '33.33%',\n    padding: cardPaddingBase,\n    border: 0,\n    borderRadius: 0,\n    boxShadow: `\n      ${unit(lineWidth)} 0 0 0 ${colorBorderSecondary},\n      0 ${unit(lineWidth)} 0 0 ${colorBorderSecondary},\n      ${unit(lineWidth)} ${unit(lineWidth)} 0 0 ${colorBorderSecondary},\n      ${unit(lineWidth)} 0 0 0 ${colorBorderSecondary} inset,\n      0 ${unit(lineWidth)} 0 0 ${colorBorderSecondary} inset;\n    `,\n    transition: `all ${token.motionDurationMid}`,\n    '&-hoverable:hover': {\n      position: 'relative',\n      zIndex: 1,\n      boxShadow: cardShadow\n    }\n  };\n}; // ============================== Actions ==============================\n\n\nconst genCardActionsStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    actionsLiMargin,\n    cardActionsIconSize,\n    colorBorderSecondary,\n    actionsBg\n  } = token;\n  return Object.assign(Object.assign({\n    margin: 0,\n    padding: 0,\n    listStyle: 'none',\n    background: actionsBg,\n    borderTop: `${unit(token.lineWidth)} ${token.lineType} ${colorBorderSecondary}`,\n    display: 'flex',\n    borderRadius: `0 0 ${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)}`\n  }, clearFix()), {\n    '& > li': {\n      margin: actionsLiMargin,\n      color: token.colorTextDescription,\n      textAlign: 'center',\n      '> span': {\n        position: 'relative',\n        display: 'block',\n        minWidth: token.calc(token.cardActionsIconSize).mul(2).equal(),\n        fontSize: token.fontSize,\n        lineHeight: token.lineHeight,\n        cursor: 'pointer',\n        '&:hover': {\n          color: token.colorPrimary,\n          transition: `color ${token.motionDurationMid}`\n        },\n        [`a:not(${componentCls}-btn), > ${iconCls}`]: {\n          display: 'inline-block',\n          width: '100%',\n          color: token.colorTextDescription,\n          lineHeight: unit(token.fontHeight),\n          transition: `color ${token.motionDurationMid}`,\n          '&:hover': {\n            color: token.colorPrimary\n          }\n        },\n        [`> ${iconCls}`]: {\n          fontSize: cardActionsIconSize,\n          lineHeight: unit(token.calc(cardActionsIconSize).mul(token.lineHeight).equal())\n        }\n      },\n      '&:not(:last-child)': {\n        borderInlineEnd: `${unit(token.lineWidth)} ${token.lineType} ${colorBorderSecondary}`\n      }\n    }\n  });\n}; // ============================== Meta ==============================\n\n\nconst genCardMetaStyle = token => Object.assign(Object.assign({\n  margin: `${unit(token.calc(token.marginXXS).mul(-1).equal())} 0`,\n  display: 'flex'\n}, clearFix()), {\n  '&-avatar': {\n    paddingInlineEnd: token.padding\n  },\n  '&-detail': {\n    overflow: 'hidden',\n    flex: 1,\n    '> div:not(:last-child)': {\n      marginBottom: token.marginXS\n    }\n  },\n  '&-title': Object.assign({\n    color: token.colorTextHeading,\n    fontWeight: token.fontWeightStrong,\n    fontSize: token.fontSizeLG\n  }, textEllipsis),\n  '&-description': {\n    color: token.colorTextDescription\n  }\n}); // ============================== Inner ==============================\n\n\nconst genCardTypeInnerStyle = token => {\n  const {\n    componentCls,\n    cardPaddingBase,\n    colorFillAlter\n  } = token;\n  return {\n    [`${componentCls}-head`]: {\n      padding: `0 ${unit(cardPaddingBase)}`,\n      background: colorFillAlter,\n      '&-title': {\n        fontSize: token.fontSize\n      }\n    },\n    [`${componentCls}-body`]: {\n      padding: `${unit(token.padding)} ${unit(cardPaddingBase)}`\n    }\n  };\n}; // ============================== Loading ==============================\n\n\nconst genCardLoadingStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    overflow: 'hidden',\n    [`${componentCls}-body`]: {\n      userSelect: 'none'\n    }\n  };\n}; // ============================== Basic ==============================\n\n\nconst genCardStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    cardShadow,\n    cardHeadPadding,\n    colorBorderSecondary,\n    boxShadowTertiary,\n    cardPaddingBase,\n    extraColor\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadiusLG,\n      [`&:not(${componentCls}-bordered)`]: {\n        boxShadow: boxShadowTertiary\n      },\n      [`${componentCls}-head`]: genCardHeadStyle(token),\n      [`${componentCls}-extra`]: {\n        // https://stackoverflow.com/a/22429853/3040605\n        marginInlineStart: 'auto',\n        color: extraColor,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`${componentCls}-body`]: Object.assign({\n        padding: cardPaddingBase,\n        borderRadius: ` 0 0 ${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)}`\n      }, clearFix()),\n      [`${componentCls}-grid`]: genCardGridStyle(token),\n      [`${componentCls}-cover`]: {\n        '> *': {\n          display: 'block',\n          width: '100%'\n        },\n        [`img, img + ${antCls}-image-mask`]: {\n          borderRadius: `${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)} 0 0`\n        }\n      },\n      [`${componentCls}-actions`]: genCardActionsStyle(token),\n      [`${componentCls}-meta`]: genCardMetaStyle(token)\n    }),\n    [`${componentCls}-bordered`]: {\n      border: `${unit(token.lineWidth)} ${token.lineType} ${colorBorderSecondary}`,\n      [`${componentCls}-cover`]: {\n        marginTop: -1,\n        marginInlineStart: -1,\n        marginInlineEnd: -1\n      }\n    },\n    [`${componentCls}-hoverable`]: {\n      cursor: 'pointer',\n      transition: `box-shadow ${token.motionDurationMid}, border-color ${token.motionDurationMid}`,\n      '&:hover': {\n        borderColor: 'transparent',\n        boxShadow: cardShadow\n      }\n    },\n    [`${componentCls}-contain-grid`]: {\n      borderRadius: `${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)} 0 0 `,\n      [`${componentCls}-body`]: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      [`&:not(${componentCls}-loading) ${componentCls}-body`]: {\n        marginBlockStart: token.calc(token.lineWidth).mul(-1).equal(),\n        marginInlineStart: token.calc(token.lineWidth).mul(-1).equal(),\n        padding: 0\n      }\n    },\n    [`${componentCls}-contain-tabs`]: {\n      [`> ${componentCls}-head`]: {\n        minHeight: 0,\n        [`${componentCls}-head-title, ${componentCls}-extra`]: {\n          paddingTop: cardHeadPadding\n        }\n      }\n    },\n    [`${componentCls}-type-inner`]: genCardTypeInnerStyle(token),\n    [`${componentCls}-loading`]: genCardLoadingStyle(token),\n    [`${componentCls}-rtl`]: {\n      direction: 'rtl'\n    }\n  };\n}; // ============================== Size ==============================\n\n\nconst genCardSizeStyle = token => {\n  const {\n    componentCls,\n    cardPaddingSM,\n    headerHeightSM,\n    headerFontSizeSM\n  } = token;\n  return {\n    [`${componentCls}-small`]: {\n      [`> ${componentCls}-head`]: {\n        minHeight: headerHeightSM,\n        padding: `0 ${unit(cardPaddingSM)}`,\n        fontSize: headerFontSizeSM,\n        [`> ${componentCls}-head-wrapper`]: {\n          [`> ${componentCls}-extra`]: {\n            fontSize: token.fontSize\n          }\n        }\n      },\n      [`> ${componentCls}-body`]: {\n        padding: cardPaddingSM\n      }\n    },\n    [`${componentCls}-small${componentCls}-contain-tabs`]: {\n      [`> ${componentCls}-head`]: {\n        [`${componentCls}-head-title, ${componentCls}-extra`]: {\n          paddingTop: 0,\n          display: 'flex',\n          alignItems: 'center'\n        }\n      }\n    }\n  };\n};\n\nexport const prepareComponentToken = token => ({\n  headerBg: 'transparent',\n  headerFontSize: token.fontSizeLG,\n  headerFontSizeSM: token.fontSize,\n  headerHeight: token.fontSizeLG * token.lineHeightLG + token.padding * 2,\n  headerHeightSM: token.fontSize * token.lineHeight + token.paddingXS * 2,\n  actionsBg: token.colorBgContainer,\n  actionsLiMargin: `${token.paddingSM}px 0`,\n  tabsMarginBottom: -token.padding - token.lineWidth,\n  extraColor: token.colorText\n}); // ============================== Export ==============================\n\nexport default genStyleHooks('Card', token => {\n  const cardToken = mergeToken(token, {\n    cardShadow: token.boxShadowCard,\n    cardHeadPadding: token.padding,\n    cardPaddingBase: token.paddingLG,\n    cardActionsIconSize: token.fontSize,\n    cardPaddingSM: 12 // Fixed padding.\n\n  });\n  return [// Style\n  genCardStyle(cardToken), // Size\n  genCardSizeStyle(cardToken)];\n}, prepareComponentToken);","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/card/style/index.js"],"names":["unit","clearFix","resetComponent","textEllipsis","genStyleHooks","mergeToken","genCardHeadStyle","token","antCls","componentCls","headerHeight","cardPaddingBase","tabsMarginBottom","Object","assign","display","justifyContent","flexDirection","minHeight","marginBottom","padding","color","colorTextHeading","fontWeight","fontWeightStrong","fontSize","headerFontSize","background","headerBg","borderBottom","lineWidth","lineType","colorBorderSecondary","borderRadius","borderRadiusLG","width","alignItems","flex","insetInlineStart","marginTop","clear","colorText","genCardGridStyle","cardShadow","border","boxShadow","transition","motionDurationMid","position","zIndex","genCardActionsStyle","iconCls","actionsLiMargin","cardActionsIconSize","actionsBg","margin","listStyle","borderTop","colorTextDescription","textAlign","minWidth","calc","mul","equal","lineHeight","cursor","colorPrimary","fontHeight","borderInlineEnd","genCardMetaStyle","marginXXS","paddingInlineEnd","overflow","marginXS","fontSizeLG","genCardTypeInnerStyle","colorFillAlter","genCardLoadingStyle","userSelect","genCardStyle","cardHeadPadding","boxShadowTertiary","extraColor","colorBgContainer","marginInlineStart","marginInlineEnd","borderColor","flexWrap","marginBlockStart","paddingTop","direction","genCardSizeStyle","cardPaddingSM","headerHeightSM","headerFontSizeSM","prepareComponentToken","lineHeightLG","paddingXS","paddingSM","cardToken","boxShadowCard","paddingLG"],"mappings":"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","sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { clearFix, resetComponent, textEllipsis } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Styles ==============================\n// ============================== Head ==============================\nconst genCardHeadStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    headerHeight,\n    cardPaddingBase,\n    tabsMarginBottom\n  } = token;\n  return Object.assign(Object.assign({\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    minHeight: headerHeight,\n    marginBottom: -1,\n    padding: `0 ${unit(cardPaddingBase)}`,\n    color: token.colorTextHeading,\n    fontWeight: token.fontWeightStrong,\n    fontSize: token.headerFontSize,\n    background: token.headerBg,\n    borderBottom: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorderSecondary}`,\n    borderRadius: `${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)} 0 0`\n  }, clearFix()), {\n    '&-wrapper': {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    '&-title': Object.assign(Object.assign({\n      display: 'inline-block',\n      flex: 1\n    }, textEllipsis), {\n      [`\n          > ${componentCls}-typography,\n          > ${componentCls}-typography-edit-content\n        `]: {\n        insetInlineStart: 0,\n        marginTop: 0,\n        marginBottom: 0\n      }\n    }),\n    [`${antCls}-tabs-top`]: {\n      clear: 'both',\n      marginBottom: tabsMarginBottom,\n      color: token.colorText,\n      fontWeight: 'normal',\n      fontSize: token.fontSize,\n      '&-bar': {\n        borderBottom: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorderSecondary}`\n      }\n    }\n  });\n};\n// ============================== Grid ==============================\nconst genCardGridStyle = token => {\n  const {\n    cardPaddingBase,\n    colorBorderSecondary,\n    cardShadow,\n    lineWidth\n  } = token;\n  return {\n    width: '33.33%',\n    padding: cardPaddingBase,\n    border: 0,\n    borderRadius: 0,\n    boxShadow: `\n      ${unit(lineWidth)} 0 0 0 ${colorBorderSecondary},\n      0 ${unit(lineWidth)} 0 0 ${colorBorderSecondary},\n      ${unit(lineWidth)} ${unit(lineWidth)} 0 0 ${colorBorderSecondary},\n      ${unit(lineWidth)} 0 0 0 ${colorBorderSecondary} inset,\n      0 ${unit(lineWidth)} 0 0 ${colorBorderSecondary} inset;\n    `,\n    transition: `all ${token.motionDurationMid}`,\n    '&-hoverable:hover': {\n      position: 'relative',\n      zIndex: 1,\n      boxShadow: cardShadow\n    }\n  };\n};\n// ============================== Actions ==============================\nconst genCardActionsStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    actionsLiMargin,\n    cardActionsIconSize,\n    colorBorderSecondary,\n    actionsBg\n  } = token;\n  return Object.assign(Object.assign({\n    margin: 0,\n    padding: 0,\n    listStyle: 'none',\n    background: actionsBg,\n    borderTop: `${unit(token.lineWidth)} ${token.lineType} ${colorBorderSecondary}`,\n    display: 'flex',\n    borderRadius: `0 0 ${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)}`\n  }, clearFix()), {\n    '& > li': {\n      margin: actionsLiMargin,\n      color: token.colorTextDescription,\n      textAlign: 'center',\n      '> span': {\n        position: 'relative',\n        display: 'block',\n        minWidth: token.calc(token.cardActionsIconSize).mul(2).equal(),\n        fontSize: token.fontSize,\n        lineHeight: token.lineHeight,\n        cursor: 'pointer',\n        '&:hover': {\n          color: token.colorPrimary,\n          transition: `color ${token.motionDurationMid}`\n        },\n        [`a:not(${componentCls}-btn), > ${iconCls}`]: {\n          display: 'inline-block',\n          width: '100%',\n          color: token.colorTextDescription,\n          lineHeight: unit(token.fontHeight),\n          transition: `color ${token.motionDurationMid}`,\n          '&:hover': {\n            color: token.colorPrimary\n          }\n        },\n        [`> ${iconCls}`]: {\n          fontSize: cardActionsIconSize,\n          lineHeight: unit(token.calc(cardActionsIconSize).mul(token.lineHeight).equal())\n        }\n      },\n      '&:not(:last-child)': {\n        borderInlineEnd: `${unit(token.lineWidth)} ${token.lineType} ${colorBorderSecondary}`\n      }\n    }\n  });\n};\n// ============================== Meta ==============================\nconst genCardMetaStyle = token => Object.assign(Object.assign({\n  margin: `${unit(token.calc(token.marginXXS).mul(-1).equal())} 0`,\n  display: 'flex'\n}, clearFix()), {\n  '&-avatar': {\n    paddingInlineEnd: token.padding\n  },\n  '&-detail': {\n    overflow: 'hidden',\n    flex: 1,\n    '> div:not(:last-child)': {\n      marginBottom: token.marginXS\n    }\n  },\n  '&-title': Object.assign({\n    color: token.colorTextHeading,\n    fontWeight: token.fontWeightStrong,\n    fontSize: token.fontSizeLG\n  }, textEllipsis),\n  '&-description': {\n    color: token.colorTextDescription\n  }\n});\n// ============================== Inner ==============================\nconst genCardTypeInnerStyle = token => {\n  const {\n    componentCls,\n    cardPaddingBase,\n    colorFillAlter\n  } = token;\n  return {\n    [`${componentCls}-head`]: {\n      padding: `0 ${unit(cardPaddingBase)}`,\n      background: colorFillAlter,\n      '&-title': {\n        fontSize: token.fontSize\n      }\n    },\n    [`${componentCls}-body`]: {\n      padding: `${unit(token.padding)} ${unit(cardPaddingBase)}`\n    }\n  };\n};\n// ============================== Loading ==============================\nconst genCardLoadingStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    overflow: 'hidden',\n    [`${componentCls}-body`]: {\n      userSelect: 'none'\n    }\n  };\n};\n// ============================== Basic ==============================\nconst genCardStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    cardShadow,\n    cardHeadPadding,\n    colorBorderSecondary,\n    boxShadowTertiary,\n    cardPaddingBase,\n    extraColor\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadiusLG,\n      [`&:not(${componentCls}-bordered)`]: {\n        boxShadow: boxShadowTertiary\n      },\n      [`${componentCls}-head`]: genCardHeadStyle(token),\n      [`${componentCls}-extra`]: {\n        // https://stackoverflow.com/a/22429853/3040605\n        marginInlineStart: 'auto',\n        color: extraColor,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`${componentCls}-body`]: Object.assign({\n        padding: cardPaddingBase,\n        borderRadius: ` 0 0 ${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)}`\n      }, clearFix()),\n      [`${componentCls}-grid`]: genCardGridStyle(token),\n      [`${componentCls}-cover`]: {\n        '> *': {\n          display: 'block',\n          width: '100%'\n        },\n        [`img, img + ${antCls}-image-mask`]: {\n          borderRadius: `${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)} 0 0`\n        }\n      },\n      [`${componentCls}-actions`]: genCardActionsStyle(token),\n      [`${componentCls}-meta`]: genCardMetaStyle(token)\n    }),\n    [`${componentCls}-bordered`]: {\n      border: `${unit(token.lineWidth)} ${token.lineType} ${colorBorderSecondary}`,\n      [`${componentCls}-cover`]: {\n        marginTop: -1,\n        marginInlineStart: -1,\n        marginInlineEnd: -1\n      }\n    },\n    [`${componentCls}-hoverable`]: {\n      cursor: 'pointer',\n      transition: `box-shadow ${token.motionDurationMid}, border-color ${token.motionDurationMid}`,\n      '&:hover': {\n        borderColor: 'transparent',\n        boxShadow: cardShadow\n      }\n    },\n    [`${componentCls}-contain-grid`]: {\n      borderRadius: `${unit(token.borderRadiusLG)} ${unit(token.borderRadiusLG)} 0 0 `,\n      [`${componentCls}-body`]: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      [`&:not(${componentCls}-loading) ${componentCls}-body`]: {\n        marginBlockStart: token.calc(token.lineWidth).mul(-1).equal(),\n        marginInlineStart: token.calc(token.lineWidth).mul(-1).equal(),\n        padding: 0\n      }\n    },\n    [`${componentCls}-contain-tabs`]: {\n      [`> ${componentCls}-head`]: {\n        minHeight: 0,\n        [`${componentCls}-head-title, ${componentCls}-extra`]: {\n          paddingTop: cardHeadPadding\n        }\n      }\n    },\n    [`${componentCls}-type-inner`]: genCardTypeInnerStyle(token),\n    [`${componentCls}-loading`]: genCardLoadingStyle(token),\n    [`${componentCls}-rtl`]: {\n      direction: 'rtl'\n    }\n  };\n};\n// ============================== Size ==============================\nconst genCardSizeStyle = token => {\n  const {\n    componentCls,\n    cardPaddingSM,\n    headerHeightSM,\n    headerFontSizeSM\n  } = token;\n  return {\n    [`${componentCls}-small`]: {\n      [`> ${componentCls}-head`]: {\n        minHeight: headerHeightSM,\n        padding: `0 ${unit(cardPaddingSM)}`,\n        fontSize: headerFontSizeSM,\n        [`> ${componentCls}-head-wrapper`]: {\n          [`> ${componentCls}-extra`]: {\n            fontSize: token.fontSize\n          }\n        }\n      },\n      [`> ${componentCls}-body`]: {\n        padding: cardPaddingSM\n      }\n    },\n    [`${componentCls}-small${componentCls}-contain-tabs`]: {\n      [`> ${componentCls}-head`]: {\n        [`${componentCls}-head-title, ${componentCls}-extra`]: {\n          paddingTop: 0,\n          display: 'flex',\n          alignItems: 'center'\n        }\n      }\n    }\n  };\n};\nexport const prepareComponentToken = token => ({\n  headerBg: 'transparent',\n  headerFontSize: token.fontSizeLG,\n  headerFontSizeSM: token.fontSize,\n  headerHeight: token.fontSizeLG * token.lineHeightLG + token.padding * 2,\n  headerHeightSM: token.fontSize * token.lineHeight + token.paddingXS * 2,\n  actionsBg: token.colorBgContainer,\n  actionsLiMargin: `${token.paddingSM}px 0`,\n  tabsMarginBottom: -token.padding - token.lineWidth,\n  extraColor: token.colorText\n});\n// ============================== Export ==============================\nexport default genStyleHooks('Card', token => {\n  const cardToken = mergeToken(token, {\n    cardShadow: token.boxShadowCard,\n    cardHeadPadding: token.padding,\n    cardPaddingBase: token.paddingLG,\n    cardActionsIconSize: token.fontSize,\n    cardPaddingSM: 12 // Fixed padding.\n  });\n  return [\n  // Style\n  genCardStyle(cardToken),\n  // Size\n  genCardSizeStyle(cardToken)];\n}, prepareComponentToken);"]},"metadata":{},"sourceType":"module"}