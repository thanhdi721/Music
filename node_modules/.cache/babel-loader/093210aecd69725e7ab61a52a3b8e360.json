{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Pagination from '../pagination';\nimport ListItem from './ListItem';\nexport const OmitProps = ['handleFilter', 'handleClear', 'checkedKeys'];\n\nconst parsePagination = pagination => {\n  const defaultPagination = {\n    simple: true,\n    showSizeChanger: false,\n    showLessItems: false\n  };\n  return Object.assign(Object.assign({}, defaultPagination), pagination);\n};\n\nconst TransferListBody = (props, ref) => {\n  const {\n    prefixCls,\n    filteredRenderItems,\n    selectedKeys,\n    disabled: globalDisabled,\n    showRemove,\n    pagination,\n    onScroll,\n    onItemSelect,\n    onItemRemove\n  } = props;\n  const [current, setCurrent] = React.useState(1);\n  const mergedPagination = React.useMemo(() => {\n    if (!pagination) {\n      return null;\n    }\n\n    const convertPagination = typeof pagination === 'object' ? pagination : {};\n    return parsePagination(convertPagination);\n  }, [pagination]);\n  const [pageSize, setPageSize] = useMergedState(10, {\n    value: mergedPagination === null || mergedPagination === void 0 ? void 0 : mergedPagination.pageSize\n  });\n  React.useEffect(() => {\n    if (mergedPagination) {\n      const maxPageCount = Math.ceil(filteredRenderItems.length / pageSize);\n      setCurrent(Math.min(current, maxPageCount));\n    }\n  }, [filteredRenderItems, mergedPagination, pageSize]);\n\n  const onInternalClick = (item, e) => {\n    onItemSelect(item.key, !selectedKeys.includes(item.key), e);\n  };\n\n  const onRemove = item => {\n    onItemRemove === null || onItemRemove === void 0 ? void 0 : onItemRemove([item.key]);\n  };\n\n  const onPageChange = cur => {\n    setCurrent(cur);\n  };\n\n  const onSizeChange = (cur, size) => {\n    setCurrent(cur);\n    setPageSize(size);\n  };\n\n  const memoizedItems = React.useMemo(() => {\n    const displayItems = mergedPagination ? filteredRenderItems.slice((current - 1) * pageSize, current * pageSize) : filteredRenderItems;\n    return displayItems;\n  }, [current, filteredRenderItems, mergedPagination, pageSize]);\n  React.useImperativeHandle(ref, () => ({\n    items: memoizedItems\n  }));\n  const paginationNode = mergedPagination ? /*#__PURE__*/React.createElement(Pagination, {\n    size: \"small\",\n    disabled: globalDisabled,\n    simple: mergedPagination.simple,\n    pageSize: pageSize,\n    showLessItems: mergedPagination.showLessItems,\n    showSizeChanger: mergedPagination.showSizeChanger,\n    className: `${prefixCls}-pagination`,\n    total: filteredRenderItems.length,\n    current: current,\n    onChange: onPageChange,\n    onShowSizeChange: onSizeChange\n  }) : null;\n  const cls = classNames(`${prefixCls}-content`, {\n    [`${prefixCls}-content-show-remove`]: showRemove\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    className: cls,\n    onScroll: onScroll\n  }, (memoizedItems || []).map(_ref => {\n    let {\n      renderedEl,\n      renderedText,\n      item\n    } = _ref;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: item.key,\n      item: item,\n      renderedText: renderedText,\n      renderedEl: renderedEl,\n      prefixCls: prefixCls,\n      showRemove: showRemove,\n      onClick: onInternalClick,\n      onRemove: onRemove,\n      checked: selectedKeys.includes(item.key),\n      disabled: globalDisabled || item.disabled\n    });\n  })), paginationNode);\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  TransferListBody.displayName = 'TransferListBody';\n}\n\nexport default /*#__PURE__*/React.forwardRef(TransferListBody);","map":{"version":3,"sources":["D:/WED/SpotifyProject-master/node_modules/antd/es/transfer/ListBody.js"],"names":["React","classNames","useMergedState","Pagination","ListItem","OmitProps","parsePagination","pagination","defaultPagination","simple","showSizeChanger","showLessItems","Object","assign","TransferListBody","props","ref","prefixCls","filteredRenderItems","selectedKeys","disabled","globalDisabled","showRemove","onScroll","onItemSelect","onItemRemove","current","setCurrent","useState","mergedPagination","useMemo","convertPagination","pageSize","setPageSize","value","useEffect","maxPageCount","Math","ceil","length","min","onInternalClick","item","e","key","includes","onRemove","onPageChange","cur","onSizeChange","size","memoizedItems","displayItems","slice","useImperativeHandle","items","paginationNode","createElement","className","total","onChange","onShowSizeChange","cls","Fragment","map","_ref","renderedEl","renderedText","onClick","checked","process","env","NODE_ENV","displayName","forwardRef"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Pagination from '../pagination';\nimport ListItem from './ListItem';\nexport const OmitProps = ['handleFilter', 'handleClear', 'checkedKeys'];\nconst parsePagination = pagination => {\n  const defaultPagination = {\n    simple: true,\n    showSizeChanger: false,\n    showLessItems: false\n  };\n  return Object.assign(Object.assign({}, defaultPagination), pagination);\n};\nconst TransferListBody = (props, ref) => {\n  const {\n    prefixCls,\n    filteredRenderItems,\n    selectedKeys,\n    disabled: globalDisabled,\n    showRemove,\n    pagination,\n    onScroll,\n    onItemSelect,\n    onItemRemove\n  } = props;\n  const [current, setCurrent] = React.useState(1);\n  const mergedPagination = React.useMemo(() => {\n    if (!pagination) {\n      return null;\n    }\n    const convertPagination = typeof pagination === 'object' ? pagination : {};\n    return parsePagination(convertPagination);\n  }, [pagination]);\n  const [pageSize, setPageSize] = useMergedState(10, {\n    value: mergedPagination === null || mergedPagination === void 0 ? void 0 : mergedPagination.pageSize\n  });\n  React.useEffect(() => {\n    if (mergedPagination) {\n      const maxPageCount = Math.ceil(filteredRenderItems.length / pageSize);\n      setCurrent(Math.min(current, maxPageCount));\n    }\n  }, [filteredRenderItems, mergedPagination, pageSize]);\n  const onInternalClick = (item, e) => {\n    onItemSelect(item.key, !selectedKeys.includes(item.key), e);\n  };\n  const onRemove = item => {\n    onItemRemove === null || onItemRemove === void 0 ? void 0 : onItemRemove([item.key]);\n  };\n  const onPageChange = cur => {\n    setCurrent(cur);\n  };\n  const onSizeChange = (cur, size) => {\n    setCurrent(cur);\n    setPageSize(size);\n  };\n  const memoizedItems = React.useMemo(() => {\n    const displayItems = mergedPagination ? filteredRenderItems.slice((current - 1) * pageSize, current * pageSize) : filteredRenderItems;\n    return displayItems;\n  }, [current, filteredRenderItems, mergedPagination, pageSize]);\n  React.useImperativeHandle(ref, () => ({\n    items: memoizedItems\n  }));\n  const paginationNode = mergedPagination ? ( /*#__PURE__*/React.createElement(Pagination, {\n    size: \"small\",\n    disabled: globalDisabled,\n    simple: mergedPagination.simple,\n    pageSize: pageSize,\n    showLessItems: mergedPagination.showLessItems,\n    showSizeChanger: mergedPagination.showSizeChanger,\n    className: `${prefixCls}-pagination`,\n    total: filteredRenderItems.length,\n    current: current,\n    onChange: onPageChange,\n    onShowSizeChange: onSizeChange\n  })) : null;\n  const cls = classNames(`${prefixCls}-content`, {\n    [`${prefixCls}-content-show-remove`]: showRemove\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    className: cls,\n    onScroll: onScroll\n  }, (memoizedItems || []).map(_ref => {\n    let {\n      renderedEl,\n      renderedText,\n      item\n    } = _ref;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: item.key,\n      item: item,\n      renderedText: renderedText,\n      renderedEl: renderedEl,\n      prefixCls: prefixCls,\n      showRemove: showRemove,\n      onClick: onInternalClick,\n      onRemove: onRemove,\n      checked: selectedKeys.includes(item.key),\n      disabled: globalDisabled || item.disabled\n    });\n  })), paginationNode);\n};\nif (process.env.NODE_ENV !== 'production') {\n  TransferListBody.displayName = 'TransferListBody';\n}\nexport default /*#__PURE__*/React.forwardRef(TransferListBody);"]},"metadata":{},"sourceType":"module"}