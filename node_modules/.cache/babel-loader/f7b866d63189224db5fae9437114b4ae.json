{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { ConfigContext } from '../config-provider';\nimport useSize from '../config-provider/hooks/useSize';\nimport { RadioGroupContextProvider } from './context';\nimport Radio from './radio';\nimport useStyle from './style';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nconst RadioGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [value, setValue] = useMergedState(props.defaultValue, {\n    value: props.value\n  });\n\n  const onRadioChange = ev => {\n    const lastValue = value;\n    const val = ev.target.value;\n\n    if (!('value' in props)) {\n      setValue(val);\n    }\n\n    const {\n      onChange\n    } = props;\n\n    if (onChange && val !== lastValue) {\n      onChange(ev);\n    }\n  };\n\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    options,\n    buttonStyle = 'outline',\n    disabled,\n    children,\n    size: customizeSize,\n    style,\n    id,\n    onMouseEnter,\n    onMouseLeave,\n    onFocus,\n    onBlur\n  } = props;\n  const prefixCls = getPrefixCls('radio', customizePrefixCls);\n  const groupPrefixCls = `${prefixCls}-group`; // Style\n\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  let childrenToRender = children; // 如果存在 options, 优先使用\n\n  if (options && options.length > 0) {\n    childrenToRender = options.map(option => {\n      if (typeof option === 'string' || typeof option === 'number') {\n        // 此处类型自动推导为 string\n        return /*#__PURE__*/React.createElement(Radio, {\n          key: option.toString(),\n          prefixCls: prefixCls,\n          disabled: disabled,\n          value: option,\n          checked: value === option\n        }, option);\n      } // 此处类型自动推导为 { label: string value: string }\n\n\n      return /*#__PURE__*/React.createElement(Radio, {\n        key: `radio-group-value-options-${option.value}`,\n        prefixCls: prefixCls,\n        disabled: option.disabled || disabled,\n        value: option.value,\n        checked: value === option.value,\n        title: option.title,\n        style: option.style,\n        id: option.id,\n        required: option.required\n      }, option.label);\n    });\n  }\n\n  const mergedSize = useSize(customizeSize);\n  const classString = classNames(groupPrefixCls, `${groupPrefixCls}-${buttonStyle}`, {\n    [`${groupPrefixCls}-${mergedSize}`]: mergedSize,\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId, cssVarCls, rootCls);\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", Object.assign({}, pickAttrs(props, {\n    aria: true,\n    data: true\n  }), {\n    className: classString,\n    style: style,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    id: id,\n    ref: ref\n  }), /*#__PURE__*/React.createElement(RadioGroupContextProvider, {\n    value: {\n      onChange: onRadioChange,\n      value,\n      disabled: props.disabled,\n      name: props.name,\n      optionType: props.optionType\n    }\n  }, childrenToRender)));\n});\nexport default /*#__PURE__*/React.memo(RadioGroup);","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Music/node_modules/antd/es/radio/group.js"],"names":["React","classNames","useMergedState","pickAttrs","ConfigContext","useSize","RadioGroupContextProvider","Radio","useStyle","useCSSVarCls","RadioGroup","forwardRef","props","ref","getPrefixCls","direction","useContext","value","setValue","defaultValue","onRadioChange","ev","lastValue","val","target","onChange","prefixCls","customizePrefixCls","className","rootClassName","options","buttonStyle","disabled","children","size","customizeSize","style","id","onMouseEnter","onMouseLeave","onFocus","onBlur","groupPrefixCls","rootCls","wrapCSSVar","hashId","cssVarCls","childrenToRender","length","map","option","createElement","key","toString","checked","title","required","label","mergedSize","classString","Object","assign","aria","data","name","optionType","memo"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { ConfigContext } from '../config-provider';\nimport useSize from '../config-provider/hooks/useSize';\nimport { RadioGroupContextProvider } from './context';\nimport Radio from './radio';\nimport useStyle from './style';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nconst RadioGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [value, setValue] = useMergedState(props.defaultValue, {\n    value: props.value\n  });\n  const onRadioChange = ev => {\n    const lastValue = value;\n    const val = ev.target.value;\n    if (!('value' in props)) {\n      setValue(val);\n    }\n    const {\n      onChange\n    } = props;\n    if (onChange && val !== lastValue) {\n      onChange(ev);\n    }\n  };\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    options,\n    buttonStyle = 'outline',\n    disabled,\n    children,\n    size: customizeSize,\n    style,\n    id,\n    onMouseEnter,\n    onMouseLeave,\n    onFocus,\n    onBlur\n  } = props;\n  const prefixCls = getPrefixCls('radio', customizePrefixCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  // Style\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  let childrenToRender = children;\n  // 如果存在 options, 优先使用\n  if (options && options.length > 0) {\n    childrenToRender = options.map(option => {\n      if (typeof option === 'string' || typeof option === 'number') {\n        // 此处类型自动推导为 string\n        return /*#__PURE__*/React.createElement(Radio, {\n          key: option.toString(),\n          prefixCls: prefixCls,\n          disabled: disabled,\n          value: option,\n          checked: value === option\n        }, option);\n      }\n      // 此处类型自动推导为 { label: string value: string }\n      return /*#__PURE__*/React.createElement(Radio, {\n        key: `radio-group-value-options-${option.value}`,\n        prefixCls: prefixCls,\n        disabled: option.disabled || disabled,\n        value: option.value,\n        checked: value === option.value,\n        title: option.title,\n        style: option.style,\n        id: option.id,\n        required: option.required\n      }, option.label);\n    });\n  }\n  const mergedSize = useSize(customizeSize);\n  const classString = classNames(groupPrefixCls, `${groupPrefixCls}-${buttonStyle}`, {\n    [`${groupPrefixCls}-${mergedSize}`]: mergedSize,\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId, cssVarCls, rootCls);\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", Object.assign({}, pickAttrs(props, {\n    aria: true,\n    data: true\n  }), {\n    className: classString,\n    style: style,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    id: id,\n    ref: ref\n  }), /*#__PURE__*/React.createElement(RadioGroupContextProvider, {\n    value: {\n      onChange: onRadioChange,\n      value,\n      disabled: props.disabled,\n      name: props.name,\n      optionType: props.optionType\n    }\n  }, childrenToRender)));\n});\nexport default /*#__PURE__*/React.memo(RadioGroup);"]},"metadata":{},"sourceType":"module"}